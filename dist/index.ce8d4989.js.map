{"mappings":"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","sources":["node_modules/process/browser.js","node_modules/@firebase/util/src/constants.ts","node_modules/@firebase/util/src/assert.ts","node_modules/@firebase/util/src/crypt.ts","node_modules/@firebase/util/src/deepCopy.ts","node_modules/@firebase/util/src/defaults.ts","node_modules/@firebase/util/src/global.ts","node_modules/@firebase/util/src/deferred.ts","node_modules/@firebase/util/src/emulator.ts","node_modules/@firebase/util/src/environment.ts","node_modules/@firebase/util/src/errors.ts","node_modules/@firebase/util/src/json.ts","node_modules/@firebase/util/src/jwt.ts","node_modules/@firebase/util/src/obj.ts","node_modules/@firebase/util/src/query.ts","node_modules/@firebase/util/src/sha1.ts","node_modules/@firebase/util/src/validation.ts","node_modules/@firebase/util/src/utf8.ts","node_modules/@firebase/util/src/compat.ts","node_modules/@firebase/component/src/component.ts","node_modules/@firebase/component/src/constants.ts","node_modules/@firebase/component/src/provider.ts","node_modules/@firebase/component/src/component_container.ts","node_modules/@firebase/logger/src/logger.ts","node_modules/idb/build/wrap-idb-value.js","node_modules/idb/build/index.js","node_modules/@firebase/app/src/platformLoggerService.ts","node_modules/@firebase/app/src/logger.ts","node_modules/@firebase/app/src/constants.ts","node_modules/@firebase/app/src/internal.ts","node_modules/@firebase/app/src/errors.ts","node_modules/@firebase/app/src/firebaseApp.ts","node_modules/@firebase/app/src/api.ts","node_modules/@firebase/app/src/indexeddb.ts","node_modules/@firebase/app/src/heartbeatService.ts","node_modules/@firebase/app/src/registerCoreComponents.ts","node_modules/@firebase/app/src/index.ts","node_modules/firebase/app/index.ts","node_modules/@firebase/database/src/core/version.ts","node_modules/@firebase/database/src/core/storage/DOMStorageWrapper.ts","node_modules/@firebase/database/src/core/storage/MemoryStorage.ts","node_modules/@firebase/database/src/core/storage/storage.ts","node_modules/@firebase/database/src/core/util/util.ts","node_modules/@firebase/database/src/core/AppCheckTokenProvider.ts","node_modules/@firebase/database/src/core/AuthTokenProvider.ts","node_modules/@firebase/database/src/realtime/Constants.ts","node_modules/@firebase/database/src/core/RepoInfo.ts","node_modules/@firebase/database/src/core/stats/StatsCollection.ts","node_modules/@firebase/database/src/core/stats/StatsManager.ts","node_modules/@firebase/database/src/realtime/polling/PacketReceiver.ts","node_modules/@firebase/database/src/realtime/BrowserPollConnection.ts","node_modules/@firebase/database/src/realtime/WebSocketConnection.ts","node_modules/@firebase/database/src/realtime/TransportManager.ts","node_modules/@firebase/database/src/realtime/Connection.ts","node_modules/@firebase/database/src/core/ServerActions.ts","node_modules/@firebase/database/src/core/util/EventEmitter.ts","node_modules/@firebase/database/src/core/util/OnlineMonitor.ts","node_modules/@firebase/database/src/core/util/Path.ts","node_modules/@firebase/database/src/core/util/VisibilityMonitor.ts","node_modules/@firebase/database/src/core/PersistentConnection.ts","node_modules/@firebase/database/src/core/snap/Node.ts","node_modules/@firebase/database/src/core/snap/indexes/Index.ts","node_modules/@firebase/database/src/core/snap/indexes/KeyIndex.ts","node_modules/@firebase/database/src/core/util/SortedMap.ts","node_modules/@firebase/database/src/core/snap/comparators.ts","node_modules/@firebase/database/src/core/snap/snap.ts","node_modules/@firebase/database/src/core/snap/LeafNode.ts","node_modules/@firebase/database/src/core/snap/indexes/PriorityIndex.ts","node_modules/@firebase/database/src/core/snap/childSet.ts","node_modules/@firebase/database/src/core/snap/IndexMap.ts","node_modules/@firebase/database/src/core/snap/ChildrenNode.ts","node_modules/@firebase/database/src/core/snap/nodeFromJSON.ts","node_modules/@firebase/database/src/core/snap/indexes/PathIndex.ts","node_modules/@firebase/database/src/core/snap/indexes/ValueIndex.ts","node_modules/@firebase/database/src/core/view/Change.ts","node_modules/@firebase/database/src/core/view/filter/IndexedFilter.ts","node_modules/@firebase/database/src/core/view/filter/RangedFilter.ts","node_modules/@firebase/database/src/core/view/filter/LimitedFilter.ts","node_modules/@firebase/database/src/core/view/QueryParams.ts","node_modules/@firebase/database/src/core/ReadonlyRestClient.ts","node_modules/@firebase/database/src/core/SnapshotHolder.ts","node_modules/@firebase/database/src/core/SparseSnapshotTree.ts","node_modules/@firebase/database/src/core/stats/StatsListener.ts","node_modules/@firebase/database/src/core/stats/StatsReporter.ts","node_modules/@firebase/database/src/core/operation/Operation.ts","node_modules/@firebase/database/src/core/operation/AckUserWrite.ts","node_modules/@firebase/database/src/core/operation/ListenComplete.ts","node_modules/@firebase/database/src/core/operation/Overwrite.ts","node_modules/@firebase/database/src/core/operation/Merge.ts","node_modules/@firebase/database/src/core/view/CacheNode.ts","node_modules/@firebase/database/src/core/view/EventGenerator.ts","node_modules/@firebase/database/src/core/view/ViewCache.ts","node_modules/@firebase/database/src/core/util/ImmutableTree.ts","node_modules/@firebase/database/src/core/CompoundWrite.ts","node_modules/@firebase/database/src/core/WriteTree.ts","node_modules/@firebase/database/src/core/view/ChildChangeAccumulator.ts","node_modules/@firebase/database/src/core/view/CompleteChildSource.ts","node_modules/@firebase/database/src/core/view/ViewProcessor.ts","node_modules/@firebase/database/src/core/view/View.ts","node_modules/@firebase/database/src/core/SyncPoint.ts","node_modules/@firebase/database/src/core/SyncTree.ts","node_modules/@firebase/database/src/core/util/ServerValues.ts","node_modules/@firebase/database/src/core/util/Tree.ts","node_modules/@firebase/database/src/core/util/validation.ts","node_modules/@firebase/database/src/core/view/EventQueue.ts","node_modules/@firebase/database/src/core/Repo.ts","node_modules/@firebase/database/src/core/util/libs/parser.ts","node_modules/@firebase/database/src/core/util/NextPushId.ts","node_modules/@firebase/database/src/core/view/Event.ts","node_modules/@firebase/database/src/core/view/EventRegistration.ts","node_modules/@firebase/database/src/api/Reference_impl.ts","node_modules/@firebase/database/src/api/Database.ts","node_modules/@firebase/database/src/api/test_access.ts","node_modules/@firebase/database/src/register.ts","node_modules/@firebase/database/src/index.ts","src/rtdb.ts","src/state.ts","node_modules/@vaadin/router/src/utils.js","node_modules/@vaadin/router/src/triggers/click.js","node_modules/@vaadin/router/src/triggers/popstate.js","node_modules/@vaadin/router/node_modules/path-to-regexp/index.js","node_modules/@vaadin/router/src/resolver/matchPath.js","node_modules/@vaadin/router/src/resolver/matchRoute.js","node_modules/@vaadin/router/src/resolver/resolveRoute.js","node_modules/@vaadin/router/src/resolver/resolver.js","node_modules/@vaadin/router/src/resolver/generateUrls.js","node_modules/@vaadin/router/src/triggers/setNavigationTriggers.js","node_modules/@vaadin/router/src/transitions/animate.js","node_modules/@vaadin/router/src/router.js","node_modules/@vaadin/router/node_modules/@vaadin/vaadin-development-mode-detector/vaadin-development-mode-detector.js","node_modules/@vaadin/router/node_modules/@vaadin/vaadin-usage-statistics/vaadin-usage-statistics-collect.js","node_modules/@vaadin/router/src/router-meta.js","node_modules/@vaadin/router/src/router-config.js","src/pages/welcome-page/login/login.ts","src/pages/welcome-page/signup/signup.ts","src/pages/select-page/select-page.ts","src/pages/chat-page/chat-page.ts","src/router.ts","src/index.ts"],"sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Throws an error if the provided assertion is falsy\n */\nexport const assert = function (assertion: unknown, message: string): void {\n  if (!assertion) {\n    throw assertionError(message);\n  }\n};\n\n/**\n * Returns an Error object suitable for throwing.\n */\nexport const assertionError = function (message: string): Error {\n  return new Error(\n    'Firebase Database (' +\n      CONSTANTS.SDK_VERSION +\n      ') INTERNAL ASSERT FAILED: ' +\n      message\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The semver (www.semver.org) version of the SDK. */\nexport let SDK_VERSION = '';\n\n/**\n * SDK_VERSION should be set before any database instance is created\n * @internal\n */\nexport function setSDKVersion(version: string): void {\n  SDK_VERSION = version;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key - The key to save the value under\n   * @param value - The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @returns The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName - Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @returns Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\n\nimport { SessionStorage } from '../storage/storage';\nimport { QueryContext } from '../view/EventRegistration';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str - The string to hash\n * @returns {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ - A flag to turn on logging, or a custom logger\n * @param persistent - Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @returns {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str - The string\n * @param segsize - The maximum number of chars in the string.\n * @returns The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj - The object or array to iterate over\n * @param fn - The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback - Callback function.\n * @param context - Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v - A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n */\nexport function errorForServerCode(code: string, query: QueryContext): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query._path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n}\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in kyes, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn - The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback - Optional onComplete callback.\n * @param varArgs - Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @returns {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn - Function to run.\n * @param time - Milliseconds to wait before running.\n * @returns The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // Note: at the time of this comment, unrefTimer is under the unstable set of APIs. Run with --unstable to enable the API.\n  if (\n    typeof timeout === 'number' &&\n    // @ts-ignore Is only defined in Deno environments.\n    typeof Deno !== 'undefined' &&\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno['unrefTimer']\n  ) {\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno.unrefTimer(timeout);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } else if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { warn } from './util/util';\n\n/**\n * Abstraction around AppCheck's token fetching capabilities.\n */\nexport class AppCheckTokenProvider {\n  private appCheck?: FirebaseAppCheckInternal;\n  constructor(\n    private appName_: string,\n    private appCheckProvider?: Provider<AppCheckInternalComponentName>\n  ) {\n    this.appCheck = appCheckProvider?.getImmediate({ optional: true });\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(appCheck => (this.appCheck = appCheck));\n    }\n  }\n\n  getToken(forceRefresh?: boolean): Promise<AppCheckTokenResult> {\n    if (!this.appCheck) {\n      return new Promise<AppCheckTokenResult>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.appCheck) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n    return this.appCheck.getToken(forceRefresh);\n  }\n\n  addTokenChangeListener(listener: AppCheckTokenListener) {\n    this.appCheckProvider\n      ?.get()\n      .then(appCheck => appCheck.addTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    warn(\n      `Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\n        'are invalid. This usually indicates your app was not initialized correctly.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { log, warn } from './util/util';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n\n  constructor(\n    private appName_: string,\n    private firebaseOptions_: object,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.onInit(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return new Promise<FirebaseAuthTokenData>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.auth_) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.appName_ +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\nexport class EmulatorTokenProvider implements AuthTokenProvider {\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n  static OWNER = 'owner';\n\n  constructor(private accessToken: string) {}\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nexport const FORGE_DOMAIN_RE =\n  /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const APP_CHECK_TOKEN_PARAM = 'ac';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\nimport { PersistentStorage } from './storage/storage';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  private _host: string;\n  private _domain: string;\n  internalHost: string;\n\n  /**\n   * @param host - Hostname portion of the url for the repo\n   * @param secure - Whether or not this repo is accessed over ssl\n   * @param namespace - The namespace represented by the repo\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\n   * @param persistenceKey - Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false,\n    public readonly isUsingEmulator: boolean = false\n  ) {\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this._host;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isCustomHost() {\n    return (\n      this._domain !== 'firebaseio.com' &&\n      this._domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  get host() {\n    return this._host;\n  }\n\n  set host(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this._host, this.internalHost);\n      }\n    }\n  }\n\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n\nfunction repoInfoNeedsQueryParam(repoInfo: RepoInfo): boolean {\n  return (\n    repoInfo.host !== repoInfo.internalHost ||\n    repoInfo.isCustomHost() ||\n    repoInfo.includeNamespaceInQueryParams\n  );\n}\n\n/**\n * Returns the websocket URL for this repo\n * @param repoInfo - RepoInfo object\n * @param type - of connection\n * @param params - list\n * @returns The URL for this repo\n */\nexport function repoInfoConnectionURL(\n  repoInfo: RepoInfo,\n  type: string,\n  params: { [k: string]: string }\n): string {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n\n  let connURL: string;\n  if (type === WEBSOCKET) {\n    connURL =\n      (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL =\n      (repoInfo.secure ? 'https://' : 'http://') +\n      repoInfo.internalHost +\n      '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  const pairs: string[] = [];\n\n  each(params, (key: string, value: string) => {\n    pairs.push(key + '=' + value);\n  });\n\n  return connURL + pairs.join('&');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport { StatsCollection } from './StatsCollection';\n\nconst collections: { [k: string]: StatsCollection } = {};\nconst reporters: { [k: string]: unknown } = {};\n\nexport function statsManagerGetCollection(repoInfo: RepoInfo): StatsCollection {\n  const hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nexport function statsManagerGetOrCreateReporter<T>(\n  repoInfo: RepoInfo,\n  creatorFunction: () => T\n): T {\n  const hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString] as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Encode, isNodeSdk, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport { Transport } from './Transport';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The AppCheck token for this client.\n   * @param authToken The AuthToken to use for this connection.\n   * @param transportSessionId Optional transportSessionid if we are\n   * reconnecting for an existing transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\n   * already created a connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) => {\n      // Always add the token if we have one.\n      if (this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\n          this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data - The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\n        onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting textContent seems to be the safest way to do this.\n      this.myIFrame.doc.body.textContent = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange =\n            function () {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const rstate = (newScript as any).readyState;\n              if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                newScript.onload = (newScript as any).onreadystatechange = null;\n                if (newScript.parentNode) {\n                  newScript.parentNode.removeChild(newScript);\n                }\n                loadCB();\n              }\n            };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isNodeSdk, jsonEval, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { SDK_VERSION } from '../core/version';\n\nimport {\n  APPLICATION_ID_PARAM,\n  APP_CHECK_TOKEN_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { Transport } from './Transport';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The App Check Token for this client.\n   * @param authToken The Auth Token for this client.\n   * @param transportSessionId Optional transportSessionId if this is connecting\n   * to an existing transport session\n   * @param lastSessionId Optional lastSessionId if there was a previous\n   * connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId,\n      appCheckToken,\n      applicationId\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo - The info for the websocket endpoint.\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\n   * @returns connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string,\n    appCheckToken?: string,\n    applicationId?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n    if (applicationId) {\n      urlParams[APPLICATION_ID_PARAM] = applicationId;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      let options: { [k: string]: object };\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        options = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n        if (this.authToken) {\n          options.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        }\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n      }\n      this.mySock = new WebSocketImpl(this.connURL, [], options);\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount - The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @returns Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess - The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data - The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str - String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { warn } from '../core/util/util';\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { TransportConstructor } from './Transport';\nimport { WebSocketConnection } from './WebSocketConnection';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  // Keeps track of whether the TransportManager has already chosen a transport to use\n  static globalTransportInitialized_ = false;\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * Returns whether transport has been selected to ensure WebSocketConnection or BrowserPollConnection are not called after\n   * TransportManager has already set up transports_\n   */\n  static get IS_TRANSPORT_INITIALIZED() {\n    return this.globalTransportInitialized_;\n  }\n\n  /**\n   * @param repoInfo - Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n      TransportManager.globalTransportInitialized_ = true;\n    }\n  }\n\n  /**\n   * @returns The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @returns The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Indexable } from '../core/util/misc';\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\n\nimport { PROTOCOL_VERSION } from './Constants';\nimport { Transport, TransportConstructor } from './Transport';\nimport { TransportManager } from './TransportManager';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param appCheckToken_ - The App Check Token for this device.\n   * @param authToken_ - The auth token for this session.\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private appCheckToken_: string | undefined,\n    private authToken_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      null,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg - An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        const handshakePayload = {\n          ...(payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          })\n        };\n        if (this.repoInfo_.isUsingEmulator) {\n          // Upon connecting, the emulator will pass the hostname that it's aware of, but we prefer the user's set hostname via `connectDatabaseEmulator` over what the emulator passes.\n          handshakePayload.h = this.repoInfo_.host;\n        }\n        this.onHandshake_(handshakePayload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake - The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryContext } from './view/EventRegistration';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: QueryContext, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: QueryContext): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token - The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * Refreshes the app check token for the current connection.\n   * @param token The app check token\n   */\n  refreshAppCheckToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @returns {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringLength } from '@firebase/util';\n\nimport { nameCompare } from './util';\n\n/** Maximum key depth. */\nconst MAX_PATH_DEPTH = 32;\n\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nconst MAX_PATH_LENGTH_BYTES = 768;\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString - Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @returns The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @returns True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @returns The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @returns true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @returns True if this path is a parent of (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  byteLength_: number;\n\n  /**\n   * @param path - Initial Path.\n   * @param errorPrefix_ - Prefix for any error messages.\n   */\n  constructor(path: Path, public errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n}\n\nexport function validationPathPush(\n  validationPath: ValidationPath,\n  child: string\n): void {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nexport function validationPathPop(validationPath: ValidationPath): void {\n  const last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath: ValidationPath): void {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'has a key path longer than ' +\n        MAX_PATH_LENGTH_BYTES +\n        ' bytes (' +\n        validationPath.byteLength_ +\n        ').'\n    );\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'path specified exceeds the maximum depth that can be written (' +\n        MAX_PATH_DEPTH +\n        ') or object contains a cycle ' +\n        validationPathToErrorString(validationPath)\n    );\n  }\n}\n\n/**\n * String for use in error messages - uses '.' notation for path.\n */\nexport function validationPathToErrorString(\n  validationPath: ValidationPath\n): string {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  Deferred,\n  isEmpty,\n  isMobileCordova,\n  isNodeSdk,\n  isReactNative,\n  isValidFormat,\n  safeGet,\n  stringify,\n  isAdmin\n} from '@firebase/util';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { Path } from './util/Path';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { SDK_VERSION } from './version';\nimport { QueryContext } from './view/EventRegistration';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: QueryContext;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private appCheckToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n  private invalidAppCheckTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param applicationId_ - The Firebase App ID for this project\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: QueryContext): Promise<string> {\n    this.initConnection_();\n\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    this.initConnection_();\n\n    const queryId = query._queryIdentifier;\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      `listen() called twice for same path/queryId.`\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: QueryContext) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n        const indexPath = query._path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  refreshAppCheckToken(token: string | null) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, () => {});\n      }\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given token. If the authentication\n   * attempt fails, it's triggered like the token was revoked (the connection is\n   * closed).\n   */\n  tryAppCheck() {\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest(\n        'appcheck',\n        { 'token': this.appCheckToken_ },\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n          if (status === 'ok') {\n            this.invalidAppCheckTokenCount_ = 0;\n          } else {\n            this.onAppCheckRevoked_(status, data);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: QueryContext, tag: number | null) {\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.initConnection_();\n\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private initConnection_() {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private async establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      try {\n        // First fetch auth and app check token, and establish connection after\n        // fetching the token was successful\n        const [authToken, appCheckToken] = await Promise.all([\n          this.authTokenProvider_.getToken(forceRefresh),\n          this.appCheckTokenProvider_.getToken(forceRefresh)\n        ]);\n\n        if (!canceled) {\n          log('getToken() completed. Creating connection.');\n          this.authToken_ = authToken && authToken.accessToken;\n          this.appCheckToken_ = appCheckToken && appCheckToken.token;\n          connection = new Connection(\n            connId,\n            this.repoInfo_,\n            this.applicationId_,\n            this.appCheckToken_,\n            this.authToken_,\n            onDataMessage,\n            onReady,\n            onDisconnect,\n            /* onKill= */ reason => {\n              warn(reason + ' (' + this.repoInfo_.toString() + ')');\n              this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n            },\n            lastSessionId\n          );\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      } catch (error) {\n        this.log_('Failed to get token: ' + error);\n        if (!canceled) {\n          if (this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n          closeFn();\n        }\n      }\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onAppCheckRevoked_(statusCode: string, explanation: string) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true;\n    // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n    this.tryAppCheck();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @returns Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @returns The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode - New priority to set for the node.\n   * @returns Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName - The name of the child to retrieve.\n   * @returns The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path - The path of the child to retrieve.\n   * @returns The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName - The name of the child to find the predecessor of.\n   * @param childNode - The node to find the predecessor of.\n   * @param index - The index to use to determine the predecessor\n   * @returns The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName - The name of the child to update.\n   * @param newChildNode - The new child node\n   * @returns The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path - The path of the child to update.\n   * @param newChildNode - The new child node, which may be an empty node\n   * @returns The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @returns True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @returns The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action - Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @returns The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat - True for export format (also wire protocol format).\n   * @returns Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @returns hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other - Another node\n   * @returns -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @returns Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @returns This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Comparator } from '../../util/SortedMap';\nimport { MIN_NAME } from '../../util/util';\nimport { Node, NamedNode } from '../Node';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @returns A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @returns a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @returns a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { ChildrenNode } from '../ChildrenNode';\nimport { Node, NamedNode } from '../Node';\n\nimport { Index } from './Index';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379\\@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node - Node to iterate.\n   * @param isReverse_ - Whether or not to iterate in reverse\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = { key: node.key, value: node.value } as unknown as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return { key: node.key, value: node.value } as unknown as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key - Key associated with this node.\n   * @param value - Value associated with this node.\n   * @param color - Whether this node is red.\n   * @param left - Left child.\n   * @param right - Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key - New key for the node, or null.\n   * @param value - New value for the node, or null.\n   * @param color - New color for the node, or null.\n   * @param left - New left child for the node, or null.\n   * @param right - New right child for the node, or null.\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @returns The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key - Key to insert.\n   * @param value - Value to insert.\n   * @param comparator - Comparator.\n   * @returns New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key - The key of the item to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @returns New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @returns True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @param comparator - Comparator.\n   * @returns New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @returns Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ - Key comparator.\n   * @param root_ - Optional root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @returns New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @returns New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key - The key to look up.\n   * @returns The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key - The key to find the predecessor of\n   * @returns The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @returns True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @returns The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @returns The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @returns The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @returns The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\n\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\n\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Index } from './indexes/Index';\nimport { Node } from './Node';\nimport { priorityHashText, validatePriorityNode } from './snap';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ - The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ - The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @returns The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n  withIndex(): Node {\n    return this;\n  }\n  isIndexed(): boolean {\n    return true;\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { LeafNode } from '../LeafNode';\nimport { NamedNode, Node } from '../Node';\n\nimport { Index } from './Index';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList - Unsorted list of children\n * @param cmp - The comparison method to be used\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          namedNode.node as unknown as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\n\nimport { SortedMap } from '../util/SortedMap';\n\nimport { buildChildSet } from './childSet';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { NamedNode, Node } from './Node';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\n\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ - List of children of this node..\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[key as unknown as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json - JSON to create a node for.\n * @param priority - Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class ValueIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type - The event type */\n  type: ChangeType;\n  /** @param snapshotNode - The data */\n  snapshotNode: Node;\n  /** @param childName - The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap - Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName - The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\n\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            changeChildRemoved(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(\n          changeChildChanged(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              changeChildRemoved(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                changeChildChanged(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              changeChildAdded(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n  filtersNodes(): boolean {\n    return false;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Path } from '../../util/Path';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n */\nexport class RangedFilter implements NodeFilter {\n  private indexedFilter_: IndexedFilter;\n\n  private index_: Index;\n\n  private startPost_: NamedNode;\n\n  private endPost_: NamedNode;\n\n  private startIsInclusive_: boolean;\n\n  private endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  matches(node: NamedNode): boolean {\n    const isWithinStart = this.startIsInclusive_\n      ? this.index_.compare(this.getStartPost(), node) <= 0\n      : this.index_.compare(this.getStartPost(), node) < 0;\n    const isWithinEnd = this.endIsInclusive_\n      ? this.index_.compare(node, this.getEndPost()) <= 0\n      : this.index_.compare(node, this.getEndPost()) < 0;\n    return isWithinStart && isWithinEnd;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { NamedNode, Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\nimport { RangedFilter } from './RangedFilter';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n */\nexport class LimitedFilter implements NodeFilter {\n  private readonly rangedFilter_: RangedFilter;\n\n  private readonly index_: Index;\n\n  private readonly limit_: number;\n\n  private readonly reverse_: boolean;\n\n  private readonly startIsInclusive_: boolean;\n\n  private readonly endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          if (!this.withinDirectionalStart(next)) {\n            // if we have not reached the start, skip to the next element\n            continue;\n          } else if (!this.withinDirectionalEnd(next)) {\n            // if we have reached the end, stop adding elements\n            break;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n        }\n\n        let count = 0;\n        while (iterator.hasNext()) {\n          const next = iterator.getNext();\n          const inRange =\n            count < this.limit_ &&\n            this.withinDirectionalStart(next) &&\n            this.withinDirectionalEnd(next);\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : (oldEventCache.getLastChild(this.index_) as NamedNode);\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildChanged(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              changeChildAdded(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            changeChildAdded(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n\n  private withinDirectionalStart = (node: NamedNode) =>\n    this.reverse_ ? this.withinEndPost(node) : this.withinStartPost(node);\n\n  private withinDirectionalEnd = (node: NamedNode) =>\n    this.reverse_ ? this.withinStartPost(node) : this.withinEndPost(node);\n\n  private withinStartPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      this.rangedFilter_.getStartPost(),\n      node\n    );\n    return this.startIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n\n  private withinEndPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      node,\n      this.rangedFilter_.getEndPost()\n    );\n    return this.endIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { PRIORITY_INDEX, PriorityIndex } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { MAX_NAME, MIN_NAME } from '../util/util';\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { RangedFilter } from './filter/RangedFilter';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_START_IS_INCLUSIVE = 'sin',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  INDEX_END_IS_INCLUSIVE = 'ein',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AFTER = 'startAfter',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  END_BEFORE = 'endBefore',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n *\n * @internal\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false; // can only be true if startSet_ is true\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false; // can only be true if endSet_ is true\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_: PriorityIndex = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  /**\n   * @returns True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @returns True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.startAfterSet_ = this.startAfterSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.endBeforeSet_ = this.endBeforeSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsStartAt(queryParams, indexValue, MAX_NAME);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsEndAt(queryParams, indexValue, MIN_NAME);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @returns query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    const startParam = queryParams.startAfterSet_\n      ? REST_QUERY_CONSTANTS.START_AFTER\n      : REST_QUERY_CONSTANTS.START_AT;\n    qs[startParam] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[startParam] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    const endParam = queryParams.endBeforeSet_\n      ? REST_QUERY_CONSTANTS.END_BEFORE\n      : REST_QUERY_CONSTANTS.END_AT;\n    qs[endParam] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[endParam] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_IS_INCLUSIVE] =\n      !queryParams.startAfterSet_;\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_IS_INCLUSIVE] =\n      !queryParams.endBeforeSet_;\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { logWrapper, warn } from './util/util';\nimport { QueryContext } from './view/EventRegistration';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: QueryContext, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query._queryParams.isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query._path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: QueryContext, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: QueryContext): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    const pathString = query._path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    return Promise.all([\n      this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\n      this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\n    ]).then(([authToken, appCheckToken]) => {\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      const url =\n        (this.repoInfo_.secure ? 'https://' : 'http://') +\n        this.repoInfo_.host +\n        pathString +\n        '?' +\n        'ns=' +\n        this.repoInfo_.namespace +\n        querystring(queryStringParameters);\n\n      this.log_('Sending REST request for ' + url);\n      const xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (callback && xhr.readyState === 4) {\n          this.log_(\n            'REST Response for ' + url + ' received. status:',\n            xhr.status,\n            'response:',\n            xhr.responseText\n          );\n          let res = null;\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn(\n                'Failed to parse JSON response for ' +\n                  url +\n                  ': ' +\n                  xhr.responseText\n              );\n            }\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn(\n                'Got unsuccessful REST response for ' +\n                  url +\n                  ' Status: ' +\n                  xhr.status\n              );\n            }\n            callback(xhr.status);\n          }\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url, /*asynchronous=*/ true);\n      xhr.send();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport interface SparseSnapshotTree {\n  value: Node | null;\n  readonly children: Map<string, SparseSnapshotTree>;\n}\n\nexport function newSparseSnapshotTree(): SparseSnapshotTree {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n\n/**\n * Gets the node stored at the given path if one exists.\n * Only seems to be used in tests.\n *\n * @param path - Path to look up snapshot for.\n * @returns The retrieved node, or null.\n */\nexport function sparseSnapshotTreeFind(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): Node | null {\n  if (sparseSnapshotTree.value != null) {\n    return sparseSnapshotTree.value.getChild(path);\n  } else if (!pathIsEmpty(path) && sparseSnapshotTree.children.size > 0) {\n    const childKey = pathGetFront(path);\n    path = pathPopFront(path);\n    if (sparseSnapshotTree.children.has(childKey)) {\n      const childTree = sparseSnapshotTree.children.get(childKey);\n      return sparseSnapshotTreeFind(childTree, path);\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Stores the given node at the specified path. If there is already a node\n * at a shallower path, it merges the new data into that snapshot node.\n *\n * @param path - Path to look up snapshot for.\n * @param data - The new data, or null.\n */\nexport function sparseSnapshotTreeRemember(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path,\n  data: Node\n): void {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    const childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    const child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n\n/**\n * Purge the data at path from the cache.\n *\n * @param path - Path to look up snapshot for.\n * @returns True if this node should now be removed.\n */\nexport function sparseSnapshotTreeForget(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): boolean {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        const value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n\n        value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        const safeToRemove = sparseSnapshotTreeForget(\n          sparseSnapshotTree.children.get(childKey),\n          path\n        );\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Recursively iterates through all of the stored tree and calls the\n * callback on each one.\n *\n * @param prefixPath - Path to look up node for.\n * @param func - The function to invoke for each tree.\n */\nexport function sparseSnapshotTreeForEachTree(\n  sparseSnapshotTree: SparseSnapshotTree,\n  prefixPath: Path,\n  func: (a: Path, b: Node) => unknown\n): void {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\n      const path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n\n/**\n * Iterates through each immediate child and triggers the callback.\n * Only seems to be used in tests.\n *\n * @param func - The function to invoke for each child.\n */\nexport function sparseSnapshotTreeForEachChild(\n  sparseSnapshotTree: SparseSnapshotTree,\n  func: (a: string, b: SparseSnapshotTree) => void\n): void {\n  sparseSnapshotTree.children.forEach((tree, key) => {\n    func(key, tree);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ - The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\nimport { ServerActions } from '../ServerActions';\nimport { setTimeoutNonBlocking, each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\nimport { StatsListener } from './StatsListener';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  statsToReport_: { [k: string]: boolean } = {};\n\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\nexport function statsReporterIncludeStat(\n  reporter: StatsReporter,\n  stat: string\n) {\n  reporter.statsToReport_[stat] = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { newOperationSourceUser, Operation, OperationType } from './Operation';\n\nexport class AckUserWrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.ACK_USER_WRITE;\n\n  /** @inheritDoc */\n  source = newOperationSourceUser();\n\n  /**\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\n   */\n  constructor(\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public affectedTree: ImmutableTree<boolean>,\n    /** @inheritDoc */ public revert: boolean\n  ) {}\n  operationForChild(childName: string): AckUserWrite {\n    if (!pathIsEmpty(this.path)) {\n      assert(\n        pathGetFront(this.path) === childName,\n        'operationForChild called for unrelated child.'\n      );\n      return new AckUserWrite(\n        pathPopFront(this.path),\n        this.affectedTree,\n        this.revert\n      );\n    } else if (this.affectedTree.value != null) {\n      assert(\n        this.affectedTree.children.isEmpty(),\n        'affectedTree should not have overlapping affected paths.'\n      );\n      // All child locations are affected as well; just return same operation.\n      return this;\n    } else {\n      const childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  isCompleteForPath(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  }\n\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertionError } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\n\nimport { Change, ChangeType, changeChildMoved } from './Change';\nimport { Event } from './Event';\nimport { EventRegistration, QueryContext } from './EventRegistration';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n */\nexport class EventGenerator {\n  index_: Index;\n\n  constructor(public query_: QueryContext) {\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n}\n\n/**\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n *\n * Notes:\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\n *    our index.\n *  - prevName will be calculated based on the index ordering.\n */\nexport function eventGeneratorGenerateEventsForChanges(\n  eventGenerator: EventGenerator,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistrations: EventRegistration[]\n): Event[] {\n  const events: Event[] = [];\n  const moves: Change[] = [];\n\n  changes.forEach(change => {\n    if (\n      change.type === ChangeType.CHILD_CHANGED &&\n      eventGenerator.index_.indexedValueChanged(\n        change.oldSnap as Node,\n        change.snapshotNode\n      )\n    ) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_REMOVED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_ADDED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_MOVED,\n    moves,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_CHANGED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.VALUE,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n\n  return events;\n}\n\n/**\n * Given changes of a single change type, generate the corresponding events.\n */\nfunction eventGeneratorGenerateEventsForType(\n  eventGenerator: EventGenerator,\n  events: Event[],\n  eventType: string,\n  changes: Change[],\n  registrations: EventRegistration[],\n  eventCache: Node\n) {\n  const filteredChanges = changes.filter(change => change.type === eventType);\n\n  filteredChanges.sort((a, b) =>\n    eventGeneratorCompareChanges(eventGenerator, a, b)\n  );\n  filteredChanges.forEach(change => {\n    const materializedChange = eventGeneratorMaterializeSingleChange(\n      eventGenerator,\n      change,\n      eventCache\n    );\n    registrations.forEach(registration => {\n      if (registration.respondsTo(change.type)) {\n        events.push(\n          registration.createEvent(materializedChange, eventGenerator.query_)\n        );\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(\n  eventGenerator: EventGenerator,\n  change: Change,\n  eventCache: Node\n): Change {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(\n      change.childName,\n      change.snapshotNode,\n      eventGenerator.index_\n    );\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(\n  eventGenerator: EventGenerator,\n  a: Change,\n  b: Change\n) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nimport { CacheNode } from './CacheNode';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport interface ViewCache {\n  readonly eventCache: CacheNode;\n  readonly serverCache: CacheNode;\n}\n\nexport function newViewCache(\n  eventCache: CacheNode,\n  serverCache: CacheNode\n): ViewCache {\n  return { eventCache, serverCache };\n}\n\nexport function viewCacheUpdateEventSnap(\n  viewCache: ViewCache,\n  eventSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    new CacheNode(eventSnap, complete, filtered),\n    viewCache.serverCache\n  );\n}\n\nexport function viewCacheUpdateServerSnap(\n  viewCache: ViewCache,\n  serverSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    viewCache.eventCache,\n    new CacheNode(serverSnap, complete, filtered)\n  );\n}\n\nexport function viewCacheGetCompleteEventSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.eventCache.isFullyInitialized()\n    ? viewCache.eventCache.getNode()\n    : null;\n}\n\nexport function viewCacheGetCompleteServerSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.serverCache.isFullyInitialized()\n    ? viewCache.serverCache.getNode()\n    : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { SortedMap } from './SortedMap';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath - The remainder of the path\n   * @param predicate - The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue =\n            child.findRootMostMatchingPathAndValue(\n              pathPopFront(relativePath),\n              predicate\n            );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @returns The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath - Path to set value at.\n   * @param toSet - Value to set.\n   * @returns Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath - Path to value to remove.\n   * @returns Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath - Path to get value for.\n   * @returns Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath - Path to replace subtree for.\n   * @param newTree - New tree.\n   * @returns Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f - A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathIsEmpty\n} from './util/Path';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(public writeTree_: ImmutableTree<Node>) {}\n\n  static empty(): CompoundWrite {\n    return new CompoundWrite(new ImmutableTree(null));\n  }\n}\n\nexport function compoundWriteAddWrite(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  node: Node\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      const rootMostPath = rootmost.path;\n      let value = rootmost.value;\n      const relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(\n        compoundWrite.writeTree_.set(rootMostPath, value)\n      );\n    } else {\n      const subtree = new ImmutableTree(node);\n      const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nexport function compoundWriteAddWrites(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  updates: { [name: string]: Node }\n): CompoundWrite {\n  let newWrite = compoundWrite;\n  each(updates, (childKey: string, node: Node) => {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n\n/**\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n * location, which must be removed by calling this method with that path.\n *\n * @param compoundWrite - The CompoundWrite to remove.\n * @param path - The path at which a write and all deeper writes should be removed\n * @returns The new CompoundWrite with the removed path\n */\nexport function compoundWriteRemoveWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    const newWriteTree = compoundWrite.writeTree_.setTree(\n      path,\n      new ImmutableTree<Node>(null)\n    );\n    return new CompoundWrite(newWriteTree);\n  }\n}\n\n/**\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n * considered \"complete\".\n *\n * @param compoundWrite - The CompoundWrite to check.\n * @param path - The path to check for\n * @returns Whether there is a complete write at that path\n */\nexport function compoundWriteHasCompleteWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): boolean {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n\n/**\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n * writes from deeper paths, but will return child nodes from a more shallow path.\n *\n * @param compoundWrite - The CompoundWrite to get the node from.\n * @param path - The path to get a complete write\n * @returns The node if complete at that path, or null otherwise.\n */\nexport function compoundWriteGetCompleteNode(\n  compoundWrite: CompoundWrite,\n  path: Path\n): Node | null {\n  const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_\n      .get(rootmost.path)\n      .getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns all children that are guaranteed to be a complete overwrite.\n *\n * @param compoundWrite - The CompoundWrite to get children from.\n * @returns A list of all complete children.\n */\nexport function compoundWriteGetCompleteChildren(\n  compoundWrite: CompoundWrite\n): NamedNode[] {\n  const children: NamedNode[] = [];\n  const node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      (node as ChildrenNode).forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          children.push(new NamedNode(childName, childNode));\n        }\n      );\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(\n      (childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      }\n    );\n  }\n  return children;\n}\n\nexport function compoundWriteChildCompoundWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n\n/**\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n * @returns Whether this CompoundWrite is empty\n */\nexport function compoundWriteIsEmpty(compoundWrite: CompoundWrite): boolean {\n  return compoundWrite.writeTree_.isEmpty();\n}\n\n/**\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n * node\n * @param node - The node to apply this CompoundWrite to\n * @returns The node with all writes applied\n */\nexport function compoundWriteApply(\n  compoundWrite: CompoundWrite,\n  node: Node\n): Node {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(\n          pathChild(relativePath, childKey),\n          childTree,\n          node\n        );\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(\n        pathChild(relativePath, '.priority'),\n        priorityWrite\n      );\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Index } from './snap/indexes/Index';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport { each } from './util/util';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n *\n */\nexport function writeTreeChildWrites(\n  writeTree: WriteTree,\n  path: Path\n): WriteTreeRef {\n  return newWriteTreeRef(path, writeTree);\n}\n\n/**\n * Record a new overwrite from user code.\n *\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\n */\nexport function writeTreeAddOverwrite(\n  writeTree: WriteTree,\n  path: Path,\n  snap: Node,\n  writeId: number,\n  visible?: boolean\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older write on top of newer ones'\n  );\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path,\n    snap,\n    writeId,\n    visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(\n      writeTree.visibleWrites,\n      path,\n      snap\n    );\n  }\n  writeTree.lastWriteId = writeId;\n}\n\n/**\n * Record a new merge from user code.\n */\nexport function writeTreeAddMerge(\n  writeTree: WriteTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older merge on top of newer ones'\n  );\n  writeTree.allWrites.push({\n    path,\n    children: changedChildren,\n    writeId,\n    visible: true\n  });\n\n  writeTree.visibleWrites = compoundWriteAddWrites(\n    writeTree.visibleWrites,\n    path,\n    changedChildren\n  );\n  writeTree.lastWriteId = writeId;\n}\n\nexport function writeTreeGetWrite(\n  writeTree: WriteTree,\n  writeId: number\n): WriteRecord | null {\n  for (let i = 0; i < writeTree.allWrites.length; i++) {\n    const record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n *\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\n * events as a result).\n */\nexport function writeTreeRemoveWrite(\n  writeTree: WriteTree,\n  writeId: number\n): boolean {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n  const idx = writeTree.allWrites.findIndex(s => {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  const writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n\n  let removedWriteWasVisible = writeToRemove.visible;\n  let removedWriteOverlapsWithOtherWrites = false;\n\n  let i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    const currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (\n        i >= idx &&\n        writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)\n      ) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(\n        writeTree.visibleWrites,\n        writeToRemove.path\n      );\n    } else {\n      const children = writeToRemove.children;\n      each(children, (childName: string) => {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(\n          writeTree.visibleWrites,\n          pathChild(writeToRemove.path, childName)\n        );\n      });\n    }\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(\n  writeRecord: WriteRecord,\n  path: Path\n): boolean {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (const childName in writeRecord.children) {\n      if (\n        writeRecord.children.hasOwnProperty(childName) &&\n        pathContains(pathChild(writeRecord.path, childName), path)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n */\nfunction writeTreeResetTree_(writeTree: WriteTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(\n    writeTree.allWrites,\n    writeTreeDefaultFilter_,\n    newEmptyPath()\n  );\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId =\n      writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n\n/**\n * The default filter used when constructing the tree. Keep everything that's visible.\n */\nfunction writeTreeDefaultFilter_(write: WriteRecord) {\n  return write.visible;\n}\n\n/**\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n * event data at that path.\n */\nfunction writeTreeLayerTree_(\n  writes: WriteRecord[],\n  filter: (w: WriteRecord) => boolean,\n  treeRoot: Path\n): CompoundWrite {\n  let compoundWrite = CompoundWrite.empty();\n  for (let i = 0; i < writes.length; ++i) {\n    const write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      const writePath = write.path;\n      let relativePath: Path;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            relativePath,\n            write.snap\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            newEmptyPath(),\n            write.snap.getChild(relativePath)\n          );\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(\n            compoundWrite,\n            relativePath,\n            write.children\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              newEmptyPath(),\n              write.children\n            );\n          } else {\n            const child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              const deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(\n                compoundWrite,\n                newEmptyPath(),\n                deepNode\n              );\n            }\n          }\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n\n/**\n * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n * No server data is considered.\n *\n */\nexport function writeTreeGetCompleteWriteData(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n * writes), attempt to calculate a complete snapshot for the given path\n *\n * @param writeIdsToExclude - An optional set to be excluded\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeCalcCompleteEventCache(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    const shadowingNode = compoundWriteGetCompleteNode(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      const subMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        treePath\n      );\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n      ) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (\n        !includeHiddenWrites &&\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n      ) {\n        return null;\n      } else {\n        const filter = function (write: WriteRecord) {\n          return (\n            (write.visible || includeHiddenWrites) &&\n            (!writeIdsToExclude ||\n              !~writeIdsToExclude.indexOf(write.writeId)) &&\n            (pathContains(write.path, treePath) ||\n              pathContains(treePath, write.path))\n          );\n        };\n        const mergeAtPath = writeTreeLayerTree_(\n          writeTree.allWrites,\n          filter,\n          treePath\n        );\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n\n/**\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n * Used when creating new views, to pre-fill their complete event children snapshot.\n */\nexport function writeTreeCalcCompleteEventChildren(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerChildren: ChildrenNode | null\n) {\n  let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n  const topLevelSet = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    treePath\n  );\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          childSnap\n        );\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    completeServerChildren.forEachChild(\n      PRIORITY_INDEX,\n      (childName, childNode) => {\n        const node = compoundWriteApply(\n          compoundWriteChildCompoundWrite(merge, new Path(childName)),\n          childNode\n        );\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      }\n    );\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  }\n}\n\n/**\n * Given that the underlying server data has updated, determine what, if anything, needs to be\n * applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events\n *\n * Either existingEventSnap or existingServerSnap must exist\n */\nexport function writeTreeCalcEventCacheAfterServerOverwrite(\n  writeTree: WriteTree,\n  treePath: Path,\n  childPath: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  assert(\n    existingEventSnap || existingServerSnap,\n    'Either existingEventSnap or existingServerSnap must exist'\n  );\n  const path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    const childMerge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      path\n    );\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getChild(childPath)\n      );\n    }\n  }\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeCalcCompleteChild(\n  writeTree: WriteTree,\n  treePath: Path,\n  childKey: string,\n  existingServerSnap: CacheNode\n): Node | null {\n  const path = pathChild(treePath, childKey);\n  const shadowingNode = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    path\n  );\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      const childMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        path\n      );\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getNode().getImmediateChild(childKey)\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n */\nexport function writeTreeShadowingWrite(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window.\n */\nexport function writeTreeCalcIndexedSlice(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  let toIterate: Node;\n  const merge = compoundWriteChildCompoundWrite(\n    writeTree.visibleWrites,\n    treePath\n  );\n  const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    const nodes = [];\n    const cmp = index.getCompare();\n    const iter = reverse\n      ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n      : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n    let next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nexport function newWriteTree(): WriteTree {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport interface WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  visibleWrites: CompoundWrite;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  allWrites: WriteRecord[];\n\n  lastWriteId: number;\n}\n\n/**\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n * can lead to a more expensive calculation.\n *\n * @param writeIdsToExclude - Optional writes to exclude.\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeRefCalcCompleteEventCache(\n  writeTreeRef: WriteTreeRef,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  return writeTreeCalcCompleteEventCache(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerCache,\n    writeIdsToExclude,\n    includeHiddenWrites\n  );\n}\n\n/**\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n * mix of the given server data and write data.\n *\n */\nexport function writeTreeRefCalcCompleteEventChildren(\n  writeTreeRef: WriteTreeRef,\n  completeServerChildren: ChildrenNode | null\n): ChildrenNode {\n  return writeTreeCalcCompleteEventChildren(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerChildren\n  ) as ChildrenNode;\n}\n\n/**\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n * if anything, needs to be applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events should be raised\n *\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n *\n *\n */\nexport function writeTreeRefCalcEventCacheAfterServerOverwrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  return writeTreeCalcEventCacheAfterServerOverwrite(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    path,\n    existingEventSnap,\n    existingServerSnap\n  );\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n *\n */\nexport function writeTreeRefShadowingWrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path\n): Node | null {\n  return writeTreeShadowingWrite(\n    writeTreeRef.writeTree,\n    pathChild(writeTreeRef.treePath, path)\n  );\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window\n */\nexport function writeTreeRefCalcIndexedSlice(\n  writeTreeRef: WriteTreeRef,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  return writeTreeCalcIndexedSlice(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerData,\n    startPost,\n    count,\n    reverse,\n    index\n  );\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeRefCalcCompleteChild(\n  writeTreeRef: WriteTreeRef,\n  childKey: string,\n  existingServerCache: CacheNode\n): Node | null {\n  return writeTreeCalcCompleteChild(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    childKey,\n    existingServerCache\n  );\n}\n\n/**\n * Return a WriteTreeRef for a child.\n */\nexport function writeTreeRefChild(\n  writeTreeRef: WriteTreeRef,\n  childName: string\n): WriteTreeRef {\n  return newWriteTreeRef(\n    pathChild(writeTreeRef.treePath, childName),\n    writeTreeRef.writeTree\n  );\n}\n\nexport function newWriteTreeRef(\n  path: Path,\n  writeTree: WriteTree\n): WriteTreeRef {\n  return {\n    treePath: path,\n    writeTree\n  };\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport interface WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  readonly treePath: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  readonly writeTree: WriteTree;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport {\n  Change,\n  ChangeType,\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from './Change';\n\nexport class ChildChangeAccumulator {\n  private readonly changeMap: Map<string, Change> = new Map();\n\n  trackChildChange(change: Change) {\n    const type = change.type;\n    const childKey = change.childName!;\n    assert(\n      type === ChangeType.CHILD_ADDED ||\n        type === ChangeType.CHILD_CHANGED ||\n        type === ChangeType.CHILD_REMOVED,\n      'Only child changes supported for tracking'\n    );\n    assert(\n      childKey !== '.priority',\n      'Only non-priority child changes can be tracked.'\n    );\n    const oldChange = this.changeMap.get(childKey);\n    if (oldChange) {\n      const oldType = oldChange.type;\n      if (\n        type === ChangeType.CHILD_ADDED &&\n        oldType === ChangeType.CHILD_REMOVED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(\n            childKey,\n            change.snapshotNode,\n            oldChange.snapshotNode\n          )\n        );\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.delete(childKey);\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildRemoved(childKey, oldChange.oldSnap)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildAdded(childKey, change.snapshotNode)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap)\n        );\n      } else {\n        throw assertionError(\n          'Illegal combination of changes: ' +\n            change +\n            ' occurred after ' +\n            oldChange\n        );\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  }\n\n  getChanges(): Change[] {\n    return Array.from(this.changeMap.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcIndexedSlice\n} from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { ViewCache, viewCacheGetCompleteServerSnap } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  getCompleteChild(childKey: string): Node | null;\n\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.eventCache;\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  }\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : viewCacheGetCompleteServerSnap(this.viewCache_);\n    const nodes = writeTreeRefCalcIndexedSlice(\n      this.writes_,\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Merge } from '../operation/Merge';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Overwrite } from '../operation/Overwrite';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren,\n  writeTreeRefCalcEventCacheAfterServerOverwrite,\n  writeTreeRefShadowingWrite\n} from '../WriteTree';\n\nimport { Change, changeValue } from './Change';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { NodeFilter } from './filter/NodeFilter';\nimport {\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap,\n  viewCacheUpdateEventSnap,\n  viewCacheUpdateServerSnap\n} from './ViewCache';\n\nexport interface ProcessorResult {\n  readonly viewCache: ViewCache;\n  readonly changes: Change[];\n}\n\nexport interface ViewProcessor {\n  readonly filter: NodeFilter;\n}\n\nexport function newViewProcessor(filter: NodeFilter): ViewProcessor {\n  return { filter };\n}\n\nexport function viewProcessorAssertIndexed(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache\n): void {\n  assert(\n    viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Event snap not indexed'\n  );\n  assert(\n    viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Server snap not indexed'\n  );\n}\n\nexport function viewProcessorApplyOperation(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null\n): ProcessorResult {\n  const accumulator = new ChildChangeAccumulator();\n  let newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    const overwrite = operation as Overwrite;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode =\n        overwrite.source.tagged ||\n        (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\n      newViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    const merge = operation as Merge;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode =\n        merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    const ackUserWrite = operation as AckUserWrite;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        ackUserWrite.affectedTree,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(\n      viewProcessor,\n      oldViewCache,\n      operation.path,\n      writesCache,\n      accumulator\n    );\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  const changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return { viewCache: newViewCache, changes };\n}\n\nfunction viewProcessorMaybeAddValueEvent(\n  oldViewCache: ViewCache,\n  newViewCache: ViewCache,\n  accumulator: Change[]\n): void {\n  const eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    const isLeafOrEmpty =\n      eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (\n      accumulator.length > 0 ||\n      !oldViewCache.eventCache.isFullyInitialized() ||\n      (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n      !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n    ) {\n      accumulator.push(\n        changeValue(viewCacheGetCompleteEventSnap(newViewCache))\n      );\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  changePath: Path,\n  writesCache: WriteTreeRef,\n  source: CompleteChildSource,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    let newEventCache, serverNode;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(\n        viewCache.serverCache.isFullyInitialized(),\n        'If change path is empty, we must have complete server data'\n      );\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        const serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        const completeChildren =\n          serverCache instanceof ChildrenNode\n            ? serverCache\n            : ChildrenNode.EMPTY_NODE;\n        const completeEventChildren = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          completeChildren\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeEventChildren,\n          accumulator\n        );\n      } else {\n        const completeNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeNode,\n          accumulator\n        );\n      }\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(\n          pathGetLength(changePath) === 1,\n          \"Can't have a priority with additional path components\"\n        );\n        const oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(\n          writesCache,\n          changePath,\n          oldEventNode,\n          serverNode\n        );\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(\n            oldEventNode,\n            updatedPriority\n          );\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        // update child\n        let newEventChild;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          const eventChildUpdate =\n            writeTreeRefCalcEventCacheAfterServerOverwrite(\n              writesCache,\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap\n              .getNode()\n              .getImmediateChild(childKey)\n              .updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(\n            writesCache,\n            childKey,\n            viewCache.serverCache\n          );\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newEventChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerSnap = oldViewCache.serverCache;\n  let newServerCache;\n  const serverFilter = filterServerNode\n    ? viewProcessor.filter\n    : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      changedSnap,\n      null\n    );\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    const newServerNode = oldServerSnap\n      .getNode()\n      .updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      newServerNode,\n      null\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (\n      !oldServerSnap.isCompleteForPath(changePath) &&\n      pathGetLength(changePath) > 1\n    ) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    const childChangePath = pathPopFront(changePath);\n    const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(\n        oldServerSnap.getNode(),\n        newChildNode\n      );\n    } else {\n      newServerCache = serverFilter.updateChild(\n        oldServerSnap.getNode(),\n        childKey,\n        newChildNode,\n        childChangePath,\n        NO_COMPLETE_CHILD_SOURCE,\n        null\n      );\n    }\n  }\n  const newViewCache = viewCacheUpdateServerSnap(\n    oldViewCache,\n    newServerCache,\n    oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n    serverFilter.filtersNodes()\n  );\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    newViewCache,\n    completeCache\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    changePath,\n    writesCache,\n    source,\n    accumulator\n  );\n}\n\nfunction viewProcessorApplyUserOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = oldViewCache.eventCache;\n  let newViewCache, newEventCache;\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    oldViewCache,\n    completeCache\n  );\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(\n      oldViewCache.eventCache.getNode(),\n      changedSnap,\n      accumulator\n    );\n    newViewCache = viewCacheUpdateEventSnap(\n      oldViewCache,\n      newEventCache,\n      true,\n      viewProcessor.filter.filtersNodes()\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(\n        oldViewCache.eventCache.getNode(),\n        changedSnap\n      );\n      newViewCache = viewCacheUpdateEventSnap(\n        oldViewCache,\n        newEventCache,\n        oldEventSnap.isFullyInitialized(),\n        oldEventSnap.isFiltered()\n      );\n    } else {\n      const childChangePath = pathPopFront(changePath);\n      const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      let newChild;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        const childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (\n            pathGetBack(childChangePath) === '.priority' &&\n            childNode.getChild(pathParent(childChangePath)).isEmpty()\n          ) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        const newEventSnap = viewProcessor.filter.updateChild(\n          oldEventSnap.getNode(),\n          childKey,\n          newChild,\n          childChangePath,\n          source,\n          accumulator\n        );\n        newViewCache = viewCacheUpdateEventSnap(\n          oldViewCache,\n          newEventSnap,\n          oldEventSnap.isFullyInitialized(),\n          viewProcessor.filter.filtersNodes()\n        );\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(\n  viewCache: ViewCache,\n  childKey: string\n): boolean {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(\n  viewProcessor: ViewProcessor,\n  node: Node,\n  merge: ImmutableTree<Node>\n): Node {\n  merge.foreach((relativePath, childNode) => {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (\n    viewCache.serverCache.getNode().isEmpty() &&\n    !viewCache.serverCache.isFullyInitialized()\n  ) {\n    return viewCache;\n  }\n\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  let viewMergeTree: ImmutableTree<Node>;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree<Node>(null).setTree(\n      path,\n      changedChildren\n    );\n  }\n  const serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n    if (serverNode.hasChild(childKey)) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n  viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n    const isUnknownDeepMerge =\n      !viewCache.serverCache.isCompleteForChild(childKey) &&\n      childMergeTree.value === null;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childMergeTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  ackPath: Path,\n  affectedTree: ImmutableTree<boolean>,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n\n  // Only filter server node if it is currently filtered\n  const filterServerNode = viewCache.serverCache.isFiltered();\n\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  const serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (\n      (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n      serverCache.isCompleteForPath(ackPath)\n    ) {\n      return viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        serverCache.getNode().getChild(ackPath),\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n        changedChildren = changedChildren.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    let changedChildren = new ImmutableTree<Node>(null);\n    affectedTree.foreach((mergePath, value) => {\n      const serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren = changedChildren.set(\n          mergePath,\n          serverCache.getNode().getChild(serverCachePath)\n        );\n      }\n    });\n    return viewProcessorApplyServerMerge(\n      viewProcessor,\n      viewCache,\n      ackPath,\n      changedChildren,\n      writesCache,\n      completeCache,\n      filterServerNode,\n      accumulator\n    );\n  }\n}\n\nfunction viewProcessorListenComplete(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerNode = viewCache.serverCache;\n  const newViewCache = viewCacheUpdateServerSnap(\n    viewCache,\n    oldServerNode.getNode(),\n    oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n    oldServerNode.isFiltered()\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    path,\n    writesCache,\n    NO_COMPLETE_CHILD_SOURCE,\n    accumulator\n  );\n}\n\nfunction viewProcessorRevertUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  let complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      viewCache,\n      completeServerCache\n    );\n    const oldEventCache = viewCache.eventCache.getNode();\n    let newEventCache;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      let newNode;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n      } else {\n        const serverChildren = viewCache.serverCache.getNode();\n        assert(\n          serverChildren instanceof ChildrenNode,\n          'serverChildren would be complete if leaf node'\n        );\n        newNode = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          serverChildren as ChildrenNode\n        );\n      }\n      newNode = newNode as Node;\n      newEventCache = viewProcessor.filter.updateFullNode(\n        oldEventCache,\n        newNode,\n        accumulator\n      );\n    } else {\n      const childKey = pathGetFront(path);\n      let newChild = writeTreeRefCalcCompleteChild(\n        writesCache,\n        childKey,\n        viewCache.serverCache\n      );\n      if (\n        newChild == null &&\n        viewCache.serverCache.isCompleteForChild(childKey)\n      ) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          newChild,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          ChildrenNode.EMPTY_NODE,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (\n        newEventCache.isEmpty() &&\n        viewCache.serverCache.isFullyInitialized()\n      ) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(\n            newEventCache,\n            complete,\n            accumulator\n          );\n        }\n      }\n    }\n    complete =\n      viewCache.serverCache.isFullyInitialized() ||\n      writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      complete,\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { EventRegistration, QueryContext } from './EventRegistration';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { queryParamsGetNodeFilter } from './QueryParams';\nimport {\n  newViewCache,\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap\n} from './ViewCache';\nimport {\n  newViewProcessor,\n  ViewProcessor,\n  viewProcessorApplyOperation,\n  viewProcessorAssertIndexed\n} from './ViewProcessor';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  processor_: ViewProcessor;\n  viewCache_: ViewCache;\n  eventRegistrations_: EventRegistration[] = [];\n  eventGenerator_: EventGenerator;\n\n  constructor(private query_: QueryContext, initialViewCache: ViewCache) {\n    const params = this.query_._queryParams;\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = newViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.serverCache;\n    const initialEventCache = initialViewCache.eventCache;\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  get query(): QueryContext {\n    return this.query_;\n  }\n}\n\nexport function viewGetServerCache(view: View): Node | null {\n  return view.viewCache_.serverCache.getNode();\n}\n\nexport function viewGetCompleteNode(view: View): Node | null {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nexport function viewGetCompleteServerCache(\n  view: View,\n  path: Path\n): Node | null {\n  const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (\n      view.query._queryParams.loadsAllData() ||\n      (!pathIsEmpty(path) &&\n        !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n    ) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\n\nexport function viewIsEmpty(view: View): boolean {\n  return view.eventRegistrations_.length === 0;\n}\n\nexport function viewAddEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration\n) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n\n/**\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function viewRemoveEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  const cancelEvents: CancelEvent[] = [];\n  if (cancelError) {\n    assert(\n      eventRegistration == null,\n      'A cancel should cancel all event registrations.'\n    );\n    const path = view.query._path;\n    view.eventRegistrations_.forEach(registration => {\n      const maybeEvent = registration.createCancelEvent(cancelError, path);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    let remaining = [];\n    for (let i = 0; i < view.eventRegistrations_.length; ++i) {\n      const existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n\n/**\n * Applies the given Operation, updates our cache, and returns the appropriate events.\n */\nexport function viewApplyOperation(\n  view: View,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null\n): Event[] {\n  if (\n    operation.type === OperationType.MERGE &&\n    operation.source.queryId !== null\n  ) {\n    assert(\n      viewCacheGetCompleteServerSnap(view.viewCache_),\n      'We should always have a full cache before handling merges'\n    );\n    assert(\n      viewCacheGetCompleteEventSnap(view.viewCache_),\n      'Missing event cache, even though we have a server cache'\n    );\n  }\n\n  const oldViewCache = view.viewCache_;\n  const result = viewProcessorApplyOperation(\n    view.processor_,\n    oldViewCache,\n    operation,\n    writesCache,\n    completeServerCache\n  );\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n\n  assert(\n    result.viewCache.serverCache.isFullyInitialized() ||\n      !oldViewCache.serverCache.isFullyInitialized(),\n    'Once a server snap is complete, it should never go back'\n  );\n\n  view.viewCache_ = result.viewCache;\n\n  return viewGenerateEventsForChanges_(\n    view,\n    result.changes,\n    result.viewCache.eventCache.getNode(),\n    null\n  );\n}\n\nexport function viewGetInitialEvents(\n  view: View,\n  registration: EventRegistration\n): Event[] {\n  const eventSnap = view.viewCache_.eventCache;\n  const initialChanges: Change[] = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    const eventNode = eventSnap.getNode() as ChildrenNode;\n    eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(\n    view,\n    initialChanges,\n    eventSnap.getNode(),\n    registration\n  );\n}\n\nfunction viewGenerateEventsForChanges_(\n  view: View,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistration?: EventRegistration\n): Event[] {\n  const registrations = eventRegistration\n    ? [eventRegistration]\n    : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(\n    view.eventGenerator_,\n    changes,\n    eventCache,\n    registrations\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { Operation } from './operation/Operation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport {\n  View,\n  viewAddEventRegistration,\n  viewApplyOperation,\n  viewGetCompleteServerCache,\n  viewGetInitialEvents,\n  viewIsEmpty,\n  viewRemoveEventRegistration\n} from './view/View';\nimport { newViewCache } from './view/ViewCache';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  readonly views: Map<string, View> = new Map();\n}\n\nexport function syncPointSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport function syncPointIsEmpty(syncPoint: SyncPoint): boolean {\n  return syncPoint.views.size === 0;\n}\n\nexport function syncPointApplyOperation(\n  syncPoint: SyncPoint,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  optCompleteServerCache: Node | null\n): Event[] {\n  const queryId = operation.source.queryId;\n  if (queryId !== null) {\n    const view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(\n      view,\n      operation,\n      writesCache,\n      optCompleteServerCache\n    );\n  } else {\n    let events: Event[] = [];\n\n    for (const view of syncPoint.views.values()) {\n      events = events.concat(\n        viewApplyOperation(view, operation, writesCache, optCompleteServerCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Get a view for the specified query.\n *\n * @param query - The query to return a view for\n * @param writesCache\n * @param serverCache\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointGetView(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): View {\n  const queryId = query._queryIdentifier;\n  const view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    let eventCache = writeTreeRefCalcCompleteEventCache(\n      writesCache,\n      serverCacheComplete ? serverCache : null\n    );\n    let eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(\n        writesCache,\n        serverCache\n      );\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    const viewCache = newViewCache(\n      new CacheNode(eventCache, eventCacheComplete, false),\n      new CacheNode(serverCache, serverCacheComplete, false)\n    );\n    return new View(query, viewCache);\n  }\n  return view;\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @param query\n * @param eventRegistration\n * @param writesCache\n * @param serverCache - Complete server cache, if we have it.\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointAddEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): Event[] {\n  const view = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n\n/**\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n *\n * If query is the default query, we'll check all views for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n *\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns removed queries and any cancel events\n */\nexport function syncPointRemoveEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): { removed: QueryContext[]; events: Event[] } {\n  const queryId = query._queryIdentifier;\n  const removed: QueryContext[] = [];\n  let cancelEvents: Event[] = [];\n  const hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    // When you do ref.off(...), we search all views for the registration to remove.\n    for (const [viewQueryId, view] of syncPoint.views.entries()) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(viewQueryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    const view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(\n      new (syncPointGetReferenceConstructor())(query._repo, query._path)\n    );\n  }\n\n  return { removed, events: cancelEvents };\n}\n\nexport function syncPointGetQueryViews(syncPoint: SyncPoint): View[] {\n  const result = [];\n  for (const view of syncPoint.views.values()) {\n    if (!view.query._queryParams.loadsAllData()) {\n      result.push(view);\n    }\n  }\n  return result;\n}\n\n/**\n * @param path - The path to the desired complete snapshot\n * @returns A complete cache, if it exists\n */\nexport function syncPointGetCompleteServerCache(\n  syncPoint: SyncPoint,\n  path: Path\n): Node | null {\n  let serverCache: Node | null = null;\n  for (const view of syncPoint.views.values()) {\n    serverCache = serverCache || viewGetCompleteServerCache(view, path);\n  }\n  return serverCache;\n}\n\nexport function syncPointViewForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): View | null {\n  const params = query._queryParams;\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    const queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nexport function syncPointViewExistsForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): boolean {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nexport function syncPointHasCompleteView(syncPoint: SyncPoint): boolean {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nexport function syncPointGetCompleteView(syncPoint: SyncPoint): View | null {\n  for (const view of syncPoint.views.values()) {\n    if (view.query._queryParams.loadsAllData()) {\n      return view;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport {\n  SyncPoint,\n  syncPointAddEventRegistration,\n  syncPointApplyOperation,\n  syncPointGetCompleteServerCache,\n  syncPointGetCompleteView,\n  syncPointGetQueryViews,\n  syncPointGetView,\n  syncPointHasCompleteView,\n  syncPointIsEmpty,\n  syncPointRemoveEventRegistration,\n  syncPointViewExistsForQuery,\n  syncPointViewForQuery\n} from './SyncPoint';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { each, errorForServerCode } from './util/util';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport { View, viewGetCompleteNode, viewGetServerCache } from './view/View';\nimport {\n  newWriteTree,\n  WriteTree,\n  writeTreeAddMerge,\n  writeTreeAddOverwrite,\n  writeTreeCalcCompleteEventCache,\n  writeTreeChildWrites,\n  writeTreeGetWrite,\n  WriteTreeRef,\n  writeTreeRefChild,\n  writeTreeRemoveWrite\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\nexport function syncTreeSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport interface ListenProvider {\n  startListening(\n    query: QueryContext,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: QueryContext, b: number | null): void;\n}\n\n/**\n * Static tracker for next query tag.\n */\nlet syncTreeNextQueryTag_ = 1;\n\nexport function resetSyncTreeTag() {\n  syncTreeNextQueryTag_ = 1;\n}\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(null);\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  pendingWriteTree_: WriteTree = newWriteTree();\n\n  readonly tagToQueryMap: Map<number, string> = new Map();\n  readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(public listenProvider_: ListenProvider) {}\n}\n\n/**\n * Apply the data changes for a user-generated set() or transaction() call.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node,\n  writeId: number,\n  visible?: boolean\n): Event[] {\n  // Record pending write.\n  writeTreeAddOverwrite(\n    syncTree.pendingWriteTree_,\n    path,\n    newData,\n    writeId,\n    visible\n  );\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new Overwrite(newOperationSourceUser(), path, newData)\n    );\n  }\n}\n\n/**\n * Apply the data from a user-generated update() call\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n): Event[] {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceUser(), path, changeTree)\n  );\n}\n\n/**\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n *\n * @param revert - True if the given write failed and needs to be reverted\n * @returns Events to raise.\n */\nexport function syncTreeAckUserWrite(\n  syncTree: SyncTree,\n  writeId: number,\n  revert: boolean = false\n) {\n  const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  const needToReevaluate = writeTreeRemoveWrite(\n    syncTree.pendingWriteTree_,\n    writeId\n  );\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    let affectedTree = new ImmutableTree<boolean>(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree = affectedTree.set(newEmptyPath(), true);\n    } else {\n      each(write.children, (pathString: string) => {\n        affectedTree = affectedTree.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new AckUserWrite(write.path, affectedTree, revert)\n    );\n  }\n}\n\n/**\n * Apply new server data for the specified path..\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Overwrite(newOperationSourceServer(), path, newData)\n  );\n}\n\n/**\n * Apply new server data to be merged in at the specified path.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node }\n): Event[] {\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceServer(), path, changeTree)\n  );\n}\n\n/**\n * Apply a listen complete for a query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyListenComplete(\n  syncTree: SyncTree,\n  path: Path\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new ListenComplete(newOperationSourceServer(), path)\n  );\n}\n\n/**\n * Apply a listen complete for a tagged query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedListenComplete(\n  syncTree: SyncTree,\n  path: Path,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new ListenComplete(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Remove event callback(s).\n *\n * If query is the default query, we'll check all queries for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n *\n * @param eventRegistration - If null, all callbacks are removed.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @param skipListenerDedup - When performing a `get()`, we don't add any new listeners, so no\n *  deduping needs to take place. This flag allows toggling of that behavior\n * @returns Cancel events, if cancelError was provided.\n */\nexport function syncTreeRemoveEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error,\n  skipListenerDedup = false\n): Event[] {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  const path = query._path;\n  const maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  let cancelEvents: Event[] = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (\n    maybeSyncPoint &&\n    (query._queryIdentifier === 'default' ||\n      syncPointViewExistsForQuery(maybeSyncPoint, query))\n  ) {\n    const removedAndEvents = syncPointRemoveEventRegistration(\n      maybeSyncPoint,\n      query,\n      eventRegistration,\n      cancelError\n    );\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    const removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n\n    if (!skipListenerDedup) {\n      /**\n       * We may have just removed one of many listeners and can short-circuit this whole process\n       * We may also not have removed a default listener, in which case all of the descendant listeners should already be\n       * properly set up.\n       */\n\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n      const removingDefault =\n        -1 !==\n        removed.findIndex(query => {\n          return query._queryParams.loadsAllData();\n        });\n      const covered = syncTree.syncPointTree_.findOnPath(\n        path,\n        (relativePath, parentSyncPoint) =>\n          syncPointHasCompleteView(parentSyncPoint)\n      );\n\n      if (removingDefault && !covered) {\n        const subtree = syncTree.syncPointTree_.subtree(path);\n        // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n\n          // Ok, we've collected all the listens we need. Set them up.\n          for (let i = 0; i < newViews.length; ++i) {\n            const view = newViews[i],\n              newQuery = view.query;\n            const listener = syncTreeCreateListenerForView_(syncTree, view);\n            syncTree.listenProvider_.startListening(\n              syncTreeQueryForListening_(newQuery),\n              syncTreeTagForQuery(syncTree, newQuery),\n              listener.hashFn,\n              listener.onComplete\n            );\n          }\n        }\n        // Otherwise there's nothing below us, so nothing we need to start listening on\n      }\n      // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          const defaultTag: number | null = null;\n          syncTree.listenProvider_.stopListening(\n            syncTreeQueryForListening_(query),\n            defaultTag\n          );\n        } else {\n          removed.forEach((queryToRemove: QueryContext) => {\n            const tagToRemove = syncTree.queryToTagMap.get(\n              syncTreeMakeQueryKey_(queryToRemove)\n            );\n            syncTree.listenProvider_.stopListening(\n              syncTreeQueryForListening_(queryToRemove),\n              tagToRemove\n            );\n          });\n        }\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  } else {\n    // No-op, this listener must've been already removed\n  }\n  return cancelEvents;\n}\n\n/**\n * Apply new server data for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  snap: Node,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new Overwrite(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      snap\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n\n/**\n * Apply server data to be merged in for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n    const op = new Merge(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      changeTree\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeAddEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  skipSetupListener = false\n): Event[] {\n  const path = query._path;\n\n  let serverCache: Node | null = null;\n  let foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    const subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild((childName, childSyncPoint) => {\n      const completeCache = syncPointGetCompleteServerCache(\n        childSyncPoint,\n        newEmptyPath()\n      );\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(\n          childName,\n          completeCache\n        );\n      }\n    });\n  }\n\n  const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    const queryKey = syncTreeMakeQueryKey_(query);\n    assert(\n      !syncTree.queryToTagMap.has(queryKey),\n      'View does not exist, but we have a tag'\n    );\n    const tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  let events = syncPointAddEventRegistration(\n    syncPoint,\n    query,\n    eventRegistration,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!viewAlreadyExists && !foundAncestorDefaultView && !skipSetupListener) {\n    const view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n\n/**\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\n *\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n *\n * @param path - The path to the data we want\n * @param writeIdsToExclude - A specific set to be excluded\n */\nexport function syncTreeCalcCompleteEventCache(\n  syncTree: SyncTree,\n  path: Path,\n  writeIdsToExclude?: number[]\n): Node {\n  const includeHiddenSets = true;\n  const writeTree = syncTree.pendingWriteTree_;\n  const serverCache = syncTree.syncPointTree_.findOnPath(\n    path,\n    (pathSoFar, syncPoint) => {\n      const relativePath = newRelativePath(pathSoFar, path);\n      const serverCache = syncPointGetCompleteServerCache(\n        syncPoint,\n        relativePath\n      );\n      if (serverCache) {\n        return serverCache;\n      }\n    }\n  );\n  return writeTreeCalcCompleteEventCache(\n    writeTree,\n    path,\n    serverCache,\n    writeIdsToExclude,\n    includeHiddenSets\n  );\n}\n\nexport function syncTreeGetServerValue(\n  syncTree: SyncTree,\n  query: QueryContext\n): Node | null {\n  const path = query._path;\n  let serverCache: Node | null = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  const serverCacheComplete = serverCache != null;\n  const serverCacheNode: CacheNode | null = serverCacheComplete\n    ? new CacheNode(serverCache, true, false)\n    : null;\n  const writesCache: WriteTreeRef | null = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    query._path\n  );\n  const view: View = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n    serverCacheComplete\n  );\n  return viewGetCompleteNode(view);\n}\n\n/**\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n *\n * NOTES:\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n *\n * - We call applyOperation() on each SyncPoint passing three things:\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n *   3. A snapshot Node with cached server data, if we have it.\n *\n * - We concatenate all of the events returned by each SyncPoint and return the result.\n */\nfunction syncTreeApplyOperationToSyncPoints_(\n  syncTree: SyncTree,\n  operation: Operation\n): Event[] {\n  return syncTreeApplyOperationHelper_(\n    operation,\n    syncTree.syncPointTree_,\n    /*serverCache=*/ null,\n    writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath())\n  );\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(\n      operation,\n      syncPointTree,\n      serverCache,\n      writesCache\n    );\n  } else {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    const childName = pathGetFront(operation.path);\n    const childOperation = operation.operationForChild(childName);\n    const childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(\n        syncTreeApplyOperationHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationDescendantsHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  const syncPoint = syncPointTree.get(newEmptyPath());\n\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let events: Event[] = [];\n  syncPointTree.children.inorderTraversal((childName, childTree) => {\n    const childServerCache = serverCache\n      ? serverCache.getImmediateChild(childName)\n      : null;\n    const childWritesCache = writeTreeRefChild(writesCache, childName);\n    const childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(\n        syncTreeApplyOperationDescendantsHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(\n      syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n    );\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(\n  syncTree: SyncTree,\n  view: View\n): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n  const query = view.query;\n  const tag = syncTreeTagForQuery(syncTree, query);\n\n  return {\n    hashFn: () => {\n      const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: (status: string): Event[] => {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        const error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(\n          syncTree,\n          query,\n          /*eventRegistration*/ null,\n          error\n        );\n      }\n    }\n  };\n}\n\n/**\n * Return the tag associated with the given query.\n */\nexport function syncTreeTagForQuery(\n  syncTree: SyncTree,\n  query: QueryContext\n): number | null {\n  const queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n\n/**\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n */\nfunction syncTreeMakeQueryKey_(query: QueryContext): string {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n\n/**\n * Return the query associated with the given tag, if we have one\n */\nfunction syncTreeQueryKeyForTag_(\n  syncTree: SyncTree,\n  tag: number\n): string | null {\n  return syncTree.tagToQueryMap.get(tag);\n}\n\n/**\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n */\nfunction syncTreeParseQueryKey_(queryKey: string): {\n  queryId: string;\n  path: Path;\n} {\n  const splitIndex = queryKey.indexOf('$');\n  assert(\n    splitIndex !== -1 && splitIndex < queryKey.length - 1,\n    'Bad queryKey.'\n  );\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n\n/**\n * A helper method to apply tagged operations\n */\nfunction syncTreeApplyTaggedOperation_(\n  syncTree: SyncTree,\n  queryPath: Path,\n  operation: Operation\n): Event[] {\n  const syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  const writesCache = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    queryPath\n  );\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n\n/**\n * This collapses multiple unfiltered views into a single view, since we only need a single\n * listener for them.\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(\n  subtree: ImmutableTree<SyncPoint>\n): View[] {\n  return subtree.fold<View[]>((relativePath, maybeChildSyncPoint, childMap) => {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      let views: View[] = [];\n      if (maybeChildSyncPoint) {\n        views = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, (_key: string, childViews: View[]) => {\n        views = views.concat(childViews);\n      });\n      return views;\n    }\n  });\n}\n\n/**\n * Normalizes a query to a query we send the server for listening\n *\n * @returns The normalized query\n */\nfunction syncTreeQueryForListening_(query: QueryContext): QueryContext {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree: SyncTree, queries: QueryContext[]) {\n  for (let j = 0; j < queries.length; ++j) {\n    const removedQuery = queries[j];\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n\n/**\n * Static accessor for query tags.\n */\nfunction syncTreeGetNextQueryTag_(): number {\n  return syncTreeNextQueryTag_++;\n}\n\n/**\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\n *\n * @returns This method can return events to support synchronous data sources\n */\nfunction syncTreeSetupListener_(\n  syncTree: SyncTree,\n  query: QueryContext,\n  view: View\n): Event[] {\n  const path = query._path;\n  const tag = syncTreeTagForQuery(syncTree, query);\n  const listener = syncTreeCreateListenerForView_(syncTree, view);\n\n  const events = syncTree.listenProvider_.startListening(\n    syncTreeQueryForListening_(query),\n    tag,\n    listener.hashFn,\n    listener.onComplete\n  );\n\n  const subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(\n      !syncPointHasCompleteView(subtree.value),\n      \"If we're adding a query, it shouldn't be shadowed\"\n    );\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    const queriesToStop = subtree.fold<QueryContext[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (\n          !pathIsEmpty(relativePath) &&\n          maybeChildSyncPoint &&\n          syncPointHasCompleteView(maybeChildSyncPoint)\n        ) {\n          return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: QueryContext[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              syncPointGetQueryViews(maybeChildSyncPoint).map(\n                view => view.query\n              )\n            );\n          }\n          each(childMap, (_key: string, childQueries: QueryContext[]) => {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      }\n    );\n    for (let i = 0; i < queriesToStop.length; ++i) {\n      const queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(\n        syncTreeQueryForListening_(queryToStop),\n        syncTreeTagForQuery(syncTree, queryToStop)\n      );\n    }\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { LeafNode } from '../snap/LeafNode';\nimport { Node } from '../snap/Node';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { SyncTree, syncTreeCalcCompleteEventCache } from '../SyncTree';\n\nimport { Indexable } from './misc';\nimport { Path, pathChild } from './Path';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path - path to which write is relative\n * @param node - new data written at path\n * @param syncTree - current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, safeGet } from '@firebase/util';\n\nimport { Path, pathGetFront, pathPopFront } from './Path';\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport interface TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: Record<string, TreeNode<T>>;\n  childCount: number;\n  value?: T;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name - Optional name of the node.\n   * @param parent - Optional parent node.\n   * @param node - Optional node to wrap.\n   */\n  constructor(\n    readonly name: string = '',\n    readonly parent: Tree<T> | null = null,\n    public node: TreeNode<T> = { children: {}, childCount: 0 }\n  ) {}\n}\n\n/**\n * Returns a sub-Tree for the given path.\n *\n * @param pathObj - Path to look up.\n * @returns Tree for path.\n */\nexport function treeSubTree<T>(tree: Tree<T>, pathObj: string | Path): Tree<T> {\n  // TODO: Require pathObj to be Path?\n  let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  let child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    const childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree<T>(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n\n/**\n * Returns the data associated with this tree node.\n *\n * @returns The data or null if no data exists.\n */\nexport function treeGetValue<T>(tree: Tree<T>): T | undefined {\n  return tree.node.value;\n}\n\n/**\n * Sets data to this tree node.\n *\n * @param value - Value to set.\n */\nexport function treeSetValue<T>(tree: Tree<T>, value: T | undefined): void {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n\n/**\n * @returns Whether the tree has any children.\n */\nexport function treeHasChildren<T>(tree: Tree<T>): boolean {\n  return tree.node.childCount > 0;\n}\n\n/**\n * @returns Whethe rthe tree is empty (no value or children).\n */\nexport function treeIsEmpty<T>(tree: Tree<T>): boolean {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n\n/**\n * Calls action for each child of this tree node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachChild<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  each(tree.node.children, (child: string, childTree: TreeNode<T>) => {\n    action(new Tree<T>(child, tree, childTree));\n  });\n}\n\n/**\n * Does a depth-first traversal of this node's descendants, calling action for each one.\n *\n * @param action - Action to be called for each child.\n * @param includeSelf - Whether to call action on this node as well. Defaults to\n *   false.\n * @param childrenFirst - Whether to call action on children before calling it on\n *   parent.\n */\nexport function treeForEachDescendant<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void,\n  includeSelf?: boolean,\n  childrenFirst?: boolean\n): void {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, child => {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n\n/**\n * Calls action on each ancestor node.\n *\n * @param action - Action to be called on each parent; return\n *   true to abort.\n * @param includeSelf - Whether to call action on this node as well.\n * @returns true if the action callback returned true.\n */\nexport function treeForEachAncestor<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => unknown,\n  includeSelf?: boolean\n): boolean {\n  let node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n\n/**\n * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n * is found, action is called on it and traversal does not continue inside the node.\n * Action is *not* called on this node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachImmediateDescendantWithValue<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  treeForEachChild(tree, child => {\n    if (treeGetValue(child) !== undefined) {\n      action(child);\n    } else {\n      treeForEachImmediateDescendantWithValue(child, action);\n    }\n  });\n}\n\n/**\n * @returns The path of this tree node, as a Path.\n */\nexport function treeGetPath<T>(tree: Tree<T>) {\n  return new Path(\n    tree.parent === null\n      ? tree.name\n      : treeGetPath(tree.parent) + '/' + tree.name\n  );\n}\n\n/**\n * Adds or removes this child from its parent based on whether it's empty or not.\n */\nfunction treeUpdateParents<T>(tree: Tree<T>) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n\n/**\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\n *\n * @param childName - The name of the child to update.\n * @param child - The child to update.\n */\nfunction treeUpdateChild<T>(tree: Tree<T>, childName: string, child: Tree<T>) {\n  const childEmpty = treeIsEmpty(child);\n  const childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath,\n  validationPathPop,\n  validationPathPush,\n  validationPathToErrorString\n} from './Path';\nimport { each, isInvalidJSONNumber } from './util';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  value: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefixFxn(fnName, 'value'), value, path);\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(\n      errorPrefix + 'contains undefined ' + validationPathToErrorString(path)\n    );\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        validationPathToErrorString(path) +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix +\n        'contains ' +\n        data.toString() +\n        ' ' +\n        validationPathToErrorString(path)\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        validationPathToErrorString(path) +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              validationPathToErrorString(path) +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          validationPathToErrorString(path) +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentName: string,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\n/**\n * @internal\n */\nexport const validatePathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\n/**\n * @internal\n */\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'url') +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentName: string,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentName) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\n\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList - The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path - The path to raise events for.\n * @param eventDataList - The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath - The path to raise events for.\n * @param eventDataList - The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\n\nimport { ValueEventRegistration } from '../api/Reference_impl';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  newSparseSnapshotTree,\n  SparseSnapshotTree,\n  sparseSnapshotTreeForEachTree,\n  sparseSnapshotTreeForget,\n  sparseSnapshotTreeRemember\n} from './SparseSnapshotTree';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  statsManagerGetCollection,\n  statsManagerGetOrCreateReporter\n} from './stats/StatsManager';\nimport { StatsReporter, statsReporterIncludeStat } from './stats/StatsReporter';\nimport {\n  SyncTree,\n  syncTreeAckUserWrite,\n  syncTreeAddEventRegistration,\n  syncTreeApplyServerMerge,\n  syncTreeApplyServerOverwrite,\n  syncTreeApplyTaggedQueryMerge,\n  syncTreeApplyTaggedQueryOverwrite,\n  syncTreeApplyUserMerge,\n  syncTreeApplyUserOverwrite,\n  syncTreeCalcCompleteEventCache,\n  syncTreeGetServerValue,\n  syncTreeRemoveEventRegistration,\n  syncTreeTagForQuery\n} from './SyncTree';\nimport { Indexable } from './util/misc';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport {\n  Tree,\n  treeForEachAncestor,\n  treeForEachChild,\n  treeForEachDescendant,\n  treeGetPath,\n  treeGetValue,\n  treeHasChildren,\n  treeSetValue,\n  treeSubTree\n} from './util/Tree';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { Event } from './view/Event';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nconst enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  infoSyncTree_: SyncTree;\n  serverSyncTree_: SyncTree;\n\n  stats_: StatsCollection;\n  statsListener_: StatsListener | null = null;\n  eventQueue_ = new EventQueue();\n  nextWriteId_ = 1;\n  server_: ServerActions;\n  statsReporter_: StatsReporter;\n  infoData_: SnapshotHolder;\n  interceptServerDataCallback_: ((a: string, b: unknown) => void) | null = null;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  onDisconnect_: SparseSnapshotTree = newSparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    public forceRestClient_: boolean,\n    public authTokenProvider_: AuthTokenProvider,\n    public appCheckProvider_: AppCheckTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  /**\n   * @returns The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n}\n\nexport function repoStart(\n  repo: Repo,\n  appId: string,\n  authOverride?: object\n): void {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(\n      repo.repoInfo_,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_\n    );\n\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error(\n          'Only objects are supported for option databaseAuthVariableOverride'\n        );\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(\n      repo.repoInfo_,\n      appId,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      (connectStatus: boolean) => {\n        repoOnConnectStatus(repo, connectStatus);\n      },\n      (updates: object) => {\n        repoOnServerInfoUpdate(repo, updates);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_,\n      authOverride\n    );\n\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(token => {\n    repo.server_.refreshAuthToken(token);\n  });\n\n  repo.appCheckProvider_.addTokenChangeListener(result => {\n    repo.server_.refreshAppCheckToken(result.token);\n  });\n\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(\n    repo.repoInfo_,\n    () => new StatsReporter(repo.stats_, repo.server_)\n  );\n\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      let infoEvents: Event[] = [];\n      const node = repo.infoData_.getNode(query._path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(\n          repo.infoSyncTree_,\n          query._path,\n          node\n        );\n        setTimeout(() => {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: () => {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      repo.server_.listen(query, currentHashFn, tag, (status, data) => {\n        const events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          query._path,\n          events\n        );\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: (query, tag) => {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n\n/**\n * @returns The time in milliseconds, taking the server offset into account if we have one.\n */\nexport function repoServerTime(repo: Repo): number {\n  const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  const offset = (offsetNode.val() as number) || 0;\n  return new Date().getTime() + offset;\n}\n\n/**\n * Generate ServerValues using some variables from the repo object.\n */\nexport function repoGenerateServerValues(repo: Repo): Indexable {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n\n/**\n * Called by realtime when we get new messages from the server.\n */\nfunction repoOnDataUpdate(\n  repo: Repo,\n  pathString: string,\n  data: unknown,\n  isMerge: boolean,\n  tag: number | null\n): void {\n  // For testing.\n  repo.dataUpdateCount++;\n  const path = new Path(pathString);\n  data = repo.interceptServerDataCallback_\n    ? repo.interceptServerDataCallback_(pathString, data)\n    : data;\n  let events = [];\n  if (tag) {\n    if (isMerge) {\n      const taggedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = syncTreeApplyTaggedQueryMerge(\n        repo.serverSyncTree_,\n        path,\n        taggedChildren,\n        tag\n      );\n    } else {\n      const taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(\n        repo.serverSyncTree_,\n        path,\n        taggedSnap,\n        tag\n      );\n    }\n  } else if (isMerge) {\n    const changedChildren = map(\n      data as { [k: string]: unknown },\n      (raw: unknown) => nodeFromJSON(raw)\n    );\n    events = syncTreeApplyServerMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren\n    );\n  } else {\n    const snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  let affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n\n// TODO: This should be @private but it's used by test_access.js and internal.js\nexport function repoInterceptServerData(\n  repo: Repo,\n  callback: ((a: string, b: unknown) => unknown) | null\n): void {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo: Repo, connectStatus: boolean): void {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo: Repo, updates: object): void {\n  each(updates, (key: string, value: unknown) => {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo: Repo, pathString: string, value: unknown): void {\n  const path = new Path('/.info/' + pathString);\n  const newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  const events = syncTreeApplyServerOverwrite(\n    repo.infoSyncTree_,\n    path,\n    newNode\n  );\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo: Repo): number {\n  return repo.nextWriteId_++;\n}\n\n/**\n * The purpose of `getValue` is to return the latest known value\n * satisfying `query`.\n *\n * This method will first check for in-memory cached values\n * belonging to active listeners. If they are found, such values\n * are considered to be the most up-to-date.\n *\n * If the client is not connected, this method will wait until the\n *  repo has established a connection and then request the value for `query`.\n * If the client is not able to retrieve the query result for another reason,\n * it reports an error.\n *\n * @param query - The query to surface a value for.\n */\nexport function repoGetValue(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: ValueEventRegistration\n): Promise<Node> {\n  // Only active queries are cached. There is no persisted cache.\n  const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(\n    payload => {\n      const node = nodeFromJSON(payload).withIndex(\n        query._queryParams.getIndex()\n      );\n      /**\n       * Below we simulate the actions of an `onlyOnce` `onValue()` event where:\n       * Add an event registration,\n       * Update data at the path,\n       * Raise any events,\n       * Cleanup the SyncTree\n       */\n      syncTreeAddEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        true\n      );\n      let events: Event[];\n      if (query._queryParams.loadsAllData()) {\n        events = syncTreeApplyServerOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node\n        );\n      } else {\n        const tag = syncTreeTagForQuery(repo.serverSyncTree_, query);\n        events = syncTreeApplyTaggedQueryOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node,\n          tag\n        );\n      }\n      /*\n       * We need to raise events in the scenario where `get()` is called at a parent path, and\n       * while the `get()` is pending, `onValue` is called at a child location. While get() is waiting\n       * for the data, `onValue` will register a new event. Then, get() will come back, and update the syncTree\n       * and its corresponding serverCache, including the child location where `onValue` is called. Then,\n       * `onValue` will receive the event from the server, but look at the syncTree and see that the data received\n       * from the server is already at the SyncPoint, and so the `onValue` callback will never get fired.\n       * Calling `eventQueueRaiseEventsForChangedPath()` is the correct way to propagate the events and\n       * ensure the corresponding child events will get fired.\n       */\n      eventQueueRaiseEventsForChangedPath(\n        repo.eventQueue_,\n        query._path,\n        events\n      );\n      syncTreeRemoveEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        null,\n        true\n      );\n      return node;\n    },\n    err => {\n      repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n      return Promise.reject(new Error(err as string));\n    }\n  );\n}\n\nexport function repoSetWithPriority(\n  repo: Repo,\n  path: Path,\n  newVal: unknown,\n  newPriority: number | string | null,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  const serverValues = repoGenerateServerValues(repo);\n  const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  const newNode = resolveDeferredValueSnapshot(\n    newNodeUnresolved,\n    existing,\n    serverValues\n  );\n\n  const writeId = repoGetNextWriteId(repo);\n  const events = syncTreeApplyUserOverwrite(\n    repo.serverSyncTree_,\n    path,\n    newNode,\n    writeId,\n    true\n  );\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(\n    path.toString(),\n    newNodeUnresolved.val(/*export=*/ true),\n    (status, errorReason) => {\n      const success = status === 'ok';\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      const clearEvents = syncTreeAckUserWrite(\n        repo.serverSyncTree_,\n        writeId,\n        !success\n      );\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n  const affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nexport function repoUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\n\n  // Start with our existing data and merge each child into it.\n  let empty = true;\n  const serverValues = repoGenerateServerValues(repo);\n  const changedChildren: { [k: string]: Node } = {};\n  each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(\n      pathChild(path, changedKey),\n      nodeFromJSON(changedValue),\n      repo.serverSyncTree_,\n      serverValues\n    );\n  });\n\n  if (!empty) {\n    const writeId = repoGetNextWriteId(repo);\n    const events = syncTreeApplyUserMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren,\n      writeId\n    );\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          writeId,\n          !success\n        );\n        const affectedPath =\n          clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          affectedPath,\n          clearEvents\n        );\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n      }\n    );\n\n    each(childrenToMerge, (changedPath: string) => {\n      const affectedPath = repoAbortTransactions(\n        repo,\n        pathChild(path, changedPath)\n      );\n      repoRerunTransactions(repo, affectedPath);\n    });\n\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n\n/**\n * Applies all of the changes stored up in the onDisconnect_ tree.\n */\nfunction repoRunOnDisconnectEvents(repo: Repo): void {\n  repoLog(repo, 'onDisconnectEvents');\n\n  const serverValues = repoGenerateServerValues(repo);\n  const resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(\n    repo.onDisconnect_,\n    newEmptyPath(),\n    (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        repo.serverSyncTree_,\n        serverValues\n      );\n      sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n    }\n  );\n  let events: Event[] = [];\n\n  sparseSnapshotTreeForEachTree(\n    resolvedOnDisconnectTree,\n    newEmptyPath(),\n    (path, snap) => {\n      events = events.concat(\n        syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap)\n      );\n      const affectedPath = repoAbortTransactions(repo, path);\n      repoRerunTransactions(repo, affectedPath);\n    }\n  );\n\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nexport function repoOnDisconnectCancel(\n  repo: Repo,\n  path: Path,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nexport function repoOnDisconnectSet(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectSetWithPriority(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  priority: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(\n    path.toString(),\n    childrenToMerge,\n    (status, errorReason) => {\n      if (status === 'ok') {\n        each(childrenToMerge, (childName: string, childNode: unknown) => {\n          const newChildNode = nodeFromJSON(childNode);\n          sparseSnapshotTreeRemember(\n            repo.onDisconnect_,\n            pathChild(path, childName),\n            newChildNode\n          );\n        });\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoAddEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeAddEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoRemoveEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeRemoveEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoInterrupt(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nexport function repoResume(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nexport function repoStats(repo: Repo, showDelta: boolean = false): void {\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  let stats: { [k: string]: unknown };\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  const longestName = Object.keys(stats).reduce(\n    (previousValue, currentValue) =>\n      Math.max(currentValue.length, previousValue),\n    0\n  );\n\n  each(stats, (stat: string, value: unknown) => {\n    let paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (let i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\n\nexport function repoStatsIncrementCounter(repo: Repo, metric: string): void {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo: Repo, ...varArgs: unknown[]): void {\n  let prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log(prefix, ...varArgs);\n}\n\nexport function repoCallOnCompleteCallback(\n  repo: Repo,\n  callback: ((status: Error | null, errorReason?: string) => void) | null,\n  status: string,\n  errorReason?: string | null\n): void {\n  if (callback) {\n    exceptionGuard(() => {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        const code = (status || 'error').toUpperCase();\n        let message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        const error = new Error(message);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (error as any).code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and\n * sends it to the server if possible.\n *\n * @param path - Path at which to do transaction.\n * @param transactionUpdate - Update callback.\n * @param onComplete - Completion callback.\n * @param unwatcher - Function that will be called when the transaction no longer\n * need data updates for `path`.\n * @param applyLocally - Whether or not to make intermediate results visible\n */\nexport function repoStartTransaction(\n  repo: Repo,\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((error: Error, committed: boolean, node: Node) => void) | null,\n  unwatcher: () => void,\n  applyLocally: boolean\n): void {\n  repoLog(repo, 'transaction on ' + path);\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    const nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n\n    treeSetValue(queueNode, nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    const serverValues = repoGenerateServerValues(repo);\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n\n    const events = syncTreeApplyUserOverwrite(\n      repo.serverSyncTree_,\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n\n/**\n * @param excludeSets - A specific set to exclude\n */\nfunction repoGetLatestState(\n  repo: Repo,\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n}\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding\n * transactions to complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively\n * with a particular transactionQueueTree node to recurse through the tree.\n *\n * @param node - transactionQueueTree node to start at.\n */\nfunction repoSendReadyTransactions(\n  repo: Repo,\n  node: Tree<Transaction[]> = repo.transactionQueueTree_\n): void {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    const queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, childNode => {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n\n/**\n * Given a list of run transactions, send them to the server and then handle\n * the result (success or failure).\n *\n * @param path - The location of the queue.\n * @param queue - Queue of transactions under the specified location.\n */\nfunction repoSendTransactionQueue(\n  repo: Repo,\n  path: Path,\n  queue: Transaction[]\n): void {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = repoGetLatestState(repo, path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  repo.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      repoLog(repo, 'transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            callbacks.push(() =>\n              queue[i].onComplete(\n                null,\n                true,\n                queue[i].currentOutputSnapshotResolved\n              )\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        repoPruneCompletedTransactionsBelowNode(\n          repo,\n          treeSubTree(repo.transactionQueueTree_, path)\n        );\n        // There may be pending transactions that we can now send.\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        repoRerunTransactions(repo, path);\n      }\n    },\n    latestHash\n  );\n}\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions. This\n * is the path at which events need to be raised for.\n *\n * @param changedPath - The path in mergedData that changed.\n * @returns The rootmost path that was affected by rerunning transactions.\n */\nfunction repoRerunTransactions(repo: Repo, changedPath: Path): Path {\n  const rootMostTransactionNode = repoGetAncestorTransactionNode(\n    repo,\n    changedPath\n  );\n  const path = treeGetPath(rootMostTransactionNode);\n\n  const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n\n  return path;\n}\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted\n * transactions and whatnot).\n *\n * @param queue - The queue of transactions to run.\n * @param path - The path the queue is for.\n */\nfunction repoRerunTransactionQueue(\n  repo: Repo,\n  queue: Transaction[],\n  path: Path\n): void {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = newRelativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          transaction.currentWriteId,\n          true\n        )\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            transaction.currentWriteId,\n            true\n          )\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = repoGetLatestState(\n          repo,\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = repoGenerateServerValues(repo);\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            syncTreeApplyUserOverwrite(\n              repo.serverSyncTree_,\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            syncTreeAckUserWrite(\n              repo.serverSyncTree_,\n              transaction.currentWriteId,\n              true\n            )\n          );\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(() =>\n            queue[i].onComplete(null, false, queue[i].currentInputSnapshot)\n          );\n        } else {\n          callbacks.push(() =>\n            queue[i].onComplete(new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending\n * transaction on it, or just returns the node for the given path if there are\n * no pending transactions on any ancestor.\n *\n * @param path - The location to start at.\n * @returns The rootmost node with a transaction.\n */\nfunction repoGetAncestorTransactionNode(\n  repo: Repo,\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  let transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n\n/**\n * Builds the queue of all transactions at or below the specified\n * transactionNode.\n *\n * @param transactionNode\n * @returns The generated queue.\n */\nfunction repoBuildTransactionQueue(\n  repo: Repo,\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  repoAggregateTransactionQueuesForNode(\n    repo,\n    transactionNode,\n    transactionQueue\n  );\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => a.order - b.order);\n\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(\n  repo: Repo,\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n): void {\n  const nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, child => {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n */\nfunction repoPruneCompletedTransactionsBelowNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, childNode => {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.\n * Called when doing a set() or update() since we consider them incompatible\n * with transactions.\n *\n * @param path - Path for which we want to abort related transactions.\n */\nfunction repoAbortTransactions(repo: Repo, path: Path): Path {\n  const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n\n  const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n\n  treeForEachAncestor(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  repoAbortTransactionsOnNode(repo, transactionNode);\n\n  treeForEachDescendant(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  return affectedPath;\n}\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param node - Node to abort transactions for.\n */\nfunction repoAbortTransactionsOnNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            queue[i].currentWriteId,\n            true\n          )\n        );\n        if (queue[i].onComplete) {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, null)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(\n      repo.eventQueue_,\n      treeGetPath(node),\n      events\n    );\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../../RepoInfo';\nimport { Path } from '../Path';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @returns key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      webSocketOnly,\n      nodeAdmin,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (dataURL: string): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\n\nimport { DataSnapshot as ExpDataSnapshot } from '../../api/Reference_impl';\nimport { Path } from '../util/Path';\n\nimport { EventRegistration } from './EventRegistration';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  getPath(): Path;\n\n  getEventType(): string;\n\n  getEventRunner(): () => void;\n\n  toString(): string;\n}\n\n/**\n * One of the following strings: \"value\", \"child_added\", \"child_changed\",\n * \"child_removed\", or \"child_moved.\"\n */\nexport type EventType =\n  | 'value'\n  | 'child_added'\n  | 'child_changed'\n  | 'child_moved'\n  | 'child_removed';\n\n/**\n * Encapsulates the data needed to raise an event\n */\nexport class DataEvent implements Event {\n  /**\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\n   * @param eventRegistration - The function to call to with the event data. User provided\n   * @param snapshot - The data backing the event\n   * @param prevName - Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType: EventType,\n    public eventRegistration: EventRegistration,\n    public snapshot: ExpDataSnapshot,\n    public prevName?: string | null\n  ) {}\n  getPath(): Path {\n    const ref = this.snapshot.ref;\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  }\n  getEventType(): string {\n    return this.eventType;\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n  getPath(): Path {\n    return this.path;\n  }\n  getEventType(): string {\n    return 'cancel';\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { DataSnapshot } from '../../api/Reference_impl';\nimport { Repo } from '../Repo';\nimport { Path } from '../util/Path';\n\nimport { Change } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport { QueryParams } from './QueryParams';\n\n/**\n * A user callback. Callbacks issues from the Legacy SDK maintain references\n * to the original user-issued callbacks, which allows equality\n * comparison by reference even though this callbacks are wrapped before\n * they can be passed to the firebase@exp SDK.\n *\n * @internal\n */\nexport interface UserCallback {\n  (dataSnapshot: DataSnapshot, previousChildName?: string | null): unknown;\n  userCallback?: unknown;\n  context?: object | null;\n}\n\n/**\n * A wrapper class that converts events from the database@exp SDK to the legacy\n * Database SDK. Events are not converted directly as event registration relies\n * on reference comparison of the original user callback (see `matches()`) and\n * relies on equality of the legacy SDK's `context` object.\n */\nexport class CallbackContext {\n  constructor(\n    private readonly snapshotCallback: UserCallback,\n    private readonly cancelCallback?: (error: Error) => unknown\n  ) {}\n\n  onValue(\n    expDataSnapshot: DataSnapshot,\n    previousChildName?: string | null\n  ): void {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  }\n\n  onCancel(error: Error): void {\n    assert(\n      this.hasCancelCallback,\n      'Raising a cancel event on a listener with no cancel callback'\n    );\n    return this.cancelCallback.call(null, error);\n  }\n\n  get hasCancelCallback(): boolean {\n    return !!this.cancelCallback;\n  }\n\n  matches(other: CallbackContext): boolean {\n    return (\n      this.snapshotCallback === other.snapshotCallback ||\n      (this.snapshotCallback.userCallback !== undefined &&\n        this.snapshotCallback.userCallback ===\n          other.snapshotCallback.userCallback &&\n        this.snapshotCallback.context === other.snapshotCallback.context)\n    );\n  }\n}\n\nexport interface QueryContext {\n  readonly _queryIdentifier: string;\n  readonly _queryObject: object;\n  readonly _repo: Repo;\n  readonly _path: Path;\n  readonly _queryParams: QueryParams;\n}\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   */\n  respondsTo(eventType: string): boolean;\n\n  createEvent(change: Change, query: QueryContext): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   */\n  hasAnyCallback(): boolean;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, getModularInstance, Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoAddEventCallbackForQuery,\n  repoGetValue,\n  repoRemoveEventCallbackForQuery,\n  repoServerTime,\n  repoSetWithPriority,\n  repoUpdate\n} from '../core/Repo';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\nimport { Index } from '../core/snap/indexes/Index';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { Node } from '../core/snap/Node';\nimport { syncPointSetReferenceConstructor } from '../core/SyncPoint';\nimport { syncTreeSetReferenceConstructor } from '../core/SyncTree';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { nextPushId } from '../core/util/NextPushId';\nimport {\n  Path,\n  pathEquals,\n  pathGetBack,\n  pathGetFront,\n  pathChild,\n  pathParent,\n  pathToUrlEncodedString,\n  pathIsEmpty\n} from '../core/util/Path';\nimport {\n  fatal,\n  MAX_NAME,\n  MIN_NAME,\n  ObjectToUniqueKey\n} from '../core/util/util';\nimport {\n  isValidPriority,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validateKey,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateUrl,\n  validateWritablePath\n} from '../core/util/validation';\nimport { Change } from '../core/view/Change';\nimport { CancelEvent, DataEvent, EventType } from '../core/view/Event';\nimport {\n  CallbackContext,\n  EventRegistration,\n  QueryContext,\n  UserCallback\n} from '../core/view/EventRegistration';\nimport {\n  QueryParams,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsOrderBy,\n  queryParamsStartAfter,\n  queryParamsStartAt\n} from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './OnDisconnect';\nimport {\n  ListenOptions,\n  Query as Query,\n  DatabaseReference,\n  Unsubscribe,\n  ThenableReference\n} from './Reference';\n\n/**\n * @internal\n */\nexport class QueryImpl implements Query, QueryContext {\n  /**\n   * @hideconstructor\n   */\n  constructor(\n    readonly _repo: Repo,\n    readonly _path: Path,\n    readonly _queryParams: QueryParams,\n    readonly _orderByCalled: boolean\n  ) {}\n\n  get key(): string | null {\n    if (pathIsEmpty(this._path)) {\n      return null;\n    } else {\n      return pathGetBack(this._path);\n    }\n  }\n\n  get ref(): DatabaseReference {\n    return new ReferenceImpl(this._repo, this._path);\n  }\n\n  get _queryIdentifier(): string {\n    const obj = queryParamsGetQueryObject(this._queryParams);\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  get _queryObject(): object {\n    return queryParamsGetQueryObject(this._queryParams);\n  }\n\n  isEqual(other: QueryImpl | null): boolean {\n    other = getModularInstance(other);\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    const sameRepo = this._repo === other._repo;\n    const samePath = pathEquals(this._path, other._path);\n    const sameQueryIdentifier =\n      this._queryIdentifier === other._queryIdentifier;\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  }\n}\n\n/**\n * Validates that no other order by call has been made\n */\nfunction validateNoPreviousOrderByCall(query: QueryImpl, fnName: string) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n\n/**\n * Validates start/end values for queries.\n */\nfunction validateQueryEndpoints(params: QueryParams) {\n  let startNode = null;\n  let endNode = null;\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    const tooManyArgsError =\n      'Query: When ordering by key, you may only pass one argument to ' +\n      'startAt(), endAt(), or equalTo().';\n    const wrongArgTypeError =\n      'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n      'endAt(), endBefore(), or equalTo() must be a string.';\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (\n      (startNode != null && !isValidPriority(startNode)) ||\n      (endNode != null && !isValidPriority(endNode))\n    ) {\n      throw new Error(\n        'Query: When ordering by priority, the first argument passed to startAt(), ' +\n          'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n          '(null, a number, or a string).'\n      );\n    }\n  } else {\n    assert(\n      params.getIndex() instanceof PathIndex ||\n        params.getIndex() === VALUE_INDEX,\n      'unknown index type.'\n    );\n    if (\n      (startNode != null && typeof startNode === 'object') ||\n      (endNode != null && typeof endNode === 'object')\n    ) {\n      throw new Error(\n        'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n          'equalTo() cannot be an object.'\n      );\n    }\n  }\n}\n\n/**\n * Validates that limit* has been called with the correct combination of parameters\n */\nfunction validateLimit(params: QueryParams) {\n  if (\n    params.hasStart() &&\n    params.hasEnd() &&\n    params.hasLimit() &&\n    !params.hasAnchoredLimit()\n  ) {\n    throw new Error(\n      \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n        'limitToFirst() or limitToLast() instead.'\n    );\n  }\n}\n/**\n * @internal\n */\nexport class ReferenceImpl extends QueryImpl implements DatabaseReference {\n  /** @hideconstructor */\n  constructor(repo: Repo, path: Path) {\n    super(repo, path, new QueryParams(), false);\n  }\n\n  get parent(): ReferenceImpl | null {\n    const parentPath = pathParent(this._path);\n    return parentPath === null\n      ? null\n      : new ReferenceImpl(this._repo, parentPath);\n  }\n\n  get root(): ReferenceImpl {\n    let ref: ReferenceImpl = this;\n    while (ref.parent !== null) {\n      ref = ref.parent;\n    }\n    return ref;\n  }\n}\n\n/**\n * A `DataSnapshot` contains data from a Database location.\n *\n * Any time you read data from the Database, you receive the data as a\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\n * JavaScript object by calling the `val()` method. Alternatively, you can\n * traverse into the snapshot by calling `child()` to return child snapshots\n * (which you could then call `val()` on).\n *\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\n * a Database location. It cannot be modified and will never change (to modify\n * data, you always call the `set()` method on a `Reference` directly).\n */\nexport class DataSnapshot {\n  /**\n   * @param _node - A SnapshotNode to wrap.\n   * @param ref - The location this snapshot came from.\n   * @param _index - The iteration order for this snapshot\n   * @hideconstructor\n   */\n  constructor(\n    readonly _node: Node,\n    /**\n     * The location of this DataSnapshot.\n     */\n    readonly ref: DatabaseReference,\n    readonly _index: Index\n  ) {}\n\n  /**\n   * Gets the priority value of the data in this `DataSnapshot`.\n   *\n   * Applications need not use priority but can order collections by\n   * ordinary properties (see\n   * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\n   * ).\n   */\n  get priority(): string | number | null {\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this._node.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * The key (last part of the path) of the location of this `DataSnapshot`.\n   *\n   * The last token in a Database location is considered its key. For example,\n   * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\n   * `DataSnapshot` will return the key for the location that generated it.\n   * However, accessing the key on the root URL of a Database will return\n   * `null`.\n   */\n  get key(): string | null {\n    return this.ref.key;\n  }\n\n  /** Returns the number of child properties of this `DataSnapshot`. */\n  get size(): number {\n    return this._node.numChildren();\n  }\n\n  /**\n   * Gets another `DataSnapshot` for the location at the specified relative path.\n   *\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\n   * another `DataSnapshot` for the location at the specified relative path. The\n   * relative path can either be a simple child name (for example, \"ada\") or a\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\n   * whose value is `null`) is returned.\n   *\n   * @param path - A relative path to the location of child data.\n   */\n  child(path: string): DataSnapshot {\n    const childPath = new Path(path);\n    const childRef = child(this.ref, path);\n    return new DataSnapshot(\n      this._node.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n  /**\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\n   * efficient than using `snapshot.val() !== null`.\n   */\n  exists(): boolean {\n    return !this._node.isEmpty();\n  }\n\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The `exportVal()` method is similar to `val()`, except priority information\n   * is included (if available), making it suitable for backing up your data.\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exportVal(): any {\n    return this._node.val(true);\n  }\n\n  /**\n   * Enumerates the top-level children in the `DataSnapshot`.\n   *\n   * Because of the way JavaScript objects work, the ordering of data in the\n   * JavaScript object returned by `val()` is not guaranteed to match the\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\n   * where `forEach()` comes in handy. It guarantees the children of a\n   * `DataSnapshot` will be iterated in their query order.\n   *\n   * If no explicit `orderBy*()` method is used, results are returned\n   * ordered by key (unless priorities are used, in which case, results are\n   * returned by priority).\n   *\n   * @param action - A function that will be called for each child DataSnapshot.\n   * The callback can return true to cancel further enumeration.\n   * @returns true if enumeration was canceled due to your callback returning\n   * true.\n   */\n  forEach(action: (child: DataSnapshot) => boolean | void): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this._node as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this._index, (key, node) => {\n      return action(\n        new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   *\n   * @param path - A relative path to the location of a potential child.\n   * @returns `true` if data exists at the specified child path; else\n   *  `false`.\n   */\n  hasChild(path: string): boolean {\n    const childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\n   * properties.\n   *\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\n   * children. If it does, you can enumerate them using `forEach()`. If it\n   * doesn't, then either this snapshot contains a primitive value (which can be\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\n   * `null`).\n   *\n   * @returns true if this snapshot has any children; else false.\n   */\n  hasChildren(): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object | null {\n    return this.exportVal();\n  }\n\n  /**\n   * Extracts a JavaScript value from a `DataSnapshot`.\n   *\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\n   * scalar type (string, number, or boolean), an array, or an object. It may\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\n   * data).\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  val(): any {\n    return this._node.val();\n  }\n}\n\n/**\n *\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided path. If no path is provided, the `Reference`\n * will point to the root of the Database.\n *\n * @param db - The database instance to obtain a reference for.\n * @param path - Optional path representing the location the returned\n *   `Reference` will point. If not provided, the returned `Reference` will\n *   point to the root of the Database.\n * @returns If a path is provided, a `Reference`\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\n *   root of the Database.\n */\nexport function ref(db: Database, path?: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('ref');\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n\n/**\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided Firebase URL.\n *\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\n * has a different domain than the current `Database` instance.\n *\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\n * and are not applied to the returned `Reference`.\n *\n * @param db - The database instance to obtain a reference for.\n * @param url - The Firebase URL at which the returned `Reference` will\n *   point.\n * @returns A `Reference` pointing to the provided\n *   Firebase URL.\n */\nexport function refFromURL(db: Database, url: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('refFromURL');\n  const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n\n  const repoInfo = parsedURL.repoInfo;\n  if (\n    !db._repo.repoInfo_.isCustomHost() &&\n    repoInfo.host !== db._repo.repoInfo_.host\n  ) {\n    fatal(\n      'refFromURL' +\n        ': Host name does not match the current database: ' +\n        '(found ' +\n        repoInfo.host +\n        ' but expected ' +\n        db._repo.repoInfo_.host +\n        ')'\n    );\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n/**\n * Gets a `Reference` for the location at the specified relative path.\n *\n * The relative path can either be a simple child name (for example, \"ada\") or\n * a deeper slash-separated path (for example, \"ada/name/first\").\n *\n * @param parent - The parent location.\n * @param path - A relative path from this location to the desired child\n *   location.\n * @returns The specified child location.\n */\nexport function child(\n  parent: DatabaseReference,\n  path: string\n): DatabaseReference {\n  parent = getModularInstance(parent);\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n\n/**\n * Returns an `OnDisconnect` object - see\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information on how to use it.\n *\n * @param ref - The reference to add OnDisconnect triggers for.\n */\nexport function onDisconnect(ref: DatabaseReference): OnDisconnect {\n  ref = getModularInstance(ref) as ReferenceImpl;\n  return new OnDisconnect(ref._repo, ref._path);\n}\n\nexport interface ThenableReferenceImpl\n  extends ReferenceImpl,\n    Pick<Promise<ReferenceImpl>, 'then' | 'catch'> {}\n\n/**\n * Generates a new child location using a unique key and returns its\n * `Reference`.\n *\n * This is the most common pattern for adding data to a collection of items.\n *\n * If you provide a value to `push()`, the value is written to the\n * generated location. If you don't pass a value, nothing is written to the\n * database and the child remains empty (but you can use the `Reference`\n * elsewhere).\n *\n * The unique keys generated by `push()` are ordered by the current time, so the\n * resulting list of items is chronologically sorted. The keys are also\n * designed to be unguessable (they contain 72 random bits of entropy).\n *\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}.\n * See {@link https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}.\n *\n * @param parent - The parent location.\n * @param value - Optional value to be written at the generated location.\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\n * but can be used immediately as the `Reference` to the child location.\n */\nexport function push(\n  parent: DatabaseReference,\n  value?: unknown\n): ThenableReference {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  const now = repoServerTime(parent._repo);\n  const name = nextPushId(now);\n\n  // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n  const thennablePushRef: Partial<ThenableReferenceImpl> = child(\n    parent,\n    name\n  ) as ReferenceImpl;\n  const pushRef = child(parent, name) as ReferenceImpl;\n\n  let promise: Promise<ReferenceImpl>;\n  if (value != null) {\n    promise = set(pushRef, value).then(() => pushRef);\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef as ThenableReferenceImpl;\n}\n\n/**\n * Removes the data at this Database location.\n *\n * Any data at child locations will also be deleted.\n *\n * The effect of the remove will be visible immediately and the corresponding\n * event 'value' will be triggered. Synchronization of the remove to the\n * Firebase servers will also be started, and the returned Promise will resolve\n * when complete. If provided, the onComplete callback will be called\n * asynchronously after synchronization has finished.\n *\n * @param ref - The location to remove.\n * @returns Resolves when remove on server is complete.\n */\nexport function remove(ref: DatabaseReference): Promise<void> {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n\n/**\n * Writes data to this Database location.\n *\n * This will overwrite any data at this location and all child locations.\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\n * all data at this location and all child locations will be deleted.\n *\n * `set()` will remove any priority stored at this location, so if priority is\n * meant to be preserved, you need to use `setWithPriority()` instead.\n *\n * Note that modifying data with `set()` will cancel any pending transactions\n * at that location, so extreme care should be taken if mixing `set()` and\n * `transaction()` to modify the same data.\n *\n * A single `set()` will generate a single \"value\" event at the location where\n * the `set()` was performed.\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function set(ref: DatabaseReference, value: unknown): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    /*priority=*/ null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Sets a priority for the data at this Database location.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setPriority(\n  ref: DatabaseReference,\n  priority: string | number | null\n): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    pathChild(ref._path, '.priority'),\n    priority,\n    null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes data the Database location. Like `set()` but also specifies the\n * priority for that data.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setWithPriority(\n  ref: DatabaseReference,\n  value: unknown,\n  priority: string | number | null\n): Promise<void> {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    priority,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes multiple values to the Database at once.\n *\n * The `values` argument contains multiple property-value pairs that will be\n * written to the Database together. Each child property can either be a simple\n * property (for example, \"name\") or a relative path (for example,\n * \"name/first\") from the current location to the data to update.\n *\n * As opposed to the `set()` method, `update()` can be use to selectively update\n * only the referenced properties at the current location (instead of replacing\n * all the child properties at the current location).\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * A single `update()` will generate a single \"value\" event at the location\n * where the `update()` was performed, regardless of how many children were\n * modified.\n *\n * Note that modifying data with `update()` will cancel any pending\n * transactions at that location, so extreme care should be taken if mixing\n * `update()` and `transaction()` to modify the same data.\n *\n * Passing `null` to `update()` will remove the data at this location.\n *\n * See\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\n *\n * @param ref - The location to write to.\n * @param values - Object containing multiple values.\n * @returns Resolves when update on server is complete.\n */\nexport function update(ref: DatabaseReference, values: object): Promise<void> {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoUpdate(\n    ref._repo,\n    ref._path,\n    values as Record<string, unknown>,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Gets the most up-to-date result for this query.\n *\n * @param query - The query to run.\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\n * available, or rejects if the client is unable to return a value (e.g., if the\n * server is unreachable and there is nothing cached).\n */\nexport function get(query: Query): Promise<DataSnapshot> {\n  query = getModularInstance(query) as QueryImpl;\n  const callbackContext = new CallbackContext(() => {});\n  const container = new ValueEventRegistration(callbackContext);\n  return repoGetValue(query._repo, query, container).then(node => {\n    return new DataSnapshot(\n      node,\n      new ReferenceImpl(query._repo, query._path),\n      query._queryParams.getIndex()\n    );\n  });\n}\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(private callbackContext: CallbackContext) {}\n\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(\n        change.snapshotNode,\n        new ReferenceImpl(query._repo, query._path),\n        index\n      )\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue((eventData as DataEvent).snapshot, null);\n    }\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  }\n\n  hasAnyCallback(): boolean {\n    return this.callbackContext !== null;\n  }\n}\n\n/**\n * Represents the registration of a child_x event.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private eventType: string,\n    private callbackContext: CallbackContext | null\n  ) {}\n\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const childRef = child(\n      new ReferenceImpl(query._repo, query._path),\n      change.childName\n    );\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, childRef, index),\n      change.prevName\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue(\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      return (\n        this.eventType === other.eventType &&\n        (!this.callbackContext ||\n          !other.callbackContext ||\n          this.callbackContext.matches(other.callbackContext))\n      );\n    }\n\n    return false;\n  }\n\n  hasAnyCallback(): boolean {\n    return !!this.callbackContext;\n  }\n}\n\nfunction addEventListener(\n  query: Query,\n  eventType: EventType,\n  callback: UserCallback,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n) {\n  let cancelCallback: ((error: Error) => unknown) | undefined;\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    const userCallback = callback;\n    const onceCallback: UserCallback = (dataSnapshot, previousChildName) => {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback(dataSnapshot, previousChildName);\n    };\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  const callbackContext = new CallbackContext(\n    callback,\n    cancelCallback || undefined\n  );\n  const container =\n    eventType === 'value'\n      ? new ValueEventRegistration(callbackContext)\n      : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'value',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_added',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_changed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_moved',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_removed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\nexport { EventType };\n\n/**\n * Detaches a callback previously attached with the corresponding `on*()` (`onValue`, `onChildAdded`) listener.\n * Note: This is not the recommended way to remove a listener. Instead, please use the returned callback function from\n * the respective `on*` callbacks.\n *\n * Detach a callback previously attached with `on*()`. Calling `off()` on a parent listener\n * will not automatically remove listeners registered on child nodes, `off()`\n * must also be called on any child listeners to remove the callback.\n *\n * If a callback is not specified, all callbacks for the specified eventType\n * will be removed. Similarly, if no eventType is specified, all callbacks\n * for the `Reference` will be removed.\n *\n * Individual listeners can also be removed by invoking their unsubscribe\n * callbacks.\n *\n * @param query - The query that the listener was registered with.\n * @param eventType - One of the following strings: \"value\", \"child_added\",\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\n * for the `Reference` will be removed.\n * @param callback - The callback function that was passed to `on()` or\n * `undefined` to remove all callbacks.\n */\nexport function off(\n  query: Query,\n  eventType?: EventType,\n  callback?: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown\n): void {\n  let container: EventRegistration | null = null;\n  const expCallback = callback ? new CallbackContext(callback) : null;\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'endAt'\n  | 'endBefore'\n  | 'startAt'\n  | 'startAfter'\n  | 'limitToFirst'\n  | 'limitToLast'\n  | 'orderByChild'\n  | 'orderByKey'\n  | 'orderByPriority'\n  | 'orderByValue'\n  | 'equalTo';\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\n * {@link orderByValue}  or {@link equalTo} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint {\n  /** The type of this query constraints */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided `Query` and returns a copy of the `Query` with this\n   * `QueryConstraint` applied.\n   */\n  abstract _apply<T>(query: QueryImpl): QueryImpl;\n}\n\nclass QueryEndAtConstraint extends QueryConstraint {\n  readonly type: 'endAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    const newParams = queryParamsEndAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endAt: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name less than or equal\n * to the specified key.\n *\n * You can read more about `endAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to end at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end at, among the children with the previously\n * specified priority. This argument is only allowed if ordering by child,\n * value, or priority.\n */\nexport function endAt(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nclass QueryEndBeforeConstraint extends QueryConstraint {\n  readonly type: 'endBefore';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    const newParams = queryParamsEndBefore(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endBefore: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is exclusive. If only a value is provided, children\n * with a value less than the specified value will be included in the query.\n * If a key is specified, then children must have a value less than or equal\n * to the specified value and a key name less than the specified key.\n *\n * @param value - The value to end before. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end before, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function endBefore(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nclass QueryStartAtConstraint extends QueryConstraint {\n  readonly type: 'startAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    const newParams = queryParamsStartAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAt: Starting point was already set (by another call to startAt, ' +\n          'startBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name greater than or\n * equal to the specified key.\n *\n * You can read more about `startAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to start at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAt(\n  value: number | string | boolean | null = null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nclass QueryStartAfterConstraint extends QueryConstraint {\n  readonly type: 'startAfter';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    const newParams = queryParamsStartAfter(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAfter: Starting point was already set (by another call to startAt, ' +\n          'startAfter, or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is exclusive. If only a value is provided, children\n * with a value greater than the specified value will be included in the query.\n * If a key is specified, then children must have a value greater than or equal\n * to the specified value and a a key name greater than the specified key.\n *\n * @param value - The value to start after. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start after. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAfter(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nclass QueryLimitToFirstConstraint extends QueryConstraint {\n  readonly type: 'limitToFirst';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToFirst: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToFirst(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that if limited to the first specific number\n * of children.\n *\n * The `limitToFirst()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the first 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToFirst()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToFirst(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nclass QueryLimitToLastConstraint extends QueryConstraint {\n  readonly type: 'limitToLast';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToLast: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToLast(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that is limited to return only the last\n * specified number of children.\n *\n * The `limitToLast()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the last 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToLast()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToLast(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nclass QueryOrderByChildConstraint extends QueryConstraint {\n  readonly type: 'orderByChild';\n\n  constructor(private readonly _path: string) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    const parsedPath = new Path(this._path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'orderByChild: cannot pass in empty path. Use orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the specified child key.\n *\n * Queries can only order by one key at a time. Calling `orderByChild()`\n * multiple times on the same query is an error.\n *\n * Firebase queries allow you to order your data by any child key on the fly.\n * However, if you know in advance what your indexes will be, you can define\n * them via the .indexOn rule in your Security Rules for better performance. See\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\n * rule for more information.\n *\n * You can read more about `orderByChild()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n *\n * @param path - The path to order by.\n */\nexport function orderByChild(path: string): QueryConstraint {\n  if (path === '$key') {\n    throw new Error(\n      'orderByChild: \"$key\" is invalid.  Use orderByKey() instead.'\n    );\n  } else if (path === '$priority') {\n    throw new Error(\n      'orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.'\n    );\n  } else if (path === '$value') {\n    throw new Error(\n      'orderByChild: \"$value\" is invalid.  Use orderByValue() instead.'\n    );\n  }\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nclass QueryOrderByKeyConstraint extends QueryConstraint {\n  readonly type: 'orderByKey';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the key.\n *\n * Sorts the results of a query by their (ascending) key values.\n *\n * You can read more about `orderByKey()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByKey(): QueryConstraint {\n  return new QueryOrderByKeyConstraint();\n}\n\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\n  readonly type: 'orderByPriority';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by priority.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\n * for alternatives to priority.\n */\nexport function orderByPriority(): QueryConstraint {\n  return new QueryOrderByPriorityConstraint();\n}\n\nclass QueryOrderByValueConstraint extends QueryConstraint {\n  readonly type: 'orderByValue';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by value.\n *\n * If the children of a query are all scalar values (string, number, or\n * boolean), you can order the results by their (ascending) values.\n *\n * You can read more about `orderByValue()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByValue(): QueryConstraint {\n  return new QueryOrderByValueConstraint();\n}\n\nclass QueryEqualToValueConstraint extends QueryConstraint {\n  readonly type: 'equalTo';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return new QueryEndAtConstraint(this._value, this._key)._apply(\n      new QueryStartAtConstraint(this._value, this._key)._apply(query)\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` that includes children that match the specified\n * value.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The optional key argument can be used to further limit the range of the\n * query. If it is specified, then children that have exactly the specified\n * value must also have exactly the specified key as their key name. This can be\n * used to filter result sets with many matches for the same value.\n *\n * You can read more about `equalTo()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to match for. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function equalTo(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n\n/**\n * Creates a new immutable instance of `Query` that is extended to also include\n * additional query constraints.\n *\n * @param query - The Query instance to use as a base for the new constraints.\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query(\n  query: Query,\n  ...queryConstraints: QueryConstraint[]\n): Query {\n  let queryImpl = getModularInstance(query) as QueryImpl;\n  for (const constraint of queryConstraints) {\n    queryImpl = constraint._apply(queryImpl);\n  }\n  return queryImpl;\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _FirebaseService,\n  _getProvider,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  getModularInstance,\n  createMockUserToken,\n  EmulatorMockTokenOptions,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from '../core/AppCheckTokenProvider';\nimport {\n  AuthTokenProvider,\n  EmulatorTokenProvider,\n  FirebaseAuthTokenProvider\n} from '../core/AuthTokenProvider';\nimport { Repo, repoInterrupt, repoResume, repoStart } from '../core/Repo';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { newEmptyPath, pathIsEmpty } from '../core/util/Path';\nimport {\n  warn,\n  fatal,\n  log,\n  enableLogging as enableLoggingImpl\n} from '../core/util/util';\nimport { validateUrl } from '../core/util/validation';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { TransportManager } from '../realtime/TransportManager';\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\n\nimport { ReferenceImpl } from './Reference_impl';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n/**\n * This variable is also defined in the firebase Node.js Admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\n/**\n * Creates and caches `Repo` instances.\n */\nconst repos: {\n  [appName: string]: {\n    [dbUrl: string]: Repo;\n  };\n} = {};\n\n/**\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\n */\nlet useRestClient = false;\n\n/**\n * Update an existing `Repo` in place to point to a new host/port.\n */\nfunction repoManagerApplyEmulatorSettings(\n  repo: Repo,\n  host: string,\n  port: number,\n  tokenProvider?: AuthTokenProvider\n): void {\n  repo.repoInfo_ = new RepoInfo(\n    `${host}:${port}`,\n    /* secure= */ false,\n    repo.repoInfo_.namespace,\n    repo.repoInfo_.webSocketOnly,\n    repo.repoInfo_.nodeAdmin,\n    repo.repoInfo_.persistenceKey,\n    repo.repoInfo_.includeNamespaceInQueryParams,\n    /*isUsingEmulator=*/ true\n  );\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n\n/**\n * This function should only ever be called to CREATE a new database instance.\n * @internal\n */\nexport function repoManagerDatabaseFromApp(\n  app: FirebaseApp,\n  authProvider: Provider<FirebaseAuthInternalName>,\n  appCheckProvider?: Provider<AppCheckInternalComponentName>,\n  url?: string,\n  nodeAdmin?: boolean\n): Database {\n  let dbUrl: string | undefined = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\n        \"Can't determine Firebase Database URL. Be sure to include \" +\n          ' a Project ID when calling firebase.initializeApp().'\n      );\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n  }\n\n  let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  let repoInfo = parsedUrl.repoInfo;\n\n  let isEmulator: boolean;\n\n  let dbEmulatorHost: string | undefined = undefined;\n  if (typeof process !== 'undefined' && process.env) {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  const authTokenProvider =\n    nodeAdmin && isEmulator\n      ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\n      : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal(\n      'Database URL must point to the root of a Firebase Database ' +\n        '(not including a child path).'\n    );\n  }\n\n  const repo = repoManagerCreateRepo(\n    repoInfo,\n    app,\n    authTokenProvider,\n    new AppCheckTokenProvider(app.name, appCheckProvider)\n  );\n  return new Database(repo, app);\n}\n\n/**\n * Remove the repo and make sure it is disconnected.\n *\n */\nfunction repoManagerDeleteRepo(repo: Repo, appName: string): void {\n  const appRepos = repos[appName];\n  // This should never happen...\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n\n/**\n * Ensures a repo doesn't already exist and then creates one using the\n * provided app.\n *\n * @param repoInfo - The metadata about the Repo\n * @returns The Repo object for the specified server / repoName.\n */\nfunction repoManagerCreateRepo(\n  repoInfo: RepoInfo,\n  app: FirebaseApp,\n  authTokenProvider: AuthTokenProvider,\n  appCheckProvider: AppCheckTokenProvider\n): Repo {\n  let appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  let repo = appRepos[repoInfo.toURLString()];\n  if (repo) {\n    fatal(\n      'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n    );\n  }\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n\n  return repo;\n}\n\n/**\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n */\nexport function repoManagerForceRestClient(forceRestClient: boolean): void {\n  useRestClient = forceRestClient;\n}\n\n/**\n * Class representing a Firebase Realtime Database.\n */\nexport class Database implements _FirebaseService {\n  /** Represents a `Database` instance. */\n  readonly 'type' = 'database';\n\n  /** Track if the instance has been used (root or repo accessed) */\n  _instanceStarted: boolean = false;\n\n  /** Backing state for root_ */\n  private _rootInternal?: ReferenceImpl;\n\n  /** @hideconstructor */\n  constructor(\n    public _repoInternal: Repo,\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\n    readonly app: FirebaseApp\n  ) {}\n\n  get _repo(): Repo {\n    if (!this._instanceStarted) {\n      repoStart(\n        this._repoInternal,\n        this.app.options.appId,\n        this.app.options['databaseAuthVariableOverride']\n      );\n      this._instanceStarted = true;\n    }\n    return this._repoInternal;\n  }\n\n  get _root(): ReferenceImpl {\n    if (!this._rootInternal) {\n      this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n    }\n    return this._rootInternal;\n  }\n\n  _delete(): Promise<void> {\n    if (this._rootInternal !== null) {\n      repoManagerDeleteRepo(this._repo, this.app.name);\n      this._repoInternal = null;\n      this._rootInternal = null;\n    }\n    return Promise.resolve();\n  }\n\n  _checkNotDeleted(apiName: string) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n}\n\nfunction checkTransportInit() {\n  if (TransportManager.IS_TRANSPORT_INITIALIZED) {\n    warn(\n      'Transport has already been initialized. Please call this function before calling ref or setting up a listener'\n    );\n  }\n}\n\n/**\n * Force the use of websockets instead of longPolling.\n */\nexport function forceWebSockets() {\n  checkTransportInit();\n  BrowserPollConnection.forceDisallow();\n}\n\n/**\n * Force the use of longPolling instead of websockets. This will be ignored if websocket protocol is used in databaseURL.\n */\nexport function forceLongPolling() {\n  checkTransportInit();\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n}\n\n/**\n * Returns the instance of the Realtime Database SDK that is associated\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\n * with default settings if no instance exists or if the existing instance uses\n * a custom database URL.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\n * Database instance is associated with.\n * @param url - The URL of the Realtime Database instance to connect to. If not\n * provided, the SDK connects to the default instance of the Firebase App.\n * @returns The `Database` instance of the provided app.\n */\nexport function getDatabase(\n  app: FirebaseApp = getApp(),\n  url?: string\n): Database {\n  const db = _getProvider(app, 'database').getImmediate({\n    identifier: url\n  }) as Database;\n  if (!db._instanceStarted) {\n    const emulator = getDefaultEmulatorHostnameAndPort('database');\n    if (emulator) {\n      connectDatabaseEmulator(db, ...emulator);\n    }\n  }\n  return db;\n}\n\n/**\n * Modify the provided instance to communicate with the Realtime Database\n * emulator.\n *\n * <p>Note: This method must be called before performing any other operation.\n *\n * @param db - The instance to modify.\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 8080)\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n */\nexport function connectDatabaseEmulator(\n  db: Database,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('useEmulator');\n  if (db._instanceStarted) {\n    fatal(\n      'Cannot call useEmulator() after instance has already been initialized.'\n    );\n  }\n\n  const repo = db._repoInternal;\n  let tokenProvider: EmulatorTokenProvider | undefined = undefined;\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal(\n        'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".'\n      );\n    }\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    const token =\n      typeof options.mockUserToken === 'string'\n        ? options.mockUserToken\n        : createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  }\n\n  // Modify the repo to apply emulator settings\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n\n/**\n * Disconnects from the server (all Database operations will be completed\n * offline).\n *\n * The client automatically maintains a persistent connection to the Database\n * server, which will remain active indefinitely and reconnect when\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\n * to control the client connection in cases where a persistent connection is\n * undesirable.\n *\n * While offline, the client will no longer receive data updates from the\n * Database. However, all Database operations performed locally will continue to\n * immediately fire events, allowing your application to continue behaving\n * normally. Additionally, each operation performed locally will automatically\n * be queued and retried upon reconnection to the Database server.\n *\n * To reconnect to the Database and begin receiving remote events, see\n * `goOnline()`.\n *\n * @param db - The instance to disconnect.\n */\nexport function goOffline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOffline');\n  repoInterrupt(db._repo);\n}\n\n/**\n * Reconnects to the server and synchronizes the offline Database state\n * with the server state.\n *\n * This method should be used after disabling the active connection with\n * `goOffline()`. Once reconnected, the client will transmit the proper data\n * and fire the appropriate events so that your client \"catches up\"\n * automatically.\n *\n * @param db - The instance to reconnect.\n */\nexport function goOnline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOnline');\n  repoResume(db._repo);\n}\n\n/**\n * Logs debugging information to the console.\n *\n * @param enabled - Enables logging if `true`, disables logging if `false`.\n * @param persistent - Remembers the logging state between page refreshes if\n * `true`.\n */\nexport function enableLogging(enabled: boolean, persistent?: boolean);\n\n/**\n * Logs debugging information to the console.\n *\n * @param logger - A custom logger function to control how things get logged.\n */\nexport function enableLogging(logger: (message: string) => unknown);\n\nexport function enableLogging(\n  logger: boolean | ((message: string) => unknown),\n  persistent?: boolean\n): void {\n  enableLoggingImpl(logger, persistent);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Connection } from '../realtime/Connection';\n\nimport { repoManagerForceRestClient } from './Database';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\n/**\n * @internal\n */\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n * @internal\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  repoManagerForceRestClient(forceRestClient);\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from '../package.json';\nimport { setSDKVersion } from '../src/core/version';\n\nimport { repoManagerDatabaseFromApp } from './api/Database';\n\nexport function registerDatabase(variant?: string): void {\n  setSDKVersion(SDK_VERSION);\n  _registerComponent(\n    new Component(\n      'database',\n      (container, { instanceIdentifier: url }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const authProvider = container.getProvider('auth-internal');\n        const appCheckProvider = container.getProvider('app-check-internal');\n        return repoManagerDatabaseFromApp(\n          app,\n          authProvider,\n          appCheckProvider,\n          url\n        );\n      },\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * Firebase Realtime Database\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Database } from './api/Database';\nimport { registerDatabase } from './register';\n\nexport * from './api';\n\nregisterDatabase();\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'database': Database;\n  }\n}\n","import { initializeApp } from 'firebase/app';\r\nimport { getDatabase } from \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"jkSSU2t3nKrWCSOlc136o4SZ4NuXl8ctVgDQD41e\",\r\n    authDomain: \"apx-dwf-m6-abc30.firebaseapp.com\",\r\n    databaseURL: \"https://apx-dwf-m6-abc30-default-rtdb.firebaseio.com/\",\r\n    projectId: \"apx-dwf-m6-abc30\",\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst rtdb = getDatabase(app);\r\n\r\nexport { rtdb };","import { rtdb } from \"./rtdb\";\r\nimport { ref, onValue, get } from \"firebase/database\";\r\nconst API_BASE_URL = process.env.PORT || \"http://127.0.0.1:1234\";\r\n\r\nconst state = {\r\n    data: {\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        username: \"\",\r\n        userId: \"\",\r\n        roomId: \"\",\r\n        realTimeDataBaseId: \"\",\r\n        messages: []\r\n    },\r\n    listeners: [],\r\n\r\n    init() {\r\n        if (sessionStorage.length === 0) {\r\n            console.log(\"No hay data guardada en el navegador\");\r\n        } else {\r\n            console.log(\"Hay data guardada en el navegador jeje.\");\r\n            console.log(sessionStorage);\r\n            const currentState = this.getState();\r\n            currentState.email = sessionStorage.getItem(\"email\");\r\n            currentState.password = sessionStorage.getItem(\"password\");\r\n            currentState.name = sessionStorage.getItem(\"name\");\r\n            currentState.realTimeDataBaseId = sessionStorage.getItem(\"realTimeDataBaseId\");\r\n            currentState.roomId = sessionStorage.getItem(\"roomId\");\r\n            currentState.userId = sessionStorage.getItem(\"userId\");\r\n            currentState.username = sessionStorage.getItem(\"username\");\r\n            currentState.messages = JSON.parse(sessionStorage.getItem(\"messages\"));\r\n            this.setState(currentState);\r\n        }\r\n    },\r\n\r\n    listenToRoom() {\r\n        const currentState = this.getState();\r\n        const messagesRef = ref(rtdb, '/rooms/' + currentState.realTimeDataBaseId + \"/messages\");\r\n\r\n        onValue(messagesRef, (snap) => {\r\n            const messagesFromServer = snap.val();\r\n            if (messagesFromServer) {\r\n                const messagesList = Object.values(messagesFromServer);\r\n                const currentState = this.getState();\r\n                currentState.messages = messagesList;\r\n                this.setState(currentState);\r\n                sessionStorage.setItem(\"messages\", JSON.stringify(currentState.messages));\r\n            };\r\n        });\r\n    },\r\n\r\n    getState() {\r\n        return this.data;\r\n    },\r\n\r\n    setState(newState) {\r\n        this.data = newState;\r\n\r\n        for (const cb of this.listeners) {\r\n            cb();\r\n        }\r\n    },\r\n\r\n    setEmailNameAndPassword(email: string, password: string, nombre?: string) {\r\n        const currentState = this.getState();\r\n        currentState.email = email;\r\n        currentState.password = password;\r\n        currentState.name = nombre;\r\n        this.setState(currentState);\r\n        sessionStorage.setItem(\"email\", currentState.email);\r\n        sessionStorage.setItem(\"password\", currentState.password);\r\n    },\r\n\r\n    setUserName(username: string) {\r\n        const currentState = this.getState();\r\n        currentState.username = username;\r\n        this.setState(currentState);\r\n        sessionStorage.setItem(\"username\", currentState.username);\r\n    },\r\n\r\n    setRoomId(roomId: string) {\r\n        const currentState = this.getState();\r\n        currentState.roomId = roomId;\r\n        this.setState(currentState);\r\n        sessionStorage.setItem(\"roomId\", currentState.roomId);\r\n    },\r\n\r\n    pushMessage(message: string) {\r\n        const currentState = this.getState();\r\n        if (currentState.username) {\r\n            fetch(API_BASE_URL + \"/messages/\" + currentState.realTimeDataBaseId, {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"content-type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    userName: currentState.username,\r\n                    message\r\n                }),\r\n            });\r\n        } else {\r\n            console.error(\"No hay nombre de usuario.\")\r\n        };\r\n    },\r\n\r\n    login(callback?) {\r\n        const currentState = this.getState();\r\n\r\n        if (currentState.email) {\r\n            fetch(API_BASE_URL + \"/login\", {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ email: currentState.email, password: currentState.password })\r\n            }).then(res => {\r\n                console.log(process.env.PORT);\r\n                console.log(typeof res);\r\n                console.log(res);\r\n                return res.json();\r\n            }).then(data => {\r\n                console.log(data);\r\n                currentState.userId = data.id;\r\n                currentState.name = data.name;\r\n                this.setState(currentState);\r\n                sessionStorage.setItem(\"userId\", currentState.userId);\r\n                sessionStorage.setItem(\"name\", currentState.name);\r\n                if (callback) {\r\n                    callback();\r\n                };\r\n            });\r\n        } else {\r\n            console.error(\"No hay un email registrado.\");\r\n        };\r\n    },\r\n\r\n    signup(callback?) {\r\n        const currentState = this.getState();\r\n\r\n        if (currentState.email && currentState.name && currentState.password) {\r\n            fetch(API_BASE_URL + \"/signup\", {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"content-type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    email: currentState.email,\r\n                    password: currentState.password,\r\n                    name: currentState.name\r\n                })\r\n            }).then(res => {\r\n                return res.json();\r\n            }).then(data => {\r\n                console.log(data);\r\n                currentState.userId = data.id;\r\n                sessionStorage.setItem(\"userId\", currentState.userId);\r\n                this.setState(currentState);\r\n                if (callback) {\r\n                    callback();\r\n                };\r\n            });\r\n        } else {\r\n            console.error(\"Completá bien el formulario porfa.\");\r\n        };\r\n    },\r\n\r\n    newRoom(callback?) {\r\n        const currentState = this.getState();\r\n\r\n        if (currentState.userId) {\r\n            fetch(API_BASE_URL + \"/rooms\", {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"content-type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({ userId: currentState.userId })\r\n            }).then(res => {\r\n                return res.json();\r\n            }).then(data => {\r\n                currentState.roomId = data.id;\r\n                currentState.realTimeDataBaseId = data.rtdbId;\r\n                this.setState(currentState);\r\n                sessionStorage.setItem(\"roomId\", currentState.roomId);\r\n                sessionStorage.setItem(\"realTimeDataBaseId\", currentState.realTimeDataBaseId);\r\n                if (callback) {\r\n                    callback();\r\n                };\r\n            });\r\n        } else {\r\n            console.error(\"Para crear una nueva sala, tenés que haber iniciado sesión.\");\r\n        };\r\n    },\r\n\r\n    accessToRoom(callback?) {\r\n        const currentState = this.getState();\r\n\r\n        if (currentState.userId) {\r\n            fetch(API_BASE_URL + \"/rooms/\" + currentState.roomId + \"?userId=\" + currentState.userId)\r\n                .then(res => {\r\n                    return res.json();\r\n                }).then(data => {\r\n                    currentState.realTimeDataBaseId = data.realTimeDataBaseId;\r\n                    currentState.messages = [];\r\n                    sessionStorage.removeItem(\"messages\");\r\n                    this.setState(currentState);\r\n                    sessionStorage.setItem(\"realTimeDataBaseId\", currentState.realTimeDataBaseId);\r\n                    if (callback) {\r\n                        callback();\r\n                    };\r\n                });\r\n        } else {\r\n            console.error(\"Fijate que por ahí escribiste mal la id de la room.\");\r\n        };\r\n    },\r\n\r\n    subscribe(callback: (any) => any) {\r\n        this.listeners.push(callback);\r\n    }\r\n};\r\n\r\nexport { state };","export function toArray(objectOrArray) {\n  objectOrArray = objectOrArray || [];\n  return Array.isArray(objectOrArray) ? objectOrArray : [objectOrArray];\n}\n\nexport function log(msg) {\n  return `[Vaadin.Router] ${msg}`;\n}\n\nexport function logValue(value) {\n  if (typeof value !== 'object') {\n    return String(value);\n  }\n\n  const stringType = Object.prototype.toString.call(value).match(/ (.*)\\]$/)[1];\n  if (stringType === 'Object' || stringType === 'Array') {\n    return `${stringType} ${JSON.stringify(value)}`;\n  } else {\n    return stringType;\n  }\n}\n\nconst MODULE = 'module';\nconst NOMODULE = 'nomodule';\nconst bundleKeys = [MODULE, NOMODULE];\n\nfunction ensureBundle(src) {\n  if (!src.match(/.+\\.[m]?js$/)) {\n    throw new Error(\n      log(`Unsupported type for bundle \"${src}\": .js or .mjs expected.`)\n    );\n  }\n}\n\nexport function ensureRoute(route) {\n  if (!route || !isString(route.path)) {\n    throw new Error(\n      log(`Expected route config to be an object with a \"path\" string property, or an array of such objects`)\n    );\n  }\n\n  const bundle = route.bundle;\n\n  const stringKeys = ['component', 'redirect', 'bundle'];\n  if (\n    !isFunction(route.action) &&\n    !Array.isArray(route.children) &&\n    !isFunction(route.children) &&\n    !isObject(bundle) &&\n    !stringKeys.some(key => isString(route[key]))\n  ) {\n    throw new Error(\n      log(\n        `Expected route config \"${route.path}\" to include either \"${stringKeys.join('\", \"')}\" ` +\n        `or \"action\" function but none found.`\n      )\n    );\n  }\n\n  if (bundle) {\n    if (isString(bundle)) {\n      ensureBundle(bundle);\n    } else if (!bundleKeys.some(key => key in bundle)) {\n      throw new Error(\n        log('Expected route bundle to include either \"' + NOMODULE + '\" or \"' + MODULE + '\" keys, or both')\n      );\n    } else {\n      bundleKeys.forEach(key => key in bundle && ensureBundle(bundle[key]));\n    }\n  }\n\n  if (route.redirect) {\n    ['bundle', 'component'].forEach(overriddenProp => {\n      if (overriddenProp in route) {\n        console.warn(\n          log(\n            `Route config \"${route.path}\" has both \"redirect\" and \"${overriddenProp}\" properties, ` +\n            `and \"redirect\" will always override the latter. Did you mean to only use \"${overriddenProp}\"?`\n          )\n        );\n      }\n    });\n  }\n}\n\nexport function ensureRoutes(routes) {\n  toArray(routes).forEach(route => ensureRoute(route));\n}\n\nfunction loadScript(src, key) {\n  let script = document.head.querySelector('script[src=\"' + src + '\"][async]');\n  if (!script) {\n    script = document.createElement('script');\n    script.setAttribute('src', src);\n    if (key === MODULE) {\n      script.setAttribute('type', MODULE);\n    } else if (key === NOMODULE) {\n      script.setAttribute(NOMODULE, '');\n    }\n    script.async = true;\n  }\n  return new Promise((resolve, reject) => {\n    script.onreadystatechange = script.onload = e => {\n      script.__dynamicImportLoaded = true;\n      resolve(e);\n    };\n    script.onerror = e => {\n      if (script.parentNode) {\n        script.parentNode.removeChild(script);\n      }\n      reject(e);\n    };\n    if (script.parentNode === null) {\n      document.head.appendChild(script);\n    } else if (script.__dynamicImportLoaded) {\n      resolve();\n    }\n  });\n}\n\nexport function loadBundle(bundle) {\n  if (isString(bundle)) {\n    return loadScript(bundle);\n  } else {\n    return Promise.race(\n      bundleKeys\n        .filter(key => key in bundle)\n        .map(key => loadScript(bundle[key], key))\n    );\n  }\n}\n\nexport function fireRouterEvent(type, detail) {\n  return !window.dispatchEvent(new CustomEvent(\n    `vaadin-router-${type}`,\n    {cancelable: type === 'go', detail}\n  ));\n}\n\nexport function isObject(o) {\n  // guard against null passing the typeof check\n  return typeof o === 'object' && !!o;\n}\n\nexport function isFunction(f) {\n  return typeof f === 'function';\n}\n\nexport function isString(s) {\n  return typeof s === 'string';\n}\n\nexport function getNotFoundError(context) {\n  const error = new Error(log(`Page not found (${context.pathname})`));\n  error.context = context;\n  error.code = 404;\n  return error;\n}\n\nexport const notFoundResult = new (class NotFoundResult {})();\n","import {fireRouterEvent} from '../utils.js';\n\n/* istanbul ignore next: coverage is calculated in Chrome, this code is for IE */\nfunction getAnchorOrigin(anchor) {\n  // IE11: on HTTP and HTTPS the default port is not included into\n  // window.location.origin, so won't include it here either.\n  const port = anchor.port;\n  const protocol = anchor.protocol;\n  const defaultHttp = protocol === 'http:' && port === '80';\n  const defaultHttps = protocol === 'https:' && port === '443';\n  const host = (defaultHttp || defaultHttps)\n    ? anchor.hostname // does not include the port number (e.g. www.example.org)\n    : anchor.host; // does include the port number (e.g. www.example.org:80)\n  return `${protocol}//${host}`;\n}\n\n// The list of checks is not complete:\n//  - SVG support is missing\n//  - the 'rel' attribute is not considered\nfunction vaadinRouterGlobalClickHandler(event) {\n  // ignore the click if the default action is prevented\n  if (event.defaultPrevented) {\n    return;\n  }\n\n  // ignore the click if not with the primary mouse button\n  if (event.button !== 0) {\n    return;\n  }\n\n  // ignore the click if a modifier key is pressed\n  if (event.shiftKey || event.ctrlKey || event.altKey || event.metaKey) {\n    return;\n  }\n\n  // find the <a> element that the click is at (or within)\n  let anchor = event.target;\n  const path = event.composedPath\n    ? event.composedPath()\n    : (event.path || []);\n\n  // FIXME(web-padawan): `Symbol.iterator` used by webcomponentsjs is broken for arrays\n  // example to check: `for...of` loop here throws the \"Not yet implemented\" error\n  for (let i = 0; i < path.length; i++) {\n    const target = path[i];\n    if (target.nodeName && target.nodeName.toLowerCase() === 'a') {\n      anchor = target;\n      break;\n    }\n  }\n\n  while (anchor && anchor.nodeName.toLowerCase() !== 'a') {\n    anchor = anchor.parentNode;\n  }\n\n  // ignore the click if not at an <a> element\n  if (!anchor || anchor.nodeName.toLowerCase() !== 'a') {\n    return;\n  }\n\n  // ignore the click if the <a> element has a non-default target\n  if (anchor.target && anchor.target.toLowerCase() !== '_self') {\n    return;\n  }\n\n  // ignore the click if the <a> element has the 'download' attribute\n  if (anchor.hasAttribute('download')) {\n    return;\n  }\n\n  // ignore the click if the <a> element has the 'router-ignore' attribute\n  if (anchor.hasAttribute('router-ignore')) {\n    return;\n  }\n\n  // ignore the click if the target URL is a fragment on the current page\n  if (anchor.pathname === window.location.pathname && anchor.hash !== '') {\n    return;\n  }\n\n  // ignore the click if the target is external to the app\n  // In IE11 HTMLAnchorElement does not have the `origin` property\n  const origin = anchor.origin || getAnchorOrigin(anchor);\n  if (origin !== window.location.origin) {\n    return;\n  }\n\n  // if none of the above, convert the click into a navigation event\n  const {pathname, search, hash} = anchor;\n  if (fireRouterEvent('go', {pathname, search, hash})) {\n    event.preventDefault();\n    // for a click event, the scroll is reset to the top position.\n    if (event && event.type === 'click') {\n      window.scrollTo(0, 0);\n    }\n  }\n}\n\n/**\n * A navigation trigger for Vaadin Router that translated clicks on `<a>` links\n * into Vaadin Router navigation events.\n *\n * Only regular clicks on in-app links are translated (primary mouse button, no\n * modifier keys, the target href is within the app's URL space).\n *\n * @memberOf Router.NavigationTrigger\n * @type {NavigationTrigger}\n */\nconst CLICK = {\n  activate() {\n    window.document.addEventListener('click', vaadinRouterGlobalClickHandler);\n  },\n\n  inactivate() {\n    window.document.removeEventListener('click', vaadinRouterGlobalClickHandler);\n  }\n};\n\nexport default CLICK;\n","import {fireRouterEvent, isFunction} from '../utils.js';\n\n// PopStateEvent constructor shim\nconst isIE = /Trident/.test(navigator.userAgent);\n\n/* istanbul ignore next: coverage is calculated in Chrome, this code is for IE */\nif (isIE && !isFunction(window.PopStateEvent)) {\n  window.PopStateEvent = function(inType, params) {\n    params = params || {};\n    var e = document.createEvent('Event');\n    e.initEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable));\n    e.state = params.state || null;\n    return e;\n  };\n  window.PopStateEvent.prototype = window.Event.prototype;\n}\n\nfunction vaadinRouterGlobalPopstateHandler(event) {\n  if (event.state === 'vaadin-router-ignore') {\n    return;\n  }\n  const {pathname, search, hash} = window.location;\n  fireRouterEvent('go', {pathname, search, hash});\n}\n\n/**\n * A navigation trigger for Vaadin Router that translates popstate events into\n * Vaadin Router navigation events.\n *\n * @memberOf Router.NavigationTrigger\n * @type {NavigationTrigger}\n */\nconst POPSTATE = {\n  activate() {\n    window.addEventListener('popstate', vaadinRouterGlobalPopstateHandler);\n  },\n\n  inactivate() {\n    window.removeEventListener('popstate', vaadinRouterGlobalPopstateHandler);\n  }\n};\n\nexport default POPSTATE;\n","/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * Default configs.\n */\nvar DEFAULT_DELIMITER = '/'\nvar DEFAULT_DELIMITERS = './'\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \":test(\\\\d+)?\" => [\"test\", \"\\d+\", undefined, \"?\"]\n  // \"(\\\\d+)\"  => [undefined, undefined, \"\\d+\", undefined]\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER\n  var delimiters = (options && options.delimiters) || DEFAULT_DELIMITERS\n  var pathEscaped = false\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      pathEscaped = true\n      continue\n    }\n\n    var prev = ''\n    var next = str[index]\n    var name = res[2]\n    var capture = res[3]\n    var group = res[4]\n    var modifier = res[5]\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1\n\n      if (delimiters.indexOf(path[k]) > -1) {\n        prev = path[k]\n        path = path.slice(0, k)\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n      pathEscaped = false\n    }\n\n    var partial = prev !== '' && next !== undefined && next !== prev\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = prev || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      pattern: pattern ? escapeGroup(pattern) : '[^' + escapeString(delimiter) + ']+?'\n    })\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index))\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')\n    }\n  }\n\n  return function (data, options) {\n    var path = ''\n    var encode = (options && options.encode) || encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n        continue\n      }\n\n      var value = data ? data[token.name] : undefined\n      var segment\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j], token)\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value), token)\n\n        if (!matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\n        }\n\n        path += token.prefix + segment\n        continue\n      }\n\n      if (token.optional) {\n        // Prepend partial segment prefixes.\n        if (token.partial) path += token.prefix\n\n        continue\n      }\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        pattern: null\n      })\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  options = options || {}\n\n  var strict = options.strict\n  var start = options.start !== false\n  var end = options.end !== false\n  var delimiter = escapeString(options.delimiter || DEFAULT_DELIMITER)\n  var delimiters = options.delimiters || DEFAULT_DELIMITERS\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|')\n  var route = start ? '^' : ''\n  var isEndDelimited = tokens.length === 0\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n      isEndDelimited = i === tokens.length - 1 && delimiters.indexOf(token[token.length - 1]) > -1\n    } else {\n      var capture = token.repeat\n        ? '(?:' + token.pattern + ')(?:' + escapeString(token.delimiter) + '(?:' + token.pattern + '))*'\n        : token.pattern\n\n      if (keys) keys.push(token)\n\n      if (token.optional) {\n        if (token.partial) {\n          route += escapeString(token.prefix) + '(' + capture + ')?'\n        } else {\n          route += '(?:' + escapeString(token.prefix) + '(' + capture + '))?'\n        }\n      } else {\n        route += escapeString(token.prefix) + '(' + capture + ')'\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + delimiter + ')?'\n\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')'\n  } else {\n    if (!strict) route += '(?:' + delimiter + '(?=' + endsWith + '))?'\n    if (!isEndDelimited) route += '(?=' + delimiter + '|' + endsWith + ')'\n  }\n\n  return new RegExp(route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys)\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\n}\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport pathToRegexp from './path-to-regexp.js';\n\nconst {hasOwnProperty} = Object.prototype;\nconst cache = new Map();\n// see https://github.com/pillarjs/path-to-regexp/issues/148\ncache.set('|false', {\n  keys: [],\n  pattern: /(?:)/\n});\n\nfunction decodeParam(val) {\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    return val;\n  }\n}\n\nfunction matchPath(routepath, path, exact, parentKeys, parentParams) {\n  exact = !!exact;\n  const cacheKey = `${routepath}|${exact}`;\n  let regexp = cache.get(cacheKey);\n\n  if (!regexp) {\n    const keys = [];\n    regexp = {\n      keys,\n      pattern: pathToRegexp(routepath, keys, {\n        end: exact,\n        strict: routepath === ''\n      }),\n    };\n    cache.set(cacheKey, regexp);\n  }\n\n  const m = regexp.pattern.exec(path);\n  if (!m) {\n    return null;\n  }\n\n  const params = Object.assign({}, parentParams);\n\n  for (let i = 1; i < m.length; i++) {\n    const key = regexp.keys[i - 1];\n    const prop = key.name;\n    const value = m[i];\n    if (value !== undefined || !hasOwnProperty.call(params, prop)) {\n      if (key.repeat) {\n        params[prop] = value ? value.split(key.delimiter).map(decodeParam) : [];\n      } else {\n        params[prop] = value ? decodeParam(value) : value;\n      }\n    }\n  }\n\n  return {\n    path: m[0],\n    keys: (parentKeys || []).concat(regexp.keys),\n    params,\n  };\n}\n\nexport default matchPath;\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport matchPath from './matchPath.js';\n\n/**\n * Traverses the routes tree and matches its nodes to the given pathname from\n * the root down to the leaves. Each match consumes a part of the pathname and\n * the matching process continues for as long as there is a matching child\n * route for the remaining part of the pathname.\n *\n * The returned value is a lazily evaluated iterator.\n *\n * The leading \"/\" in a route path matters only for the root of the routes\n * tree (or if all parent routes are \"\"). In all other cases a leading \"/\" in\n * a child route path has no significance.\n *\n * The trailing \"/\" in a _route path_ matters only for the leaves of the\n * routes tree. A leaf route with a trailing \"/\" matches only a pathname that\n * also has a trailing \"/\".\n *\n * The trailing \"/\" in a route path does not affect matching of child routes\n * in any way.\n *\n * The trailing \"/\" in a _pathname_ generally does not matter (except for\n * the case of leaf nodes described above).\n *\n * The \"\" and \"/\" routes have special treatment:\n *  1. as a single route\n *     the \"\" and \"/\" routes match only the \"\" and \"/\" pathnames respectively\n *  2. as a parent in the routes tree\n *     the \"\" route matches any pathname without consuming any part of it\n *     the \"/\" route matches any absolute pathname consuming its leading \"/\"\n *  3. as a leaf in the routes tree\n *     the \"\" and \"/\" routes match only if the entire pathname is consumed by\n *         the parent routes chain. In this case \"\" and \"/\" are equivalent.\n *  4. several directly nested \"\" or \"/\" routes\n *     - directly nested \"\" or \"/\" routes are 'squashed' (i.e. nesting two\n *       \"/\" routes does not require a double \"/\" in the pathname to match)\n *     - if there are only \"\" in the parent routes chain, no part of the\n *       pathname is consumed, and the leading \"/\" in the child routes' paths\n *       remains significant\n *\n * Side effect:\n *   - the routes tree { path: '' } matches only the '' pathname\n *   - the routes tree { path: '', children: [ { path: '' } ] } matches any\n *     pathname (for the tree root)\n *\n * Prefix matching can be enabled also by `children: true`.\n */\nfunction matchRoute(route, pathname, ignoreLeadingSlash, parentKeys, parentParams) {\n  let match;\n  let childMatches;\n  let childIndex = 0;\n  let routepath = route.path || '';\n  if (routepath.charAt(0) === '/') {\n    if (ignoreLeadingSlash) {\n      routepath = routepath.substr(1);\n    }\n    ignoreLeadingSlash = true;\n  }\n\n  return {\n    next(routeToSkip) {\n      if (route === routeToSkip) {\n        return {done: true};\n      }\n\n      const children = route.__children = route.__children || route.children;\n\n      if (!match) {\n        match = matchPath(routepath, pathname, !children, parentKeys, parentParams);\n\n        if (match) {\n          return {\n            done: false,\n            value: {\n              route,\n              keys: match.keys,\n              params: match.params,\n              path: match.path\n            },\n          };\n        }\n      }\n\n      if (match && children) {\n        while (childIndex < children.length) {\n          if (!childMatches) {\n            const childRoute = children[childIndex];\n            childRoute.parent = route;\n\n            let matchedLength = match.path.length;\n            if (matchedLength > 0 && pathname.charAt(matchedLength) === '/') {\n              matchedLength += 1;\n            }\n\n            childMatches = matchRoute(\n              childRoute,\n              pathname.substr(matchedLength),\n              ignoreLeadingSlash,\n              match.keys,\n              match.params\n            );\n          }\n\n          const childMatch = childMatches.next(routeToSkip);\n          if (!childMatch.done) {\n            return {\n              done: false,\n              value: childMatch.value,\n            };\n          }\n\n          childMatches = null;\n          childIndex++;\n        }\n      }\n\n      return {done: true};\n    },\n  };\n}\n\nexport default matchRoute;\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport {isFunction} from '../utils.js';\n\nfunction resolveRoute(context) {\n  if (isFunction(context.route.action)) {\n    return context.route.action(context);\n  }\n  return undefined;\n}\n\nexport default resolveRoute;\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport pathToRegexp from './path-to-regexp.js';\nimport matchRoute from './matchRoute.js';\nimport resolveRoute from './resolveRoute.js';\nimport {toArray, ensureRoutes, isString, getNotFoundError, notFoundResult} from '../utils.js';\n\nfunction isChildRoute(parentRoute, childRoute) {\n  let route = childRoute;\n  while (route) {\n    route = route.parent;\n    if (route === parentRoute) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction generateErrorMessage(currentContext) {\n  let errorMessage = `Path '${currentContext.pathname}' is not properly resolved due to an error.`;\n  const routePath = (currentContext.route || {}).path;\n  if (routePath) {\n    errorMessage += ` Resolution had failed on route: '${routePath}'`;\n  }\n  return errorMessage;\n}\n\nfunction updateChainForRoute(context, match) {\n  const {route, path} = match;\n\n  if (route && !route.__synthetic) {\n    const item = {path, route};\n    if (!context.chain) {\n      context.chain = [];\n    } else {\n      // Discard old items\n      if (route.parent) {\n        let i = context.chain.length;\n        while (i-- && context.chain[i].route && context.chain[i].route !== route.parent) {\n          context.chain.pop();\n        }\n      }\n    }\n    context.chain.push(item);\n  }\n}\n\n/**\n */\nclass Resolver {\n  constructor(routes, options = {}) {\n    if (Object(routes) !== routes) {\n      throw new TypeError('Invalid routes');\n    }\n\n    this.baseUrl = options.baseUrl || '';\n    this.errorHandler = options.errorHandler;\n    this.resolveRoute = options.resolveRoute || resolveRoute;\n    this.context = Object.assign({resolver: this}, options.context);\n    this.root = Array.isArray(routes) ? {path: '', __children: routes, parent: null, __synthetic: true} : routes;\n    this.root.parent = null;\n  }\n\n  /**\n   * Returns the current list of routes (as a shallow copy). Adding / removing\n   * routes to / from the returned array does not affect the routing config,\n   * but modifying the route objects does.\n   *\n   * @return {!Array<!Router.Route>}\n   */\n  getRoutes() {\n    return [...this.root.__children];\n  }\n\n  /**\n   * Sets the routing config (replacing the existing one).\n   *\n   * @param {!Array<!Router.Route>|!Router.Route} routes a single route or an array of those\n   *    (the array is shallow copied)\n   */\n  setRoutes(routes) {\n    ensureRoutes(routes);\n    const newRoutes = [...toArray(routes)];\n    this.root.__children = newRoutes;\n  }\n\n  /**\n   * Appends one or several routes to the routing config and returns the\n   * effective routing config after the operation.\n   *\n   * @param {!Array<!Router.Route>|!Router.Route} routes a single route or an array of those\n   *    (the array is shallow copied)\n   * @return {!Array<!Router.Route>}\n   * @protected\n   */\n  addRoutes(routes) {\n    ensureRoutes(routes);\n    this.root.__children.push(...toArray(routes));\n    return this.getRoutes();\n  }\n\n  /**\n   * Removes all existing routes from the routing config.\n   */\n  removeRoutes() {\n    this.setRoutes([]);\n  }\n\n  /**\n   * Asynchronously resolves the given pathname, i.e. finds all routes matching\n   * the pathname and tries resolving them one after another in the order they\n   * are listed in the routes config until the first non-null result.\n   *\n   * Returns a promise that is fulfilled with the return value of an object that consists of the first\n   * route handler result that returns something other than `null` or `undefined` and context used to get this result.\n   *\n   * If no route handlers return a non-null result, or if no route matches the\n   * given pathname the returned promise is rejected with a 'page not found'\n   * `Error`.\n   *\n   * @param {!string|!{pathname: !string}} pathnameOrContext the pathname to\n   *    resolve or a context object with a `pathname` property and other\n   *    properties to pass to the route resolver functions.\n   * @return {!Promise<any>}\n   */\n  resolve(pathnameOrContext) {\n    const context = Object.assign(\n      {},\n      this.context,\n      isString(pathnameOrContext) ? {pathname: pathnameOrContext} : pathnameOrContext\n    );\n    const match = matchRoute(\n      this.root,\n      this.__normalizePathname(context.pathname),\n      this.baseUrl\n    );\n    const resolve = this.resolveRoute;\n    let matches = null;\n    let nextMatches = null;\n    let currentContext = context;\n\n    function next(resume, parent = matches.value.route, prevResult) {\n      const routeToSkip = prevResult === null && matches.value.route;\n      matches = nextMatches || match.next(routeToSkip);\n      nextMatches = null;\n\n      if (!resume) {\n        if (matches.done || !isChildRoute(parent, matches.value.route)) {\n          nextMatches = matches;\n          return Promise.resolve(notFoundResult);\n        }\n      }\n\n      if (matches.done) {\n        return Promise.reject(getNotFoundError(context));\n      }\n\n      currentContext = Object.assign(\n        currentContext\n          ? {chain: (currentContext.chain ? currentContext.chain.slice(0) : [])}\n          : {},\n        context,\n        matches.value\n      );\n      updateChainForRoute(currentContext, matches.value);\n\n      return Promise.resolve(resolve(currentContext)).then(resolution => {\n        if (resolution !== null && resolution !== undefined && resolution !== notFoundResult) {\n          currentContext.result = resolution.result || resolution;\n          return currentContext;\n        }\n        return next(resume, parent, resolution);\n      });\n    }\n\n    context.next = next;\n\n    return Promise.resolve()\n      .then(() => next(true, this.root))\n      .catch((error) => {\n        const errorMessage = generateErrorMessage(currentContext);\n        if (!error) {\n          error = new Error(errorMessage);\n        } else {\n          console.warn(errorMessage);\n        }\n        error.context = error.context || currentContext;\n        // DOMException has its own code which is read-only\n        if (!(error instanceof DOMException)) {\n          error.code = error.code || 500;\n        }\n        if (this.errorHandler) {\n          currentContext.result = this.errorHandler(error);\n          return currentContext;\n        }\n        throw error;\n      });\n  }\n\n  /**\n   * URL constructor polyfill hook. Creates and returns an URL instance.\n   */\n  static __createUrl(url, base) {\n    return new URL(url, base);\n  }\n\n  /**\n   * If the baseUrl property is set, transforms the baseUrl and returns the full\n   * actual `base` string for using in the `new URL(path, base);` and for\n   * prepernding the paths with. The returned base ends with a trailing slash.\n   *\n   * Otherwise, returns empty string.\n   */\n  get __effectiveBaseUrl() {\n    return this.baseUrl\n      ? this.constructor.__createUrl(\n        this.baseUrl,\n        document.baseURI || document.URL\n      ).href.replace(/[^\\/]*$/, '')\n      : '';\n  }\n\n  /**\n   * If the baseUrl is set, matches the pathname with the router’s baseUrl,\n   * and returns the local pathname with the baseUrl stripped out.\n   *\n   * If the pathname does not match the baseUrl, returns undefined.\n   *\n   * If the `baseUrl` is not set, returns the unmodified pathname argument.\n   */\n  __normalizePathname(pathname) {\n    if (!this.baseUrl) {\n      // No base URL, no need to transform the pathname.\n      return pathname;\n    }\n\n    const base = this.__effectiveBaseUrl;\n    const normalizedUrl = this.constructor.__createUrl(pathname, base).href;\n    if (normalizedUrl.slice(0, base.length) === base) {\n      return normalizedUrl.slice(base.length);\n    }\n  }\n}\n\nResolver.pathToRegexp = pathToRegexp;\n\nexport default Resolver;\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport Resolver from './resolver.js';\nimport {isString} from '../utils.js';\n\nconst {pathToRegexp} = Resolver;\nconst cache = new Map();\n\nfunction cacheRoutes(routesByName, route, routes) {\n  const name = route.name || route.component;\n  if (name) {\n    if (routesByName.has(name)) {\n      routesByName.get(name).push(route);\n    } else {\n      routesByName.set(name, [route]);\n    }\n  }\n\n  if (Array.isArray(routes)) {\n    for (let i = 0; i < routes.length; i++) {\n      const childRoute = routes[i];\n      childRoute.parent = route;\n      cacheRoutes(routesByName, childRoute, childRoute.__children || childRoute.children);\n    }\n  }\n}\n\nfunction getRouteByName(routesByName, routeName) {\n  const routes = routesByName.get(routeName);\n  if (routes && routes.length > 1) {\n    throw new Error(\n      `Duplicate route with name \"${routeName}\".`\n      + ` Try seting unique 'name' route properties.`\n    );\n  }\n  return routes && routes[0];\n}\n\nfunction getRoutePath(route) {\n  let path = route.path;\n  path = Array.isArray(path) ? path[0] : path;\n  return path !== undefined ? path : '';\n}\n\nfunction generateUrls(router, options = {}) {\n  if (!(router instanceof Resolver)) {\n    throw new TypeError('An instance of Resolver is expected');\n  }\n\n  const routesByName = new Map();\n\n  return (routeName, params) => {\n    let route = getRouteByName(routesByName, routeName);\n    if (!route) {\n      routesByName.clear(); // clear cache\n      cacheRoutes(routesByName, router.root, router.root.__children);\n\n      route = getRouteByName(routesByName, routeName);\n      if (!route) {\n        throw new Error(`Route \"${routeName}\" not found`);\n      }\n    }\n\n    let regexp = cache.get(route.fullPath);\n    if (!regexp) {\n      let fullPath = getRoutePath(route);\n      let rt = route.parent;\n      while (rt) {\n        const path = getRoutePath(rt);\n        if (path) {\n          fullPath = path.replace(/\\/$/, '') + '/' + fullPath.replace(/^\\//, '');\n        }\n        rt = rt.parent;\n      }\n      const tokens = pathToRegexp.parse(fullPath);\n      const toPath = pathToRegexp.tokensToFunction(tokens);\n      const keys = Object.create(null);\n      for (let i = 0; i < tokens.length; i++) {\n        if (!isString(tokens[i])) {\n          keys[tokens[i].name] = true;\n        }\n      }\n      regexp = {toPath, keys};\n      cache.set(fullPath, regexp);\n      route.fullPath = fullPath;\n    }\n\n    let url = regexp.toPath(params, options) || '/';\n\n    if (options.stringifyQueryParams && params) {\n      const queryParams = {};\n      const keys = Object.keys(params);\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (!regexp.keys[key]) {\n          queryParams[key] = params[key];\n        }\n      }\n      const query = options.stringifyQueryParams(queryParams);\n      if (query) {\n        url += query.charAt(0) === '?' ? query : `?${query}`;\n      }\n    }\n\n    return url;\n  };\n}\n\nexport default generateUrls;\n","/**\n * @typedef NavigationTrigger\n * @type {object}\n * @property {function()} activate\n * @property {function()} inactivate\n */\n\n/** @type {Array<NavigationTrigger>} */\nlet triggers = [];\n\nexport default function setNavigationTriggers(newTriggers) {\n  triggers.forEach(trigger => trigger.inactivate());\n\n  newTriggers.forEach(trigger => trigger.activate());\n\n  triggers = newTriggers;\n}\n","const willAnimate = elem => {\n  const name = getComputedStyle(elem).getPropertyValue('animation-name');\n  return name && name !== 'none';\n};\n\nconst waitForAnimation = (elem, cb) => {\n  const listener = () => {\n    elem.removeEventListener('animationend', listener);\n    cb();\n  };\n  elem.addEventListener('animationend', listener);\n};\n\nfunction animate(elem, className) {\n  elem.classList.add(className);\n\n  return new Promise(resolve => {\n    if (willAnimate(elem)) {\n      const rect = elem.getBoundingClientRect();\n      const size = `height: ${rect.bottom - rect.top}px; width: ${rect.right - rect.left}px`;\n      elem.setAttribute('style', `position: absolute; ${size}`);\n      waitForAnimation(elem, () => {\n        elem.classList.remove(className);\n        elem.removeAttribute('style');\n        resolve();\n      });\n    } else {\n      elem.classList.remove(className);\n      resolve();\n    }\n  });\n}\n\nexport default animate;\n","import Resolver from './resolver/resolver.js';\nimport generateUrls from './resolver/generateUrls.js';\nimport setNavigationTriggers from './triggers/setNavigationTriggers.js';\nimport animate from './transitions/animate.js';\nimport {\n  ensureRoute,\n  fireRouterEvent,\n  loadBundle,\n  log,\n  logValue,\n  toArray,\n  isFunction,\n  isString,\n  isObject,\n  getNotFoundError,\n  notFoundResult\n} from './utils.js';\n\nconst MAX_REDIRECT_COUNT = 256;\n\nfunction isResultNotEmpty(result) {\n  return result !== null && result !== undefined;\n}\n\nfunction copyContextWithoutNext(context) {\n  const copy = Object.assign({}, context);\n  delete copy.next;\n  return copy;\n}\n\nfunction createLocation({pathname = '', search = '', hash = '', chain = [], params = {}, redirectFrom, resolver}, route) {\n  const routes = chain.map(item => item.route);\n  return {\n    baseUrl: resolver && resolver.baseUrl || '',\n    pathname,\n    search,\n    hash,\n    routes,\n    route: route || routes.length && routes[routes.length - 1] || null,\n    params,\n    redirectFrom,\n    getUrl: (userParams = {}) => getPathnameForRouter(\n      Router.pathToRegexp.compile(\n        getMatchedPath(routes)\n      )(Object.assign({}, params, userParams)),\n      resolver\n    )\n  };\n}\n\nfunction createRedirect(context, pathname) {\n  const params = Object.assign({}, context.params);\n  return {\n    redirect: {\n      pathname,\n      from: context.pathname,\n      params\n    }\n  };\n}\n\nfunction renderElement(context, element) {\n  element.location = createLocation(context);\n  const index = context.chain.map(item => item.route).indexOf(context.route);\n  context.chain[index].element = element;\n  return element;\n}\n\nfunction runCallbackIfPossible(callback, args, thisArg) {\n  if (isFunction(callback)) {\n    return callback.apply(thisArg, args);\n  }\n}\n\nfunction amend(amendmentFunction, args, element) {\n  return amendmentResult => {\n    if (amendmentResult && (amendmentResult.cancel || amendmentResult.redirect)) {\n      return amendmentResult;\n    }\n\n    if (element) {\n      return runCallbackIfPossible(element[amendmentFunction], args, element);\n    }\n  };\n}\n\nfunction processNewChildren(newChildren, route) {\n  if (!Array.isArray(newChildren) && !isObject(newChildren)) {\n    throw new Error(\n      log(\n        `Incorrect \"children\" value for the route ${route.path}: expected array or object, but got ${newChildren}`\n      )\n    );\n  }\n\n  route.__children = [];\n  const childRoutes = toArray(newChildren);\n  for (let i = 0; i < childRoutes.length; i++) {\n    ensureRoute(childRoutes[i]);\n    route.__children.push(childRoutes[i]);\n  }\n}\n\nfunction removeDomNodes(nodes) {\n  if (nodes && nodes.length) {\n    const parent = nodes[0].parentNode;\n    for (let i = 0; i < nodes.length; i++) {\n      parent.removeChild(nodes[i]);\n    }\n  }\n}\n\nfunction getPathnameForRouter(pathname, router) {\n  const base = router.__effectiveBaseUrl;\n  return base\n    ? router.constructor.__createUrl(pathname.replace(/^\\//, ''), base).pathname\n    : pathname;\n}\n\nfunction getMatchedPath(chain) {\n  return chain.map(item => item.path).reduce((a, b) => {\n    if (b.length) {\n      return a.replace(/\\/$/, '') + '/' + b.replace(/^\\//, '');\n    }\n    return a;\n  }, '');\n}\n\n/**\n * A simple client-side router for single-page applications. It uses\n * express-style middleware and has a first-class support for Web Components and\n * lazy-loading. Works great in Polymer and non-Polymer apps.\n *\n * Use `new Router(outlet, options)` to create a new Router instance.\n *\n * * The `outlet` parameter is a reference to the DOM node to render\n *   the content into.\n *\n * * The `options` parameter is an optional object with options. The following\n *   keys are supported:\n *   * `baseUrl` — the initial value for [\n *     the `baseUrl` property\n *   ](#/classes/Router#property-baseUrl)\n *\n * The Router instance is automatically subscribed to navigation events\n * on `window`.\n *\n * See [Live Examples](#/classes/Router/demos/demo/index.html) for the detailed usage demo and code snippets.\n *\n * See also detailed API docs for the following methods, for the advanced usage:\n *\n * * [setOutlet](#/classes/Router#method-setOutlet) – should be used to configure the outlet.\n * * [setTriggers](#/classes/Router#method-setTriggers) – should be used to configure the navigation events.\n * * [setRoutes](#/classes/Router#method-setRoutes) – should be used to configure the routes.\n *\n * Only `setRoutes` has to be called manually, others are automatically invoked when creating a new instance.\n *\n * @extends Resolver\n * @demo demo/index.html\n * @summary JavaScript class that renders different DOM content depending on\n *    a given path. It can re-render when triggered or automatically on\n *    'popstate' and / or 'click' events.\n */\nexport class Router extends Resolver {\n\n  /**\n   * Creates a new Router instance with a given outlet, and\n   * automatically subscribes it to navigation events on the `window`.\n   * Using a constructor argument or a setter for outlet is equivalent:\n   *\n   * ```\n   * const router = new Router();\n   * router.setOutlet(outlet);\n   * ```\n   * @param {?Node=} outlet\n   * @param {?RouterOptions=} options\n   */\n  constructor(outlet, options) {\n    const baseElement = document.head.querySelector('base');\n    const baseHref = baseElement && baseElement.getAttribute('href');\n    super([], Object.assign({\n      // Default options\n      baseUrl: baseHref && Resolver.__createUrl(baseHref, document.URL).pathname.replace(/[^\\/]*$/, '')\n    }, options));\n\n    this.resolveRoute = context => this.__resolveRoute(context);\n\n    const triggers = Router.NavigationTrigger;\n    Router.setTriggers.apply(Router, Object.keys(triggers).map(key => triggers[key]));\n\n    /**\n     * The base URL for all routes in the router instance. By default,\n     * if the base element exists in the `<head>`, vaadin-router\n     * takes the `<base href>` attribute value, resolves against current `document.URL`\n     * and gets the `pathname` from the result.\n     *\n     * @public\n     * @type {string}\n     */\n    this.baseUrl;\n\n    /**\n     * A promise that is settled after the current render cycle completes. If\n     * there is no render cycle in progress the promise is immediately settled\n     * with the last render cycle result.\n     *\n     * @public\n     * @type {!Promise<!RouterLocation>}\n     */\n    this.ready;\n    this.ready = Promise.resolve(outlet);\n\n    /**\n     * Contains read-only information about the current router location:\n     * pathname, active routes, parameters. See the\n     * [Location type declaration](#/classes/RouterLocation)\n     * for more details.\n     *\n     * @public\n     * @type {!RouterLocation}\n     */\n    this.location;\n    this.location = createLocation({resolver: this});\n\n    this.__lastStartedRenderId = 0;\n    this.__navigationEventHandler = this.__onNavigationEvent.bind(this);\n    this.setOutlet(outlet);\n    this.subscribe();\n    // Using WeakMap instead of WeakSet because WeakSet is not supported by IE11\n    this.__createdByRouter = new WeakMap();\n    this.__addedByRouter = new WeakMap();\n  }\n\n  __resolveRoute(context) {\n    const route = context.route;\n\n    let callbacks = Promise.resolve();\n\n    if (isFunction(route.children)) {\n      callbacks = callbacks\n        .then(() => route.children(copyContextWithoutNext(context)))\n        .then(children => {\n          // The route.children() callback might have re-written the\n          // route.children property instead of returning a value\n          if (!isResultNotEmpty(children) && !isFunction(route.children)) {\n            children = route.children;\n          }\n          processNewChildren(children, route);\n        });\n    }\n\n    const commands = {\n      redirect: path => createRedirect(context, path),\n      component: (component) => {\n        const element = document.createElement(component);\n        this.__createdByRouter.set(element, true);\n        return element;\n      }\n    };\n\n    return callbacks\n      .then(() => {\n        if (this.__isLatestRender(context)) {\n          return runCallbackIfPossible(route.action, [context, commands], route);\n        }\n      })\n      .then(result => {\n        if (isResultNotEmpty(result)) {\n          // Actions like `() => import('my-view.js')` are not expected to\n          // end the resolution, despite the result is not empty. Checking\n          // the result with a whitelist of values that end the resolution.\n          if (result instanceof HTMLElement ||\n              result.redirect ||\n              result === notFoundResult) {\n            return result;\n          }\n        }\n\n        if (isString(route.redirect)) {\n          return commands.redirect(route.redirect);\n        }\n\n        if (route.bundle) {\n          return loadBundle(route.bundle)\n            .then(() => {}, () => {\n              throw new Error(log(`Bundle not found: ${route.bundle}. Check if the file name is correct`));\n            });\n        }\n      })\n      .then(result => {\n        if (isResultNotEmpty(result)) {\n          return result;\n        }\n        if (isString(route.component)) {\n          return commands.component(route.component);\n        }\n      });\n  }\n\n  /**\n   * Sets the router outlet (the DOM node where the content for the current\n   * route is inserted). Any content pre-existing in the router outlet is\n   * removed at the end of each render pass.\n   *\n   * NOTE: this method is automatically invoked first time when creating a new Router instance.\n   *\n   * @param {?Node} outlet the DOM node where the content for the current route\n   *     is inserted.\n   */\n  setOutlet(outlet) {\n    if (outlet) {\n      this.__ensureOutlet(outlet);\n    }\n    this.__outlet = outlet;\n  }\n\n  /**\n   * Returns the current router outlet. The initial value is `undefined`.\n   *\n   * @return {?Node} the current router outlet (or `undefined`)\n   */\n  getOutlet() {\n    return this.__outlet;\n  }\n\n  /**\n   * Sets the routing config (replacing the existing one) and triggers a\n   * navigation event so that the router outlet is refreshed according to the\n   * current `window.location` and the new routing config.\n   *\n   * Each route object may have the following properties, listed here in the processing order:\n   * * `path` – the route path (relative to the parent route if any) in the\n   * [express.js syntax](https://expressjs.com/en/guide/routing.html#route-paths\").\n   *\n   * * `children` – an array of nested routes or a function that provides this\n   * array at the render time. The function can be synchronous or asynchronous:\n   * in the latter case the render is delayed until the returned promise is\n   * resolved. The `children` function is executed every time when this route is\n   * being rendered. This allows for dynamic route structures (e.g. backend-defined),\n   * but it might have a performance impact as well. In order to avoid calling\n   * the function on subsequent renders, you can override the `children` property\n   * of the route object and save the calculated array there\n   * (via `context.route.children = [ route1, route2, ...];`).\n   * Parent routes are fully resolved before resolving the children. Children\n   * 'path' values are relative to the parent ones.\n   *\n   * * `action` – the action that is executed before the route is resolved.\n   * The value for this property should be a function, accepting `context`\n   * and `commands` parameters described below. If present, this function is\n   * always invoked first, disregarding of the other properties' presence.\n   * The action can return a result directly or within a `Promise`, which\n   * resolves to the result. If the action result is an `HTMLElement` instance,\n   * a `commands.component(name)` result, a `commands.redirect(path)` result,\n   * or a `context.next()` result, the current route resolution is finished,\n   * and other route config properties are ignored.\n   * See also **Route Actions** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * * `redirect` – other route's path to redirect to. Passes all route parameters to the redirect target.\n   * The target route should also be defined.\n   * See also **Redirects** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * * `bundle` – string containing the path to `.js` or `.mjs` bundle to load before resolving the route,\n   * or the object with \"module\" and \"nomodule\" keys referring to different bundles.\n   * Each bundle is only loaded once. If \"module\" and \"nomodule\" are set, only one bundle is loaded,\n   * depending on whether the browser supports ES modules or not.\n   * The property is ignored when either an `action` returns the result or `redirect` property is present.\n   * Any error, e.g. 404 while loading bundle will cause route resolution to throw.\n   * See also **Code Splitting** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * * `component` – the tag name of the Web Component to resolve the route to.\n   * The property is ignored when either an `action` returns the result or `redirect` property is present.\n   * If route contains the `component` property (or an action that return a component)\n   * and its child route also contains the `component` property, child route's component\n   * will be rendered as a light dom child of a parent component.\n   *\n   * * `name` – the string name of the route to use in the\n   * [`router.urlForName(name, params)`](#/classes/Router#method-urlForName)\n   * navigation helper method.\n   *\n   * For any route function (`action`, `children`) defined, the corresponding `route` object is available inside the callback\n   * through the `this` reference. If you need to access it, make sure you define the callback as a non-arrow function\n   * because arrow functions do not have their own `this` reference.\n   *\n   * `context` object that is passed to `action` function holds the following properties:\n   * * `context.pathname` – string with the pathname being resolved\n   *\n   * * `context.search` – search query string\n   *\n   * * `context.hash` – hash string\n   *\n   * * `context.params` – object with route parameters\n   *\n   * * `context.route` – object that holds the route that is currently being rendered.\n   *\n   * * `context.next()` – function for asynchronously getting the next route\n   * contents from the resolution chain (if any)\n   *\n   * `commands` object that is passed to `action` function has\n   * the following methods:\n   *\n   * * `commands.redirect(path)` – function that creates a redirect data\n   * for the path specified.\n   *\n   * * `commands.component(component)` – function that creates a new HTMLElement\n   * with current context. Note: the component created by this function is reused if visiting the same path twice in row.\n   *\n   *\n   * @param {!Array<!Route>|!Route} routes a single route or an array of those\n   * @param {?boolean} skipRender configure the router but skip rendering the\n   *     route corresponding to the current `window.location` values\n   *\n   * @return {!Promise<!Node>}\n   */\n  setRoutes(routes, skipRender = false) {\n    this.__previousContext = undefined;\n    this.__urlForName = undefined;\n    super.setRoutes(routes);\n    if (!skipRender) {\n      this.__onNavigationEvent();\n    }\n    return this.ready;\n  }\n\n  /**\n   * Asynchronously resolves the given pathname and renders the resolved route\n   * component into the router outlet. If no router outlet is set at the time of\n   * calling this method, or at the time when the route resolution is completed,\n   * a `TypeError` is thrown.\n   *\n   * Returns a promise that is fulfilled with the router outlet DOM Node after\n   * the route component is created and inserted into the router outlet, or\n   * rejected if no route matches the given path.\n   *\n   * If another render pass is started before the previous one is completed, the\n   * result of the previous render pass is ignored.\n   *\n   * @param {!string|!{pathname: !string, search: ?string, hash: ?string}} pathnameOrContext\n   *    the pathname to render or a context object with a `pathname` property,\n   *    optional `search` and `hash` properties, and other properties\n   *    to pass to the resolver.\n   * @param {boolean=} shouldUpdateHistory\n   *    update browser history with the rendered location\n   * @return {!Promise<!Node>}\n   */\n  render(pathnameOrContext, shouldUpdateHistory) {\n    const renderId = ++this.__lastStartedRenderId;\n    const context = Object.assign(\n      {\n        search: '',\n        hash: ''\n      },\n      isString(pathnameOrContext)\n        ? {pathname: pathnameOrContext}\n        : pathnameOrContext,\n      {\n        __renderId: renderId\n      }\n    );\n\n    // Find the first route that resolves to a non-empty result\n    this.ready = this.resolve(context)\n\n      // Process the result of this.resolve() and handle all special commands:\n      // (redirect / prevent / component). If the result is a 'component',\n      // then go deeper and build the entire chain of nested components matching\n      // the pathname. Also call all 'on before' callbacks along the way.\n      .then(context => this.__fullyResolveChain(context))\n\n      .then(context => {\n        if (this.__isLatestRender(context)) {\n          const previousContext = this.__previousContext;\n\n          // Check if the render was prevented and make an early return in that case\n          if (context === previousContext) {\n            // Replace the history with the previous context\n            // to make sure the URL stays the same.\n            this.__updateBrowserHistory(previousContext, true);\n            return this.location;\n          }\n\n          this.location = createLocation(context);\n\n          if (shouldUpdateHistory) {\n            // Replace only if first render redirects, so that we don’t leave\n            // the redirecting record in the history\n            this.__updateBrowserHistory(context, renderId === 1);\n          }\n\n          fireRouterEvent('location-changed', {router: this, location: this.location});\n\n          // Skip detaching/re-attaching there are no render changes\n          if (context.__skipAttach) {\n            this.__copyUnchangedElements(context, previousContext);\n            this.__previousContext = context;\n            return this.location;\n          }\n\n          this.__addAppearingContent(context, previousContext);\n          const animationDone = this.__animateIfNeeded(context);\n\n          this.__runOnAfterEnterCallbacks(context);\n          this.__runOnAfterLeaveCallbacks(context, previousContext);\n\n          return animationDone.then(() => {\n            if (this.__isLatestRender(context)) {\n              // If there is another render pass started after this one,\n              // the 'disappearing content' would be removed when the other\n              // render pass calls `this.__addAppearingContent()`\n              this.__removeDisappearingContent();\n\n              this.__previousContext = context;\n              return this.location;\n            }\n          });\n        }\n      })\n      .catch(error => {\n        if (renderId === this.__lastStartedRenderId) {\n          if (shouldUpdateHistory) {\n            this.__updateBrowserHistory(context);\n          }\n          removeDomNodes(this.__outlet && this.__outlet.children);\n          this.location = createLocation(Object.assign(context, {resolver: this}));\n          fireRouterEvent('error', Object.assign({router: this, error}, context));\n          throw error;\n        }\n      });\n    return this.ready;\n  }\n\n  // `topOfTheChainContextBeforeRedirects` is a context coming from Resolver.resolve().\n  // It would contain a 'redirect' route or the first 'component' route that\n  // matched the pathname. There might be more child 'component' routes to be\n  // resolved and added into the chain. This method would find and add them.\n  // `contextBeforeRedirects` is the context containing such a child component\n  // route. It's only necessary when this method is called recursively (otherwise\n  // it's the same as the 'top of the chain' context).\n  //\n  // Apart from building the chain of child components, this method would also\n  // handle 'redirect' routes, call 'onBefore' callbacks and handle 'prevent'\n  // and 'redirect' callback results.\n  __fullyResolveChain(topOfTheChainContextBeforeRedirects,\n    contextBeforeRedirects = topOfTheChainContextBeforeRedirects) {\n    return this.__findComponentContextAfterAllRedirects(contextBeforeRedirects)\n      // `contextAfterRedirects` is always a context with an `HTMLElement` result\n      // In other cases the promise gets rejected and .then() is not called\n      .then(contextAfterRedirects => {\n        const redirectsHappened = contextAfterRedirects !== contextBeforeRedirects;\n        const topOfTheChainContextAfterRedirects =\n          redirectsHappened ? contextAfterRedirects : topOfTheChainContextBeforeRedirects;\n\n        const matchedPath = getPathnameForRouter(\n          getMatchedPath(contextAfterRedirects.chain),\n          contextAfterRedirects.resolver\n        );\n        const isFound = (matchedPath === contextAfterRedirects.pathname);\n\n        // Recursive method to try matching more child and sibling routes\n        const findNextContextIfAny = (context, parent = context.route, prevResult) => {\n          return context.next(undefined, parent, prevResult).then(nextContext => {\n            if (nextContext === null || nextContext === notFoundResult) {\n              // Next context is not found in children, ...\n              if (isFound) {\n                // ...but original context is already fully matching - use it\n                return context;\n              } else if (parent.parent !== null) {\n                // ...and there is no full match yet - step up to check siblings\n                return findNextContextIfAny(context, parent.parent, nextContext);\n              } else {\n                return nextContext;\n              }\n            }\n\n            return nextContext;\n          });\n        };\n\n        return findNextContextIfAny(contextAfterRedirects).then(nextContext => {\n          if (nextContext === null || nextContext === notFoundResult) {\n            throw getNotFoundError(topOfTheChainContextAfterRedirects);\n          }\n\n          return nextContext\n          && nextContext !== notFoundResult\n          && nextContext !== contextAfterRedirects\n            ? this.__fullyResolveChain(topOfTheChainContextAfterRedirects, nextContext)\n            : this.__amendWithOnBeforeCallbacks(contextAfterRedirects);\n        });\n      });\n  }\n\n  __findComponentContextAfterAllRedirects(context) {\n    const result = context.result;\n    if (result instanceof HTMLElement) {\n      renderElement(context, result);\n      return Promise.resolve(context);\n    } else if (result.redirect) {\n      return this.__redirect(result.redirect, context.__redirectCount, context.__renderId)\n        .then(context => this.__findComponentContextAfterAllRedirects(context));\n    } else if (result instanceof Error) {\n      return Promise.reject(result);\n    } else {\n      return Promise.reject(\n        new Error(\n          log(\n            `Invalid route resolution result for path \"${context.pathname}\". ` +\n            `Expected redirect object or HTML element, but got: \"${logValue(result)}\". ` +\n            `Double check the action return value for the route.`\n          )\n        ));\n    }\n  }\n\n  __amendWithOnBeforeCallbacks(contextWithFullChain) {\n    return this.__runOnBeforeCallbacks(contextWithFullChain).then(amendedContext => {\n      if (amendedContext === this.__previousContext || amendedContext === contextWithFullChain) {\n        return amendedContext;\n      }\n      return this.__fullyResolveChain(amendedContext);\n    });\n  }\n\n  __runOnBeforeCallbacks(newContext) {\n    const previousContext = this.__previousContext || {};\n    const previousChain = previousContext.chain || [];\n    const newChain = newContext.chain;\n\n    let callbacks = Promise.resolve();\n    const prevent = () => ({cancel: true});\n    const redirect = (pathname) => createRedirect(newContext, pathname);\n\n    newContext.__divergedChainIndex = 0;\n    newContext.__skipAttach = false;\n    if (previousChain.length) {\n      for (let i = 0; i < Math.min(previousChain.length, newChain.length); i = ++newContext.__divergedChainIndex) {\n        if (previousChain[i].route !== newChain[i].route\n          || previousChain[i].path !== newChain[i].path && previousChain[i].element !== newChain[i].element\n          || !this.__isReusableElement(previousChain[i].element, newChain[i].element)) {\n          break;\n        }\n      }\n\n      // Skip re-attaching and notifications if element and chain do not change\n      newContext.__skipAttach =\n        // Same route chain\n        newChain.length === previousChain.length && newContext.__divergedChainIndex == newChain.length &&\n        // Same element\n        this.__isReusableElement(newContext.result, previousContext.result);\n\n      if (newContext.__skipAttach) {\n        // execute onBeforeLeave for changed segment element when skipping attach\n        for (let i = newChain.length - 1; i >= 0; i--) {\n          callbacks = this.__runOnBeforeLeaveCallbacks(callbacks, newContext, {prevent}, previousChain[i]);\n        }\n        // execute onBeforeEnter for changed segment element when skipping attach\n        for (let i = 0; i < newChain.length; i++) {\n          callbacks = this.__runOnBeforeEnterCallbacks(callbacks, newContext, {prevent, redirect}, newChain[i]);\n          previousChain[i].element.location = createLocation(newContext, previousChain[i].route);\n        }\n\n      } else {\n        // execute onBeforeLeave when NOT skipping attach\n        for (let i = previousChain.length - 1; i >= newContext.__divergedChainIndex; i--) {\n          callbacks = this.__runOnBeforeLeaveCallbacks(callbacks, newContext, {prevent}, previousChain[i]);\n        }\n      }\n    }\n    // execute onBeforeEnter when NOT skipping attach\n    if (!newContext.__skipAttach) {\n      for (let i = 0; i < newChain.length; i++) {\n        if (i < newContext.__divergedChainIndex) {\n          if (i < previousChain.length && previousChain[i].element) {\n            previousChain[i].element.location = createLocation(newContext, previousChain[i].route);\n          }\n        } else {\n          callbacks = this.__runOnBeforeEnterCallbacks(callbacks, newContext, {prevent, redirect}, newChain[i]);\n          if (newChain[i].element) {\n            newChain[i].element.location = createLocation(newContext, newChain[i].route);\n          }\n        }\n      }\n    }\n    return callbacks.then(amendmentResult => {\n      if (amendmentResult) {\n        if (amendmentResult.cancel) {\n          this.__previousContext.__renderId = newContext.__renderId;\n          return this.__previousContext;\n        }\n        if (amendmentResult.redirect) {\n          return this.__redirect(amendmentResult.redirect, newContext.__redirectCount, newContext.__renderId);\n        }\n      }\n      return newContext;\n    });\n  }\n\n  __runOnBeforeLeaveCallbacks(callbacks, newContext, commands, chainElement) {\n    const location = createLocation(newContext);\n    return callbacks.then(result => {\n      if (this.__isLatestRender(newContext)) {\n        const afterLeaveFunction = amend('onBeforeLeave', [location, commands, this], chainElement.element);\n        return afterLeaveFunction(result);\n      }\n    }).then(result => {\n      if (!(result || {}).redirect) {\n        return result;\n      }\n    });\n  }\n\n  __runOnBeforeEnterCallbacks(callbacks, newContext, commands, chainElement) {\n    const location = createLocation(newContext, chainElement.route);\n    return callbacks.then(result => {\n      if (this.__isLatestRender(newContext)) {\n        const beforeEnterFunction = amend('onBeforeEnter', [location, commands, this], chainElement.element);\n        return beforeEnterFunction(result);\n      }\n    });\n  }\n\n  __isReusableElement(element, otherElement) {\n    if (element && otherElement) {\n      return this.__createdByRouter.get(element) && this.__createdByRouter.get(otherElement)\n        ? element.localName === otherElement.localName\n        : element === otherElement;\n    }\n    return false;\n  }\n\n  __isLatestRender(context) {\n    return context.__renderId === this.__lastStartedRenderId;\n  }\n\n  __redirect(redirectData, counter, renderId) {\n    if (counter > MAX_REDIRECT_COUNT) {\n      throw new Error(log(`Too many redirects when rendering ${redirectData.from}`));\n    }\n\n    return this.resolve({\n      pathname: this.urlForPath(\n        redirectData.pathname,\n        redirectData.params\n      ),\n      redirectFrom: redirectData.from,\n      __redirectCount: (counter || 0) + 1,\n      __renderId: renderId\n    });\n  }\n\n  __ensureOutlet(outlet = this.__outlet) {\n    if (!(outlet instanceof Node)) {\n      throw new TypeError(log(`Expected router outlet to be a valid DOM Node (but got ${outlet})`));\n    }\n  }\n\n  __updateBrowserHistory({pathname, search = '', hash = ''}, replace) {\n    if (window.location.pathname !== pathname\n        || window.location.search !== search\n        || window.location.hash !== hash\n    ) {\n      const changeState = replace ? 'replaceState' : 'pushState';\n      window.history[changeState](null, document.title, pathname + search + hash);\n      window.dispatchEvent(new PopStateEvent('popstate', {state: 'vaadin-router-ignore'}));\n    }\n  }\n\n  __copyUnchangedElements(context, previousContext) {\n    // Find the deepest common parent between the last and the new component\n    // chains. Update references for the unchanged elements in the new chain\n    let deepestCommonParent = this.__outlet;\n    for (let i = 0; i < context.__divergedChainIndex; i++) {\n      const unchangedElement = previousContext && previousContext.chain[i].element;\n      if (unchangedElement) {\n        if (unchangedElement.parentNode === deepestCommonParent) {\n          context.chain[i].element = unchangedElement;\n          deepestCommonParent = unchangedElement;\n        } else {\n          break;\n        }\n      }\n    }\n    return deepestCommonParent;\n  }\n\n  __addAppearingContent(context, previousContext) {\n    this.__ensureOutlet();\n\n    // If the previous 'entering' animation has not completed yet,\n    // stop it and remove that content from the DOM before adding new one.\n    this.__removeAppearingContent();\n\n    // Copy reusable elements from the previousContext to current\n    const deepestCommonParent = this.__copyUnchangedElements(context, previousContext);\n\n    // Keep two lists of DOM elements:\n    //  - those that should be removed once the transition animation is over\n    //  - and those that should remain\n    this.__appearingContent = [];\n    this.__disappearingContent = Array\n      .from(deepestCommonParent.children)\n      .filter(\n        // Only remove layout content that was added by router\n        e => this.__addedByRouter.get(e) &&\n        // Do not remove the result element to avoid flickering\n        e !== context.result);\n\n    // Add new elements (starting after the deepest common parent) to the DOM.\n    // That way only the components that are actually different between the two\n    // locations are added to the DOM (and those that are common remain in the\n    // DOM without first removing and then adding them again).\n    let parentElement = deepestCommonParent;\n    for (let i = context.__divergedChainIndex; i < context.chain.length; i++) {\n      const elementToAdd = context.chain[i].element;\n      if (elementToAdd) {\n        parentElement.appendChild(elementToAdd);\n        this.__addedByRouter.set(elementToAdd, true);\n        if (parentElement === deepestCommonParent) {\n          this.__appearingContent.push(elementToAdd);\n        }\n        parentElement = elementToAdd;\n      }\n    }\n  }\n\n  __removeDisappearingContent() {\n    if (this.__disappearingContent) {\n      removeDomNodes(this.__disappearingContent);\n    }\n    this.__disappearingContent = null;\n    this.__appearingContent = null;\n  }\n\n  __removeAppearingContent() {\n    if (this.__disappearingContent && this.__appearingContent) {\n      removeDomNodes(this.__appearingContent);\n      this.__disappearingContent = null;\n      this.__appearingContent = null;\n    }\n  }\n\n  __runOnAfterLeaveCallbacks(currentContext, targetContext) {\n    if (!targetContext) {\n      return;\n    }\n\n    // REVERSE iteration: from Z to A\n    for (let i = targetContext.chain.length - 1; i >= currentContext.__divergedChainIndex; i--) {\n      if (!this.__isLatestRender(currentContext)) {\n        break;\n      }\n      const currentComponent = targetContext.chain[i].element;\n      if (!currentComponent) {\n        continue;\n      }\n      try {\n        const location = createLocation(currentContext);\n        runCallbackIfPossible(\n          currentComponent.onAfterLeave,\n          [location, {}, targetContext.resolver],\n          currentComponent);\n      } finally {\n        if (this.__disappearingContent.indexOf(currentComponent) > -1) {\n          removeDomNodes(currentComponent.children);\n        }\n      }\n    }\n  }\n\n  __runOnAfterEnterCallbacks(currentContext) {\n    // forward iteration: from A to Z\n    for (let i = currentContext.__divergedChainIndex; i < currentContext.chain.length; i++) {\n      if (!this.__isLatestRender(currentContext)) {\n        break;\n      }\n      const currentComponent = currentContext.chain[i].element || {};\n      const location = createLocation(currentContext, currentContext.chain[i].route);\n      runCallbackIfPossible(\n        currentComponent.onAfterEnter,\n        [location, {}, currentContext.resolver],\n        currentComponent);\n    }\n  }\n\n  __animateIfNeeded(context) {\n    const from = (this.__disappearingContent || [])[0];\n    const to = (this.__appearingContent || [])[0];\n    const promises = [];\n\n    const chain = context.chain;\n    let config;\n    for (let i = chain.length; i > 0; i--) {\n      if (chain[i - 1].route.animate) {\n        config = chain[i - 1].route.animate;\n        break;\n      }\n    }\n\n    if (from && to && config) {\n      const leave = isObject(config) && config.leave || 'leaving';\n      const enter = isObject(config) && config.enter || 'entering';\n      promises.push(animate(from, leave));\n      promises.push(animate(to, enter));\n    }\n\n    return Promise.all(promises).then(() => context);\n  }\n\n  /**\n   * Subscribes this instance to navigation events on the `window`.\n   *\n   * NOTE: beware of resource leaks. For as long as a router instance is\n   * subscribed to navigation events, it won't be garbage collected.\n   */\n  subscribe() {\n    window.addEventListener('vaadin-router-go', this.__navigationEventHandler);\n  }\n\n  /**\n   * Removes the subscription to navigation events created in the `subscribe()`\n   * method.\n   */\n  unsubscribe() {\n    window.removeEventListener('vaadin-router-go', this.__navigationEventHandler);\n  }\n\n  __onNavigationEvent(event) {\n    const {pathname, search, hash} = event ? event.detail : window.location;\n    if (isString(this.__normalizePathname(pathname))) {\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      this.render({pathname, search, hash}, true);\n    }\n  }\n\n  /**\n   * Configures what triggers Router navigation events:\n   *  - `POPSTATE`: popstate events on the current `window`\n   *  - `CLICK`: click events on `<a>` links leading to the current page\n   *\n   * This method is invoked with the pre-configured values when creating a new Router instance.\n   * By default, both `POPSTATE` and `CLICK` are enabled. This setup is expected to cover most of the use cases.\n   *\n   * See the `router-config.js` for the default navigation triggers config. Based on it, you can\n   * create the own one and only import the triggers you need, instead of pulling in all the code,\n   * e.g. if you want to handle `click` differently.\n   *\n   * See also **Navigation Triggers** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * @param {...NavigationTrigger} triggers\n   */\n  static setTriggers(...triggers) {\n    setNavigationTriggers(triggers);\n  }\n\n  /**\n   * Generates a URL for the route with the given name, optionally performing\n   * substitution of parameters.\n   *\n   * The route is searched in all the Router instances subscribed to\n   * navigation events.\n   *\n   * **Note:** For child route names, only array children are considered.\n   * It is not possible to generate URLs using a name for routes set with\n   * a children function.\n   *\n   * @function urlForName\n   * @param {!string} name the route name or the route’s `component` name.\n   * @param {Params=} params Optional object with route path parameters.\n   * Named parameters are passed by name (`params[name] = value`), unnamed\n   * parameters are passed by index (`params[index] = value`).\n   *\n   * @return {string}\n   */\n  urlForName(name, params) {\n    if (!this.__urlForName) {\n      this.__urlForName = generateUrls(this);\n    }\n    return getPathnameForRouter(\n      this.__urlForName(name, params),\n      this\n    );\n  }\n\n  /**\n   * Generates a URL for the given route path, optionally performing\n   * substitution of parameters.\n   *\n   * @param {!string} path string route path declared in [express.js syntax](https://expressjs.com/en/guide/routing.html#route-paths\").\n   * @param {Params=} params Optional object with route path parameters.\n   * Named parameters are passed by name (`params[name] = value`), unnamed\n   * parameters are passed by index (`params[index] = value`).\n   *\n   * @return {string}\n   */\n  urlForPath(path, params) {\n    return getPathnameForRouter(\n      Router.pathToRegexp.compile(path)(params),\n      this\n    );\n  }\n\n  /**\n   * Triggers navigation to a new path. Returns a boolean without waiting until\n   * the navigation is complete. Returns `true` if at least one `Router`\n   * has handled the navigation (was subscribed and had `baseUrl` matching\n   * the `path` argument), otherwise returns `false`.\n   *\n   * @param {!string|!{pathname: !string, search: (string|undefined), hash: (string|undefined)}} path\n   *   a new in-app path string, or an URL-like object with `pathname`\n   *   string property, and optional `search` and `hash` string properties.\n   * @return {boolean}\n   */\n  static go(path) {\n    const {pathname, search, hash} = isString(path)\n      ? this.__createUrl(path, 'http://a') // some base to omit origin\n      : path;\n    return fireRouterEvent('go', {pathname, search, hash});\n  }\n}\n","const DEV_MODE_CODE_REGEXP =\n  /\\/\\*\\*\\s+vaadin-dev-mode:start([\\s\\S]*)vaadin-dev-mode:end\\s+\\*\\*\\//i;\n\nconst FlowClients = window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients;\n\nfunction isMinified() {\n  function test() {\n    /** vaadin-dev-mode:start\n    return false;\n    vaadin-dev-mode:end **/\n    return true;\n  }\n  return uncommentAndRun(test);\n}\n\nfunction isDevelopmentMode() {\n  try {\n    if (isForcedDevelopmentMode()) {\n      return true;\n    }\n\n    if (!isLocalhost()) {\n      return false;\n    }\n\n    if (FlowClients) {\n      return !isFlowProductionMode();\n    }\n\n    return !isMinified();\n  } catch (e) {\n    // Some error in this code, assume production so no further actions will be taken\n    return false;\n  }\n}\n\nfunction isForcedDevelopmentMode() {\n  return localStorage.getItem(\"vaadin.developmentmode.force\");\n}\n\nfunction isLocalhost() {\n  return ([\"localhost\",\"127.0.0.1\"].indexOf(window.location.hostname) >= 0);\n}\n\nfunction isFlowProductionMode() {\n  if (FlowClients) {\n    const productionModeApps = Object.keys(FlowClients)\n      .map(key => FlowClients[key])\n      .filter(client => client.productionMode);\n    if (productionModeApps.length > 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction uncommentAndRun(callback, args) {\n  if (typeof callback !== 'function') {\n    return;\n  }\n\n  const match = DEV_MODE_CODE_REGEXP.exec(callback.toString());\n  if (match) {\n    try {\n      // requires CSP: script-src 'unsafe-eval'\n      callback = new Function(match[1]);\n    } catch (e) {\n      // eat the exception\n      console.log('vaadin-development-mode-detector: uncommentAndRun() failed', e)\n    }\n  }\n\n  return callback(args);\n}\n\n// A guard against polymer-modulizer removing the window.Vaadin\n// initialization above.\nwindow['Vaadin'] = window['Vaadin'] || {};\n\n/**\n * Inspects the source code of the given `callback` function for\n * specially-marked _commented_ code. If such commented code is found in the\n * callback source, uncomments and runs that code instead of the callback\n * itself. Otherwise runs the callback as is.\n *\n * The optional arguments are passed into the callback / uncommented code,\n * the result is returned.\n *\n * See the `isMinified()` function source code in this file for an example.\n *\n */\nexport const runIfDevelopmentMode = function(callback, args) {\n  if (window.Vaadin.developmentMode) {\n    return uncommentAndRun(callback, args);\n  }\n};\n\nif (window.Vaadin.developmentMode === undefined) {\n  window.Vaadin.developmentMode = isDevelopmentMode();\n}\n","/* This file is autogenerated from src/vaadin-usage-statistics.tpl.html */\n/*\n\nThis script gathers usage statistics from the application running in development mode.\n\nStatistics gathering is automatically disabled and excluded from production builds.\n\nFor details and to opt-out, see https://github.com/vaadin/vaadin-usage-statistics.\n\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\nimport { runIfDevelopmentMode } from '@vaadin/vaadin-development-mode-detector/vaadin-development-mode-detector.js';\n\nfunction maybeGatherAndSendStats() {\n  /** vaadin-dev-mode:start\n  (function () {\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar getPolymerVersion = function getPolymerVersion() {\n  return window.Polymer && window.Polymer.version;\n};\n\nvar StatisticsGatherer = function () {\n  function StatisticsGatherer(logger) {\n    classCallCheck(this, StatisticsGatherer);\n\n    this.now = new Date().getTime();\n    this.logger = logger;\n  }\n\n  createClass(StatisticsGatherer, [{\n    key: 'frameworkVersionDetectors',\n    value: function frameworkVersionDetectors() {\n      return {\n        'Flow': function Flow() {\n          if (window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients) {\n            var flowVersions = Object.keys(window.Vaadin.Flow.clients).map(function (key) {\n              return window.Vaadin.Flow.clients[key];\n            }).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().flow;\n            });\n            if (flowVersions.length > 0) {\n              return flowVersions[0];\n            }\n          }\n        },\n        'Vaadin Framework': function VaadinFramework() {\n          if (window.vaadin && window.vaadin.clients) {\n            var frameworkVersions = Object.values(window.vaadin.clients).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().vaadinVersion;\n            });\n            if (frameworkVersions.length > 0) {\n              return frameworkVersions[0];\n            }\n          }\n        },\n        'AngularJs': function AngularJs() {\n          if (window.angular && window.angular.version && window.angular.version) {\n            return window.angular.version.full;\n          }\n        },\n        'Angular': function Angular() {\n          if (window.ng) {\n            var tags = document.querySelectorAll(\"[ng-version]\");\n            if (tags.length > 0) {\n              return tags[0].getAttribute(\"ng-version\");\n            }\n            return \"Unknown\";\n          }\n        },\n        'Backbone.js': function BackboneJs() {\n          if (window.Backbone) {\n            return window.Backbone.VERSION;\n          }\n        },\n        'React': function React() {\n          var reactSelector = '[data-reactroot], [data-reactid]';\n          if (!!document.querySelector(reactSelector)) {\n            // React does not publish the version by default\n            return \"unknown\";\n          }\n        },\n        'Ember': function Ember() {\n          if (window.Em && window.Em.VERSION) {\n            return window.Em.VERSION;\n          } else if (window.Ember && window.Ember.VERSION) {\n            return window.Ember.VERSION;\n          }\n        },\n        'jQuery': function (_jQuery) {\n          function jQuery() {\n            return _jQuery.apply(this, arguments);\n          }\n\n          jQuery.toString = function () {\n            return _jQuery.toString();\n          };\n\n          return jQuery;\n        }(function () {\n          if (typeof jQuery === 'function' && jQuery.prototype.jquery !== undefined) {\n            return jQuery.prototype.jquery;\n          }\n        }),\n        'Polymer': function Polymer() {\n          var version = getPolymerVersion();\n          if (version) {\n            return version;\n          }\n        },\n        'LitElement': function LitElement() {\n          var version = window.litElementVersions && window.litElementVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'LitHtml': function LitHtml() {\n          var version = window.litHtmlVersions && window.litHtmlVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'Vue.js': function VueJs() {\n          if (window.Vue) {\n            return window.Vue.version;\n          }\n        }\n      };\n    }\n  }, {\n    key: 'getUsedVaadinElements',\n    value: function getUsedVaadinElements(elements) {\n      var version = getPolymerVersion();\n      var elementClasses = void 0;\n      // NOTE: In case you edit the code here, YOU MUST UPDATE any statistics reporting code in Flow.\n      // Check all locations calling the method getEntries() in\n      // https://github.com/vaadin/flow/blob/master/flow-server/src/main/java/com/vaadin/flow/internal/UsageStatistics.java#L106\n      // Currently it is only used by BootstrapHandler.\n      if (version && version.indexOf('2') === 0) {\n        // Polymer 2: components classes are stored in window.Vaadin\n        elementClasses = Object.keys(window.Vaadin).map(function (c) {\n          return window.Vaadin[c];\n        }).filter(function (c) {\n          return c.is;\n        });\n      } else {\n        // Polymer 3: components classes are stored in window.Vaadin.registrations\n        elementClasses = window.Vaadin.registrations || [];\n      }\n      elementClasses.forEach(function (klass) {\n        var version = klass.version ? klass.version : \"0.0.0\";\n        elements[klass.is] = { version: version };\n      });\n    }\n  }, {\n    key: 'getUsedVaadinThemes',\n    value: function getUsedVaadinThemes(themes) {\n      ['Lumo', 'Material'].forEach(function (themeName) {\n        var theme;\n        var version = getPolymerVersion();\n        if (version && version.indexOf('2') === 0) {\n          // Polymer 2: themes are stored in window.Vaadin\n          theme = window.Vaadin[themeName];\n        } else {\n          // Polymer 3: themes are stored in custom element registry\n          theme = customElements.get('vaadin-' + themeName.toLowerCase() + '-styles');\n        }\n        if (theme && theme.version) {\n          themes[themeName] = { version: theme.version };\n        }\n      });\n    }\n  }, {\n    key: 'getFrameworks',\n    value: function getFrameworks(frameworks) {\n      var detectors = this.frameworkVersionDetectors();\n      Object.keys(detectors).forEach(function (framework) {\n        var detector = detectors[framework];\n        try {\n          var version = detector();\n          if (version) {\n            frameworks[framework] = { version: version };\n          }\n        } catch (e) {}\n      });\n    }\n  }, {\n    key: 'gather',\n    value: function gather(storage) {\n      var storedStats = storage.read();\n      var gatheredStats = {};\n      var types = [\"elements\", \"frameworks\", \"themes\"];\n\n      types.forEach(function (type) {\n        gatheredStats[type] = {};\n        if (!storedStats[type]) {\n          storedStats[type] = {};\n        }\n      });\n\n      var previousStats = JSON.stringify(storedStats);\n\n      this.getUsedVaadinElements(gatheredStats.elements);\n      this.getFrameworks(gatheredStats.frameworks);\n      this.getUsedVaadinThemes(gatheredStats.themes);\n\n      var now = this.now;\n      types.forEach(function (type) {\n        var keys = Object.keys(gatheredStats[type]);\n        keys.forEach(function (key) {\n          if (!storedStats[type][key] || _typeof(storedStats[type][key]) != _typeof({})) {\n            storedStats[type][key] = { firstUsed: now };\n          }\n          // Discards any previously logged version number\n          storedStats[type][key].version = gatheredStats[type][key].version;\n          storedStats[type][key].lastUsed = now;\n        });\n      });\n\n      var newStats = JSON.stringify(storedStats);\n      storage.write(newStats);\n      if (newStats != previousStats && Object.keys(storedStats).length > 0) {\n        this.logger.debug(\"New stats: \" + newStats);\n      }\n    }\n  }]);\n  return StatisticsGatherer;\n}();\n\nvar StatisticsStorage = function () {\n  function StatisticsStorage(key) {\n    classCallCheck(this, StatisticsStorage);\n\n    this.key = key;\n  }\n\n  createClass(StatisticsStorage, [{\n    key: 'read',\n    value: function read() {\n      var localStorageStatsString = localStorage.getItem(this.key);\n      try {\n        return JSON.parse(localStorageStatsString ? localStorageStatsString : '{}');\n      } catch (e) {\n        return {};\n      }\n    }\n  }, {\n    key: 'write',\n    value: function write(data) {\n      localStorage.setItem(this.key, data);\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      localStorage.removeItem(this.key);\n    }\n  }, {\n    key: 'isEmpty',\n    value: function isEmpty() {\n      var storedStats = this.read();\n      var empty = true;\n      Object.keys(storedStats).forEach(function (key) {\n        if (Object.keys(storedStats[key]).length > 0) {\n          empty = false;\n        }\n      });\n\n      return empty;\n    }\n  }]);\n  return StatisticsStorage;\n}();\n\nvar StatisticsSender = function () {\n  function StatisticsSender(url, logger) {\n    classCallCheck(this, StatisticsSender);\n\n    this.url = url;\n    this.logger = logger;\n  }\n\n  createClass(StatisticsSender, [{\n    key: 'send',\n    value: function send(data, errorHandler) {\n      var logger = this.logger;\n\n      if (navigator.onLine === false) {\n        logger.debug(\"Offline, can't send\");\n        errorHandler();\n        return;\n      }\n      logger.debug(\"Sending data to \" + this.url);\n\n      var req = new XMLHttpRequest();\n      req.withCredentials = true;\n      req.addEventListener(\"load\", function () {\n        // Stats sent, nothing more to do\n        logger.debug(\"Response: \" + req.responseText);\n      });\n      req.addEventListener(\"error\", function () {\n        logger.debug(\"Send failed\");\n        errorHandler();\n      });\n      req.addEventListener(\"abort\", function () {\n        logger.debug(\"Send aborted\");\n        errorHandler();\n      });\n      req.open(\"POST\", this.url);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n      req.send(data);\n    }\n  }]);\n  return StatisticsSender;\n}();\n\nvar StatisticsLogger = function () {\n  function StatisticsLogger(id) {\n    classCallCheck(this, StatisticsLogger);\n\n    this.id = id;\n  }\n\n  createClass(StatisticsLogger, [{\n    key: '_isDebug',\n    value: function _isDebug() {\n      return localStorage.getItem(\"vaadin.\" + this.id + \".debug\");\n    }\n  }, {\n    key: 'debug',\n    value: function debug(msg) {\n      if (this._isDebug()) {\n        console.info(this.id + \": \" + msg);\n      }\n    }\n  }]);\n  return StatisticsLogger;\n}();\n\nvar UsageStatistics = function () {\n  function UsageStatistics() {\n    classCallCheck(this, UsageStatistics);\n\n    this.now = new Date();\n    this.timeNow = this.now.getTime();\n    this.gatherDelay = 10; // Delay between loading this file and gathering stats\n    this.initialDelay = 24 * 60 * 60;\n\n    this.logger = new StatisticsLogger(\"statistics\");\n    this.storage = new StatisticsStorage(\"vaadin.statistics.basket\");\n    this.gatherer = new StatisticsGatherer(this.logger);\n    this.sender = new StatisticsSender(\"https://tools.vaadin.com/usage-stats/submit\", this.logger);\n  }\n\n  createClass(UsageStatistics, [{\n    key: 'maybeGatherAndSend',\n    value: function maybeGatherAndSend() {\n      var _this = this;\n\n      if (localStorage.getItem(UsageStatistics.optOutKey)) {\n        return;\n      }\n      this.gatherer.gather(this.storage);\n      setTimeout(function () {\n        _this.maybeSend();\n      }, this.gatherDelay * 1000);\n    }\n  }, {\n    key: 'lottery',\n    value: function lottery() {\n      return true;\n    }\n  }, {\n    key: 'currentMonth',\n    value: function currentMonth() {\n      return this.now.getYear() * 12 + this.now.getMonth();\n    }\n  }, {\n    key: 'maybeSend',\n    value: function maybeSend() {\n      var firstUse = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      var monthProcessed = Number(localStorage.getItem(UsageStatistics.monthProcessedKey));\n\n      if (!firstUse) {\n        // Use a grace period to avoid interfering with tests, incognito mode etc\n        firstUse = this.timeNow;\n        localStorage.setItem(UsageStatistics.firstUseKey, firstUse);\n      }\n\n      if (this.timeNow < firstUse + this.initialDelay * 1000) {\n        this.logger.debug(\"No statistics will be sent until the initial delay of \" + this.initialDelay + \"s has passed\");\n        return;\n      }\n      if (this.currentMonth() <= monthProcessed) {\n        this.logger.debug(\"This month has already been processed\");\n        return;\n      }\n      localStorage.setItem(UsageStatistics.monthProcessedKey, this.currentMonth());\n      // Use random sampling\n      if (this.lottery()) {\n        this.logger.debug(\"Congratulations, we have a winner!\");\n      } else {\n        this.logger.debug(\"Sorry, no stats from you this time\");\n        return;\n      }\n\n      this.send();\n    }\n  }, {\n    key: 'send',\n    value: function send() {\n      // Ensure we have the latest data\n      this.gatherer.gather(this.storage);\n\n      // Read, send and clean up\n      var data = this.storage.read();\n      data[\"firstUse\"] = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      data[\"usageStatisticsVersion\"] = UsageStatistics.version;\n      var info = 'This request contains usage statistics gathered from the application running in development mode. \\n\\nStatistics gathering is automatically disabled and excluded from production builds.\\n\\nFor details and to opt-out, see https://github.com/vaadin/vaadin-usage-statistics.\\n\\n\\n\\n';\n      var self = this;\n      this.sender.send(info + JSON.stringify(data), function () {\n        // Revert the 'month processed' flag\n        localStorage.setItem(UsageStatistics.monthProcessedKey, self.currentMonth() - 1);\n      });\n    }\n  }], [{\n    key: 'version',\n    get: function get$1() {\n      return '2.1.0';\n    }\n  }, {\n    key: 'firstUseKey',\n    get: function get$1() {\n      return 'vaadin.statistics.firstuse';\n    }\n  }, {\n    key: 'monthProcessedKey',\n    get: function get$1() {\n      return 'vaadin.statistics.monthProcessed';\n    }\n  }, {\n    key: 'optOutKey',\n    get: function get$1() {\n      return 'vaadin.statistics.optout';\n    }\n  }]);\n  return UsageStatistics;\n}();\n\ntry {\n  window.Vaadin = window.Vaadin || {};\n  window.Vaadin.usageStatsChecker = window.Vaadin.usageStatsChecker || new UsageStatistics();\n  window.Vaadin.usageStatsChecker.maybeGatherAndSend();\n} catch (e) {\n  // Intentionally ignored as this is not a problem in the app being developed\n}\n\n}());\n\n  vaadin-dev-mode:end **/\n}\n\nexport const usageStatistics = function() {\n  if (typeof runIfDevelopmentMode === 'function') {\n    return runIfDevelopmentMode(maybeGatherAndSendStats);\n  }\n};\n","import {usageStatistics} from '@vaadin/vaadin-usage-statistics/vaadin-usage-statistics.js';\n\nwindow.Vaadin = window.Vaadin || {};\nwindow.Vaadin.registrations = window.Vaadin.registrations || [];\n\nwindow.Vaadin.registrations.push({\n  is: '@vaadin/router',\n  version: '1.7.4',\n});\n\nusageStatistics();\n","import CLICK from './triggers/click.js';\nimport POPSTATE from './triggers/popstate.js';\nimport {Router} from './router.js';\nimport './router-meta.js';\nRouter.NavigationTrigger = {POPSTATE, CLICK};\nexport {Router};\n","import { Router } from '@vaadin/router';\r\nimport { state } from '../../../state';\r\n\r\nclass LoginPage extends HTMLElement {\r\n    connectedCallback() {\r\n        this.render();\r\n        this.querySelector(\".form\").addEventListener(\"submit\", e => {\r\n            e.preventDefault();\r\n            const target = e.target as any;\r\n            state.setEmailNameAndPassword(target.email.value, target.password.value);\r\n            state.login(() => {\r\n                if (state.getState().userId) {\r\n                    Router.go(\"/select\");\r\n                };\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const style = document.createElement(\"style\");\r\n\r\n        this.innerHTML = `\r\n            <div class=\"header\"></div>\r\n            <main class=\"main\">\r\n                <h1 class=\"title\">Bienvenidos!</h1>\r\n\r\n                <div class=\"form-container\">\r\n                    <h3 class=\"form-title\">Iniciar sesión</h3>\r\n                    <form class=\"form\">\r\n                        <div class=\"form-div\">\r\n                            <label class=\"form-label\" for=\"form-email\">Tu email:</label>\r\n                            <input type=\"email\" class=\"form-input\" required name=\"email\" id=\"form-email\">\r\n                        </div>\r\n                        <div class=\"form-container__password\">\r\n                            <label class=\"form-label\" for=\"form-password\">Tu contraseña:</label>\r\n                            <input type=\"password\" class=\"form-input\" name=\"password\" required id=\"form-password\">\r\n                            <button type=\"button\" class=\"form-password__button\">\r\n                                <i class=\"fa-solid fa-eye form-input__icon\"></i>\r\n                            </button>\r\n                        </div>\r\n                        <button type=\"submit\" class=\"form-button\">Comenzar</button>\r\n                    </form>\r\n                    <p class=\"form-signup\">No tenés una cuenta? \r\n                        <a href=\"/signup\" class=\"form-signup__link\">Creala ahora</a>\r\n                    </p>\r\n                </div>\r\n            </main>\r\n        `;\r\n        const buttonEl = document.querySelector(\".form-password__button\");\r\n        const inputEl = document.querySelector(\"#form-password\") as any;\r\n        const inputIconEl = document.querySelector(\".form-input__icon\");\r\n        buttonEl.addEventListener(\"click\", e => {\r\n            if (inputEl.type === \"password\") {\r\n                inputEl.type = \"text\";\r\n                inputIconEl.classList.remove(\"fa-eye\");\r\n                inputIconEl.classList.add(\"fa-eye-slash\");\r\n            } else {\r\n                inputEl.type = \"password\";\r\n                inputIconEl.classList.remove(\"fa-eye-slash\");\r\n                inputIconEl.classList.add(\"fa-eye\");\r\n            }\r\n        });\r\n    };\r\n};\r\ncustomElements.define(\"login-page\", LoginPage);","import { Router } from '@vaadin/router';\r\nimport { state } from '../../../state';\r\n\r\nclass SignupPage extends HTMLElement {\r\n    connectedCallback() {\r\n        this.render();\r\n        this.querySelector(\".form\").addEventListener(\"submit\", e => {\r\n            e.preventDefault();\r\n            const target = e.target as any;\r\n            state.setEmailNameAndPassword(target.email.value, target.password.value, target.nombre.value);\r\n            state.signup(() => {\r\n                if (state.getState().userId) {\r\n                    Router.go(\"/select\");\r\n                };\r\n            });\r\n        });\r\n    };\r\n    render() {\r\n        const style = document.createElement(\"style\");\r\n\r\n        this.innerHTML = `\r\n            <div class=\"header\"></div>\r\n            <main class=\"main\">\r\n                <h1 class=\"title\">Bienvenidos!</h1>\r\n\r\n                <div class=\"form-container\">\r\n                    <h3 class=\"form-title\">Registrame</h3>\r\n                    <form class=\"form\">\r\n                        <div class=\"form-div\">\r\n                            <label class=\"form-label\" for=\"form-email\">Tu email:</label>\r\n                            <input type=\"email\" class=\"form-input\" name=\"email\" id=\"form-email\">\r\n                        </div>\r\n                        <div class=\"form-div\">\r\n                            <label class=\"form-label\" for=\"form-nombre\">Tu nombre:</label>\r\n                            <input type=\"text\" class=\"form-input\" name=\"nombre\" id=\"form-nombre\">\r\n                        </div>\r\n                        <div class=\"form-container__password\">\r\n                            <label class=\"form-label\" for=\"form-password\">Tu contraseña:</label>\r\n                            <input type=\"password\" class=\"form-input\" name=\"password\" id=\"form-password\">\r\n                            <button type=\"button\" class=\"form-password__button\">\r\n                                <i class=\"fa-solid fa-eye form-input__icon\"></i>\r\n                            </button>\r\n                        </div>\r\n                        <button type=\"submit\" class=\"form-button\">Comenzar</button>\r\n                    </form>\r\n                    <p class=\"form-signup\">Ya tenés una cuenta? \r\n                        <a href=\"/login\" class=\"form-signup__link\"> Iniciar sesión</a>\r\n                    </p>\r\n                </div>\r\n            </main>\r\n        `;\r\n\r\n        const buttonEl = document.querySelector(\".form-password__button\");\r\n        const inputEl = document.querySelector(\"#form-password\") as any;\r\n        const inputIconEl = document.querySelector(\".form-input__icon\");\r\n        buttonEl.addEventListener(\"click\", e => {\r\n            if (inputEl.type === \"password\") {\r\n                inputEl.type = \"text\";\r\n                inputIconEl.classList.remove(\"fa-eye\");\r\n                inputIconEl.classList.add(\"fa-eye-slash\");\r\n            } else {\r\n                inputEl.type = \"password\";\r\n                inputIconEl.classList.remove(\"fa-eye-slash\");\r\n                inputIconEl.classList.add(\"fa-eye\");\r\n            }\r\n        });\r\n    };\r\n};\r\ncustomElements.define(\"signup-page\", SignupPage);","import { Router } from '@vaadin/router';\r\nimport { state } from '../../state';\r\n\r\nclass SelectPage extends HTMLElement {\r\n    connectedCallback() {\r\n        this.render();\r\n\r\n        const selectEl = this.querySelector(\"#salas-select\");\r\n        selectEl.addEventListener(\"change\", ev => {\r\n            const target = ev.target as any;\r\n            const div = this.querySelector(\".form-roomid-div\") as any;\r\n            if (target.value === \"unir\") {\r\n                div.style.display = \"block\";\r\n\r\n                this.querySelector(\".form\").addEventListener(\"submit\", e => {\r\n                    e.preventDefault();\r\n                    const target = e.target as any;\r\n                    state.setUserName(target.usuario.value);\r\n                    state.setRoomId(target.roomid.value);\r\n                    state.accessToRoom(() => {\r\n                        Router.go(\"/chat\");\r\n                    });\r\n                });\r\n            } else if (target.value === \"crear\") {\r\n                div.style.display = \"none\";\r\n\r\n                document.querySelector(\".form\").addEventListener(\"submit\", e => {\r\n                    e.preventDefault();\r\n                    const target = e.target as any;\r\n                    state.setUserName(target.usuario.value);\r\n                    state.newRoom(() => {\r\n                        Router.go(\"/chat\");\r\n                    });\r\n                });\r\n            } else {\r\n                div.style.display = \"none\";\r\n            }\r\n        });\r\n    };\r\n    render() {\r\n        const style = document.createElement(\"style\");\r\n        const currentState = state.getState();\r\n\r\n        this.innerHTML = `\r\n            <div class=\"header\"></div>\r\n            <main class=\"main\">\r\n                <h1 class=\"title\">Bienvenido ${currentState.name}!</h1>\r\n\r\n                <div class=\"form-container\">\r\n                    <form class=\"form\">\r\n                        <div class=\"form-div\">\r\n                            <label class=\"form-label\" for=\"form-usuario\">Tu nombre de usuario:</label>\r\n                            <input type=\"text\" class=\"form-input\" required name=\"usuario\" id=\"form-usuario\">\r\n                        </div>\r\n                        <div class=\"form-div\">\r\n                            <label class=\"form-label\" for=\"salas-select\">Creas una nueva sala o te unís a una existente?</label>\r\n                            <select class=\"form-input\" name=\"salas\" id=\"salas-select\">\r\n                            <option value=\"crear\" selected>Crear sala</option>\r\n                            <option value=\"unir\">Unirse a sala</option>\r\n                            <option value=\"\" selected>Elegí una opción...</option>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"form-roomid-div\">\r\n                            <label class=\"form-label\" for=\"form-roomid\">Id de la sala:</label>\r\n                            <input type=\"text\" class=\"form-input\" name=\"roomid\" id=\"form-roomid\">\r\n                        </div>\r\n                        <button class=\"form-button\">Comenzar</button>\r\n                    </form>\r\n                </div>\r\n            </main>\r\n        `;\r\n    };\r\n};\r\ncustomElements.define(\"select-page\", SelectPage);","import { state } from \"../../state\";\r\nimport { Router } from '@vaadin/router';\r\n\r\ntype Message = {\r\n    from: string,\r\n    message: string\r\n};\r\n\r\nclass ChatPage extends HTMLElement {\r\n    messages: Message[] = [];\r\n\r\n    connectedCallback() {\r\n        state.listenToRoom();\r\n        const currentState = state.getState();\r\n        this.messages = currentState.messages;\r\n        state.subscribe(() => {\r\n            const currentState = state.getState();\r\n            this.messages = currentState.messages;\r\n            this.render();\r\n            const messagesSectionEl = document.querySelector(\".messages-section\");\r\n            if (messagesSectionEl) {\r\n                messagesSectionEl.scrollTop = messagesSectionEl.scrollHeight;\r\n            };\r\n        });\r\n        this.render();\r\n    };\r\n\r\n    addListeners() {\r\n        this.querySelector(\".send-message__form\").addEventListener(\"submit\", e => {\r\n            e.preventDefault();\r\n            const target = e.target as any;\r\n            state.pushMessage(target[\"send-message\"].value);\r\n        });\r\n    };\r\n\r\n    render() {\r\n        this.innerHTML = `\r\n            <div class=\"header\">\r\n                <p class=\"header__roomid\">Id de la sala: ${state.getState().roomId}</p>\r\n            </div>\r\n            <section class=\"messages-section\">\r\n                ${this.messages.map(m => {\r\n            if (m.from === state.getState().username) {\r\n                return `\r\n                                <div class=\"message message--enviado\">\r\n                                <div class=\"message-from\">${m.from}</div>\r\n                                <div class=\"message-text message-text--enviado\">\r\n                                ${m.message}\r\n                                </div>\r\n                                </div>\r\n                                `\r\n            } else {\r\n                return `\r\n                                    <div class=\"message message--recibido\">\r\n                                    <div class=\"message-from\">${m.from}</div>\r\n                                    <div class=\"message-text message-text--recibido\">\r\n                                    ${m.message}\r\n                                    </div>\r\n                                    </div>\r\n                            `\r\n            }\r\n        }).join(\"\")}\r\n        </section>\r\n        <section class=\"send-message\">\r\n        <form class=\"send-message__form\">\r\n        <input type=\"text\" class=\"send-message__form-input\" name=\"send-message\" id=\"send-message\">\r\n        <button class=\"send-message__form-button\">Enviar</button>\r\n        </form>\r\n        </section>\r\n        `;\r\n        this.addListeners();\r\n    };\r\n};\r\ncustomElements.define(\"chat-page\", ChatPage);","import { Router } from '@vaadin/router';\r\n\r\nconst router = new Router(document.querySelector('.root'));\r\nrouter.setRoutes([\r\n    { path: '/', redirect: '/login' },\r\n    { path: '/login', component: 'login-page' },\r\n    { path: '/signup', component: 'signup-page' },\r\n    { path: '/select', component: 'select-page' },\r\n    { path: '/chat', component: 'chat-page' }\r\n]);","import { state } from \"./state\";\r\nimport \"./pages/welcome-page/login/login.ts\";\r\nimport \"./pages/welcome-page/signup/signup.ts\";\r\nimport \"./pages/select-page/select-page.ts\";\r\nimport \"./pages/chat-page/chat-page.ts\";\r\nimport \"./router\";\r\n\r\n(function () {\r\n    state.init();\r\n})();"],"names":["$cfae44f0dfdf62c0$var$cachedSetTimeout","$cfae44f0dfdf62c0$var$cachedClearTimeout","$cfae44f0dfdf62c0$var$process","$cfae44f0dfdf62c0$exports","$cfae44f0dfdf62c0$var$defaultSetTimout","Error","$cfae44f0dfdf62c0$var$defaultClearTimeout","$cfae44f0dfdf62c0$var$runTimeout","fun","setTimeout","e","call","this","clearTimeout","$cfae44f0dfdf62c0$var$currentQueue","$cfae44f0dfdf62c0$var$queue","$cfae44f0dfdf62c0$var$draining","$cfae44f0dfdf62c0$var$queueIndex","$cfae44f0dfdf62c0$var$cleanUpNextTick","length","concat","$cfae44f0dfdf62c0$var$drainQueue","timeout","len","run","marker","$cfae44f0dfdf62c0$var$runClearTimeout","$cfae44f0dfdf62c0$var$Item","array","$cfae44f0dfdf62c0$var$noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","$c38e0f42709c826a$export$588c7fdda06fbb0a","NODE_CLIENT","NODE_ADMIN","SDK_VERSION","$c38e0f42709c826a$export$a7a9523472993e97","assertion","message","$c38e0f42709c826a$export$a39cad550e7ab28a","stringToByteArray","str","out","p","c","charCodeAt","$c38e0f42709c826a$export$b3b2de96497acc47","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","isArray","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","$c38e0f42709c826a$var$byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","$c38e0f42709c826a$export$e510a73ee562749","utf8Bytes","$c38e0f42709c826a$export$4b5284a3025a455","replace","$c38e0f42709c826a$export$c62426fdd000a97e","console","error","$c38e0f42709c826a$export$6c40052bed430212","value","$c38e0f42709c826a$export$54e9fb29908872fa","undefined","target","source","Object","constructor","Date","getTime","prop","hasOwnProperty","$c38e0f42709c826a$var$getDefaultsFromGlobal","self","window","$parcel$global","$c38e0f42709c826a$export$a4e55266d2135a7f","__FIREBASE_DEFAULTS__","$c38e0f42709c826a$export$212bb2fc580a90a8","$c38e0f42709c826a$var$getDefaultsFromEnvVariable","document","match","cookie","decoded","JSON","parse","$c38e0f42709c826a$var$getDefaultsFromCookie","info","$c38e0f42709c826a$export$a3febcf1f14a3a0c","productName","host","_a","_b","emulatorHosts","$c38e0f42709c826a$export$9c11895284c8adad","separatorIndex","lastIndexOf","port","parseInt","substring","$c38e0f42709c826a$export$3dfb6827a9f89756","config","$c38e0f42709c826a$export$85f6557964517f1a","reject","resolve","promise","Promise","wrapCallback","callback","catch","$c38e0f42709c826a$export$367bf224123348f1","token","projectId","uid","project","iat","sub","user_id","payload","assign","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","stringify","alg","type","$c38e0f42709c826a$export$c36915b22ce77c19","navigator","$c38e0f42709c826a$export$872f8323f01d7ae0","test","$c38e0f42709c826a$export$5d1d834fbbf8bab7","$c38e0f42709c826a$export$3865db50535c2055","indexedDB","$c38e0f42709c826a$export$dd24e9cd51226c56","code","customData","super","setPrototypeOf","captureStackTrace","$c38e0f42709c826a$export$3fa6e1b18a3b2d40","create","service","serviceName","errors","data","fullCode","template","$c38e0f42709c826a$var$PATTERN","_","key","$c38e0f42709c826a$var$replaceTemplate","fullMessage","$c38e0f42709c826a$export$c5a53ce6a17cf18d","$c38e0f42709c826a$export$fac44ee5b035f737","$c38e0f42709c826a$export$2f872c0f2117be69","header","claims","signature","parts","split","$c38e0f42709c826a$export$9565ca3d387f8aa0","$c38e0f42709c826a$export$fc970ed23da99565","$c38e0f42709c826a$export$2344b14b097df817","obj","$c38e0f42709c826a$export$e51ae4db7b428f67","$c38e0f42709c826a$export$dd1bc94b04021eeb","$c38e0f42709c826a$export$871de8747c9eaa88","fn","contextObj","res","$c38e0f42709c826a$export$9cb4719e2e525b7a","a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","$c38e0f42709c826a$var$isObject","thing","$c38e0f42709c826a$export$ac4103b836844853","querystringParams","params","entries","forEach","arrayVal","encodeURIComponent","$c38e0f42709c826a$export$c85d589bf4e25fef","chain_","buf_","W_","pad_","inbuf_","total_","blockSize","reset","compress_","buf","offset","W","t","f","d","update","lengthMinusBlock","n","inbuf","digest","totalBits","j","$c38e0f42709c826a$export$adea4917e02d93dc","fnName","argName","$c38e0f42709c826a$export$655666783217a925","high","$c38e0f42709c826a$export$9536dc0a75b20bf9","$c38e0f42709c826a$export$4befe9b5fa509a1b","_delegate","$a83e7ccd68ca8d4e$export$16fa2f45be04daa8","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","mode","setMultipleInstances","setServiceProps","props","setInstanceCreatedCallback","$a83e7ccd68ca8d4e$var$DEFAULT_ENTRY_NAME","$a83e7ccd68ca8d4e$export$2881499e37b75b9a","container","component","instances","Map","instancesDeferred","instancesOptions","onInitCallbacks","get","identifier","normalizedIdentifier","normalizeInstanceIdentifier","has","deferred","set","isInitialized","shouldAutoInitialize","instance","getOrInitializeService","instanceIdentifier","getImmediate","options","optional","getComponent","setComponent","$a83e7ccd68ca8d4e$var$isComponentEager","instanceDeferred","clearInstance","delete","async","services","from","values","all","filter","map","INTERNAL","_delete","isComponentSet","getOptions","initialize","opts","onInit","existingCallbacks","Set","add","existingInstance","invokeOnInitCallbacks","callbacks","$a83e7ccd68ca8d4e$export$436a80eea5d5c0c5","providers","addComponent","provider","getProvider","addOrOverwriteComponent","getProviders","$45b460d9de9b230f$var$instances","$45b460d9de9b230f$export$243e62d78d3b544d","LogLevel","$45b460d9de9b230f$var$levelStringToEnum","debug","DEBUG","verbose","VERBOSE","INFO","warn","WARN","ERROR","silent","SILENT","$45b460d9de9b230f$var$defaultLogLevel","$45b460d9de9b230f$var$ConsoleMethod","$45b460d9de9b230f$var$defaultLogHandler","logType","logLevel","now","toISOString","method","$45b460d9de9b230f$export$efa9a398d6368992","_logLevel","_logHandler","_userLogHandler","val","TypeError","setLogLevel","logHandler","userLogHandler","log","$e67bf383372d72f4$export$23f2a1d2818174ef","object","constructors","some","$e67bf383372d72f4$var$idbProxyableTypes","$e67bf383372d72f4$var$cursorAdvanceMethods","$e67bf383372d72f4$var$cursorRequestMap","WeakMap","$e67bf383372d72f4$var$transactionDoneMap","$e67bf383372d72f4$var$transactionStoreNamesMap","$e67bf383372d72f4$var$transformCache","$e67bf383372d72f4$export$407448d2b89b1813","$e67bf383372d72f4$var$idbProxyTraps","receiver","IDBTransaction","objectStoreNames","objectStore","$e67bf383372d72f4$export$efccba1c4a2ef57b","$e67bf383372d72f4$var$wrapFunction","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","$e67bf383372d72f4$export$3b14a55fb2447963","storeNames","tx","sort","$e67bf383372d72f4$var$transformCachableValue","done","unlisten","removeEventListener","complete","DOMException","addEventListener","$e67bf383372d72f4$var$cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","Proxy","IDBRequest","request","success","result","then","$e67bf383372d72f4$var$promisifyRequest","newValue","$da032767b57a4aa4$export$ca0ed41b1a2af7e","blocked","upgrade","blocking","terminated","open","openPromise","event","oldVersion","newVersion","db","$da032767b57a4aa4$var$readMethods","$da032767b57a4aa4$var$writeMethods","$da032767b57a4aa4$var$cachedMethods","$da032767b57a4aa4$var$getMethod","targetFuncName","useIndex","isWrite","storeName","store","index","shift","oldTraps","$57d436074e210fb5$var$PlatformLoggerServiceImpl","getPlatformInfoString","$57d436074e210fb5$var$isVersionServiceProvider","library","logString","$57d436074e210fb5$var$logger","$57d436074e210fb5$export$9f30fa0c10967f7f","$57d436074e210fb5$var$PLATFORM_LOG_STRING","$57d436074e210fb5$var$name$o","appName","$57d436074e210fb5$export$b4e3c36c855b14b5","$57d436074e210fb5$export$9566bce3835c0f28","$57d436074e210fb5$export$fa5244b94c62d36a","app","$57d436074e210fb5$export$c930050e7bb63965","componentName","$57d436074e210fb5$export$fa0d6da0f5838f50","heartbeatController","triggerHeartbeat","$57d436074e210fb5$var$ERROR_FACTORY","$57d436074e210fb5$var$FirebaseAppImpl","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","isDeleted","$57d436074e210fb5$export$31499a9cd224b78c","$57d436074e210fb5$export$c55cfd413944906d","rawConfig","existingApp","newApp","$57d436074e210fb5$export$f9962582c9e66d99","$57d436074e210fb5$export$d29d5299a7137abc","libraryKeyOrName","variant","libraryMismatch","versionMismatch","warning","$57d436074e210fb5$var$DB_NAME","$57d436074e210fb5$var$DB_VERSION","$57d436074e210fb5$var$STORE_NAME","$57d436074e210fb5$var$dbPromise","$57d436074e210fb5$var$getDbPromise","createObjectStore","originalErrorMessage","$57d436074e210fb5$var$writeHeartbeatsToIndexedDB","heartbeatObject","put","$57d436074e210fb5$var$computeKey","idbGetError","appId","$57d436074e210fb5$var$MAX_HEADER_BYTES","$57d436074e210fb5$var$HeartbeatServiceImpl","_heartbeatsCache","_storage","$57d436074e210fb5$var$HeartbeatStorageImpl","_heartbeatsCachePromise","read","agent","date","$57d436074e210fb5$var$getUTCDateString","lastSentHeartbeatDate","heartbeats","singleDateHeartbeat","hbTimestamp","valueOf","overwrite","heartbeatsToSend","unsentEntries","heartbeatsCache","maxSize","slice","heartbeatEntry","find","hb","dates","$57d436074e210fb5$var$countBytes","pop","$57d436074e210fb5$var$extractHeartbeatsForHeader","headerString","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","preExist","DB_CHECK_NAME","onsuccess","close","deleteDatabase","onupgradeneeded","onerror","$57d436074e210fb5$var$readHeartbeatsFromIndexedDB","heartbeatsObject","existingHeartbeatsObject","$da38ac6aa733c404$var$SDK_VERSION","$da38ac6aa733c404$var$DOMStorageWrapper","domStorage_","prefix_","removeItem","prefixedName_","setItem","storedVal","getItem","remove","toString","$da38ac6aa733c404$var$MemoryStorage","cache_","isInMemoryStorage","$da38ac6aa733c404$var$createStoragefor","domStorageName","domStorage","$da38ac6aa733c404$var$PersistentStorage","$da38ac6aa733c404$var$SessionStorage","$da38ac6aa733c404$var$logClient","$da38ac6aa733c404$var$LUIDGenerator","id","$da38ac6aa733c404$var$sha1","sha1","sha1Bytes","$da38ac6aa733c404$var$buildLogMessage_","varArgs","arg","$da38ac6aa733c404$var$logger","$da38ac6aa733c404$var$firstLog_","enableLogging","logger_","persistent","bind","$da38ac6aa733c404$var$log","$da38ac6aa733c404$var$logWrapper","prefix","$da38ac6aa733c404$var$error","$da38ac6aa733c404$var$fatal","$da38ac6aa733c404$var$warn","$da38ac6aa733c404$var$isInvalidJSONNumber","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","$da38ac6aa733c404$var$MIN_NAME","$da38ac6aa733c404$var$MAX_NAME","$da38ac6aa733c404$var$nameCompare","aAsInt","$da38ac6aa733c404$var$tryParseInt","bAsInt","$da38ac6aa733c404$var$stringCompare","$da38ac6aa733c404$var$requireKey","$da38ac6aa733c404$var$ObjectToUniqueKey","$da38ac6aa733c404$var$splitStringBySize","segsize","dataSegs","$da38ac6aa733c404$var$each","$da38ac6aa733c404$var$doubleToIEEE754String","v","bias","s","ln","Infinity","Math","abs","pow","min","floor","LN2","round","bits","reverse","hexByteString","hexByte","substr","toLowerCase","$da38ac6aa733c404$var$INTEGER_REGEXP_","RegExp","intVal","$da38ac6aa733c404$var$exceptionGuard","stack","$da38ac6aa733c404$var$beingCrawled","search","$da38ac6aa733c404$var$setTimeoutNonBlocking","time","Deno","unrefTimer","$da38ac6aa733c404$var$AppCheckTokenProvider","appName_","appCheckProvider","appCheck","getToken","forceRefresh","addTokenChangeListener","listener","addTokenListener","notifyForInvalidToken","$da38ac6aa733c404$var$FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","auth_","auth","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","$da38ac6aa733c404$var$EmulatorTokenProvider","accessToken","OWNER","$da38ac6aa733c404$var$PROTOCOL_VERSION","$da38ac6aa733c404$var$FORGE_DOMAIN_RE","$da38ac6aa733c404$var$APP_CHECK_TOKEN_PARAM","$da38ac6aa733c404$var$WEBSOCKET","$da38ac6aa733c404$var$LONG_POLLING","$da38ac6aa733c404$var$RepoInfo","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","isUsingEmulator","_host","_domain","indexOf","internalHost","isCacheableHost","isCustomHost","newHost","toURLString","protocol","query","$da38ac6aa733c404$var$repoInfoConnectionURL","repoInfo","connURL","$da38ac6aa733c404$var$repoInfoNeedsQueryParam","pairs","$da38ac6aa733c404$var$StatsCollection","counters_","incrementCounter","amount","$da38ac6aa733c404$var$collections","$da38ac6aa733c404$var$reporters","$da38ac6aa733c404$var$statsManagerGetCollection","hashString","$da38ac6aa733c404$var$PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","toProcess","$da38ac6aa733c404$var$FIREBASE_LONGPOLL_START_PARAM","$da38ac6aa733c404$var$BrowserPollConnection","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","readyState","called","wrappedFn","body","attachEvent","$da38ac6aa733c404$var$executeWhenDOMReady","scriptTagHolder","$da38ac6aa733c404$var$FirebaseIFrameScriptHolder","command","arg1","arg2","arg3","arg4","incrementIncomingBytes_","password","sendNewPolls","pN","urlParams","random","uniqueCallbackIdentifier","location","hostname","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","static","forceAllow_","forceDisallow_","createElement","href","Windows","UI","markConnectionHealthy","shutdown_","myDisconnFrame","removeChild","send","dataStr","base64data","$da38ac6aa733c404$var$MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","pendingSegs","currentSerial","myIFrame","createIFrame_","script","domain","iframeContents","doc","write","iframe","contentWindow","contentDocument","alive","textContent","myID","myPW","newRequest_","size","theURL","curDataString","theSeg","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript","onload","onreadystatechange","rstate","parentNode","$da38ac6aa733c404$var$WebSocketImpl","MozWebSocket","WebSocket","$da38ac6aa733c404$var$WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","headers","platform","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","userAgent","oldAndroidRegex","oldAndroidMatch","parseFloat","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","$da38ac6aa733c404$var$TransportManager","initTransports_","ALL_TRANSPORTS","IS_TRANSPORT_INITIALIZED","globalTransportInitialized_","isWebSocketsAvailable","isSkipPollConnection","previouslyFailed","transports_","transports","transport","initialTransport","upgradeTransport","$da38ac6aa733c404$var$Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","handshakePayload","h","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","reason","$da38ac6aa733c404$var$ServerActions","pathString","onComplete","hash","merge","refreshAuthToken","refreshAppCheckToken","onDisconnectPut","onDisconnectMerge","onDisconnectCancel","reportStats","stats","$da38ac6aa733c404$var$EventEmitter","allowedEvents_","listeners_","trigger","eventType","context","validateEventType_","eventData","getInitialEvent","splice","et","$da38ac6aa733c404$var$OnlineMonitor","online_","currentlyOnline","$da38ac6aa733c404$var$MAX_PATH_DEPTH","$da38ac6aa733c404$var$MAX_PATH_LENGTH_BYTES","$da38ac6aa733c404$var$Path","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","$da38ac6aa733c404$var$newEmptyPath","$da38ac6aa733c404$var$pathGetFront","path","$da38ac6aa733c404$var$pathGetLength","$da38ac6aa733c404$var$pathPopFront","$da38ac6aa733c404$var$pathGetBack","$da38ac6aa733c404$var$pathSlice","begin","$da38ac6aa733c404$var$pathParent","pieces","$da38ac6aa733c404$var$pathChild","childPathObj","childPieces","$da38ac6aa733c404$var$pathIsEmpty","$da38ac6aa733c404$var$newRelativePath","outerPath","innerPath","outer","inner","$da38ac6aa733c404$var$pathEquals","other","$da38ac6aa733c404$var$pathContains","$da38ac6aa733c404$var$ValidationPath","errorPrefix_","parts_","byteLength_","max","$da38ac6aa733c404$var$validationPathCheckValid","validationPath","$da38ac6aa733c404$var$validationPathToErrorString","$da38ac6aa733c404$var$VisibilityMonitor","hidden","visibilityChange","visible_","visible","$da38ac6aa733c404$var$RECONNECT_MIN_DELAY","$da38ac6aa733c404$var$PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","forceTokenRefresh_","invalidAuthTokenCount_","invalidAppCheckTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","getInstance","onVisible_","onOnline_","action","onResponse","curReqNum","r","initConnection_","outstandingGet","_path","q","_queryObject","sendGet_","listen","currentHashFn","tag","queryId","_queryIdentifier","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","status","warnOnListenWarnings_","removeListen_","warnings","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","tryAppCheck","authMethod","requestData","cred","onAuthRevoked_","onAppCheckRevoked_","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","scheduleConnect_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage","onReady","nextConnectionId_","canceled","connection","closeFn","sendRequestFn","interrupt","resume","delta","serverTimeOffset","normalizedPathString","statusCode","explanation","queries","clientName","$da38ac6aa733c404$var$NamedNode","node","$da38ac6aa733c404$var$Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","$da38ac6aa733c404$var$__EMPTY_NODE","$da38ac6aa733c404$var$KeyIndex","__EMPTY_NODE","isDefinedOn","maxPost","makePost","indexValue","$da38ac6aa733c404$var$KEY_INDEX","$da38ac6aa733c404$var$SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","cmp","isEmpty","left","right","getNext","hasNext","peek","$da38ac6aa733c404$var$LLRBNode","color","RED","$da38ac6aa733c404$var$SortedMap","EMPTY_NODE","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","$da38ac6aa733c404$var$NAME_ONLY_COMPARATOR","$da38ac6aa733c404$var$NAME_COMPARATOR","MAX_NODE","$da38ac6aa733c404$var$priorityHashText","priority","$da38ac6aa733c404$var$validatePriorityNode","priorityNode","isLeafNode","getPriority","$da38ac6aa733c404$var$__childrenNodeConstructor","nodeFromJSON","$da38ac6aa733c404$var$LeafNode","value_","priorityNode_","__childrenNodeConstructor","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","getValue","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","$da38ac6aa733c404$var$PRIORITY_INDEX","aPriority","bPriority","indexCmp","$da38ac6aa733c404$var$LOG_2","$da38ac6aa733c404$var$Base12Num","num","current_","mask","bits_","nextBitIsOne","$da38ac6aa733c404$var$buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","namedNode","middle","root","base12","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","buildFrom12Array","$da38ac6aa733c404$var$_defaultIndexMap","$da38ac6aa733c404$var$fallbackObject","$da38ac6aa733c404$var$IndexMap","indexes_","indexSet_","Default","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","sawIndexedValue","iter","Wrap","newIndex","next","indexName","newIndexSet","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","$da38ac6aa733c404$var$EMPTY_NODE","$da38ac6aa733c404$var$ChildrenNode","children_","indexMap_","child","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","INTEGER_REGEXP_","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","$da38ac6aa733c404$var$MAX_NODE","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","defineProperties","MAX","setPriorityMaxNode","$da38ac6aa733c404$var$USE_HINZE","$da38ac6aa733c404$var$nodeFromJSON","json","childData","children","childrenHavePriority","childSet","sortedChildSet","$da38ac6aa733c404$var$setNodeFromJSON","$da38ac6aa733c404$var$PathIndex","indexPath_","extractChild","snap","aChild","bChild","valueNode","$da38ac6aa733c404$var$VALUE_INDEX","$da38ac6aa733c404$var$changeValue","snapshotNode","$da38ac6aa733c404$var$changeChildAdded","$da38ac6aa733c404$var$changeChildRemoved","$da38ac6aa733c404$var$changeChildChanged","oldSnap","$da38ac6aa733c404$var$IndexedFilter","index_","newChild","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","$da38ac6aa733c404$var$RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","startIsInclusive_","startAfterSet_","endIsInclusive_","endBeforeSet_","getStartPost","getEndPost","matches","isWithinStart","isWithinEnd","filtered","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","$da38ac6aa733c404$var$LimitedFilter","withinDirectionalStart","reverse_","withinEndPost","withinStartPost","withinDirectionalEnd","compareRes","rangedFilter_","limit_","getLimit","isViewFromLeft","fullLimitUpdateChild_","childKey","childSnap","changeAccumulator","oldEventCache","newChildNamedNode","windowBoundary","inRange","oldChildSnap","nextChild","getChildAfterChild","compareNext","newEventCache","$da38ac6aa733c404$export$7ba287e361c94330","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasLimit","hasAnchoredLimit","$da38ac6aa733c404$var$queryParamsToRestQueryStringParameters","queryParams","qs","orderBy","startParam","endParam","$da38ac6aa733c404$var$queryParamsGetQueryObject","viewFrom","$da38ac6aa733c404$var$ReadonlyRestClient","listens_","listenId","getListenId_","thisListen","queryStringParameters","restRequest_","xhr","XMLHttpRequest","responseText","$da38ac6aa733c404$var$SnapshotHolder","rootNode_","getNode","updateSnapshot","newSnapshotNode","$da38ac6aa733c404$var$newSparseSnapshotTree","$da38ac6aa733c404$var$sparseSnapshotTreeRemember","sparseSnapshotTree","clear","$da38ac6aa733c404$var$sparseSnapshotTreeForEachTree","prefixPath","tree","$da38ac6aa733c404$var$sparseSnapshotTreeForEachChild","$da38ac6aa733c404$var$StatsListener","collection_","last_","newStats","stat","$da38ac6aa733c404$var$StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","reportedStats","haveStatsToReport","$da38ac6aa733c404$var$OperationType","OperationType","$da38ac6aa733c404$var$newOperationSourceServerTaggedQuery","fromUser","fromServer","tagged","$da38ac6aa733c404$var$AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","$da38ac6aa733c404$var$ListenComplete","LISTEN_COMPLETE","$da38ac6aa733c404$var$Overwrite","OVERWRITE","$da38ac6aa733c404$var$Merge","MERGE","$da38ac6aa733c404$var$CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","$da38ac6aa733c404$var$EventGenerator","query_","$da38ac6aa733c404$var$eventGeneratorGenerateEventsForType","eventGenerator","events","changes","registrations","eventCache","filteredChanges","change","aWrapped","bWrapped","$da38ac6aa733c404$var$eventGeneratorCompareChanges","materializedChange","prevName","$da38ac6aa733c404$var$eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","$da38ac6aa733c404$var$newViewCache","serverCache","$da38ac6aa733c404$var$viewCacheUpdateEventSnap","viewCache","eventSnap","$da38ac6aa733c404$var$viewCacheUpdateServerSnap","serverSnap","$da38ac6aa733c404$var$viewCacheGetCompleteEventSnap","$da38ac6aa733c404$var$viewCacheGetCompleteServerSnap","$da38ac6aa733c404$var$emptyChildrenSingleton","$da38ac6aa733c404$var$ImmutableTree","$da38ac6aa733c404$var$EmptyChildren","childPath","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","$da38ac6aa733c404$var$CompoundWrite","writeTree_","$da38ac6aa733c404$var$compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","$da38ac6aa733c404$var$compoundWriteAddWrites","updates","newWrite","$da38ac6aa733c404$var$compoundWriteRemoveWrite","empty","$da38ac6aa733c404$var$compoundWriteHasCompleteWrite","$da38ac6aa733c404$var$compoundWriteGetCompleteNode","$da38ac6aa733c404$var$compoundWriteGetCompleteChildren","$da38ac6aa733c404$var$compoundWriteChildCompoundWrite","shadowingNode","$da38ac6aa733c404$var$compoundWriteIsEmpty","$da38ac6aa733c404$var$compoundWriteApply","$da38ac6aa733c404$var$applySubtreeWrite","writeTree","priorityWrite","$da38ac6aa733c404$var$writeTreeChildWrites","$da38ac6aa733c404$var$newWriteTreeRef","$da38ac6aa733c404$var$writeTreeRemoveWrite","writeId","allWrites","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","$da38ac6aa733c404$var$writeTreeRecordContainsPath_","visibleWrites","$da38ac6aa733c404$var$writeTreeLayerTree_","$da38ac6aa733c404$var$writeTreeDefaultFilter_","lastWriteId","$da38ac6aa733c404$var$writeTreeResetTree_","writeRecord","writes","treeRoot","writePath","deepNode","$da38ac6aa733c404$var$writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","$da38ac6aa733c404$var$writeTreeRefCalcCompleteEventCache","writeTreeRef","$da38ac6aa733c404$var$writeTreeRefCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","$da38ac6aa733c404$var$writeTreeCalcCompleteEventChildren","$da38ac6aa733c404$var$writeTreeRefCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","$da38ac6aa733c404$var$writeTreeCalcEventCacheAfterServerOverwrite","$da38ac6aa733c404$var$writeTreeRefShadowingWrite","$da38ac6aa733c404$var$writeTreeShadowingWrite","$da38ac6aa733c404$var$writeTreeRefCalcIndexedSlice","completeServerData","toIterate","nodes","$da38ac6aa733c404$var$writeTreeCalcIndexedSlice","$da38ac6aa733c404$var$writeTreeRefCalcCompleteChild","existingServerCache","$da38ac6aa733c404$var$writeTreeCalcCompleteChild","$da38ac6aa733c404$var$writeTreeRefChild","$da38ac6aa733c404$var$ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","$da38ac6aa733c404$var$NO_COMPLETE_CHILD_SOURCE","getCompleteChild","$da38ac6aa733c404$var$WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","$da38ac6aa733c404$var$viewProcessorApplyOperation","viewProcessor","oldViewCache","operation","writesCache","completeCache","accumulator","newViewCache","filterServerNode","$da38ac6aa733c404$var$viewProcessorApplyUserOverwrite","$da38ac6aa733c404$var$viewProcessorApplyServerOverwrite","changedChildren","curViewCache","$da38ac6aa733c404$var$viewProcessorCacheHasChild","$da38ac6aa733c404$var$viewProcessorApplyUserMerge","$da38ac6aa733c404$var$viewProcessorApplyServerMerge","ackUserWrite","serverChildren","$da38ac6aa733c404$var$viewProcessorRevertUserWrite","ackPath","mergePath","serverCachePath","$da38ac6aa733c404$var$viewProcessorAckUserWrite","oldServerNode","$da38ac6aa733c404$var$viewProcessorGenerateEventCacheAfterServerEvent","$da38ac6aa733c404$var$viewProcessorListenComplete","isLeafOrEmpty","oldCompleteSnap","$da38ac6aa733c404$var$viewProcessorMaybeAddValueEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","changedSnap","oldServerSnap","newServerCache","serverFilter","newServerNode","$da38ac6aa733c404$var$viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","$da38ac6aa733c404$var$View","initialViewCache","eventRegistrations_","indexFilter","processor_","$da38ac6aa733c404$var$newViewProcessor","initialServerCache","initialEventCache","eventGenerator_","$da38ac6aa733c404$var$viewGetCompleteServerCache","view","cache","$da38ac6aa733c404$var$viewIsEmpty","$da38ac6aa733c404$var$viewRemoveEventRegistration","eventRegistration","cancelError","cancelEvents","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","$da38ac6aa733c404$var$viewApplyOperation","$da38ac6aa733c404$var$viewGenerateEventsForChanges_","eventRegistrations","moves","$da38ac6aa733c404$var$eventGeneratorGenerateEventsForChanges","referenceConstructor","$da38ac6aa733c404$var$referenceConstructor","$da38ac6aa733c404$var$SyncPoint","views","$da38ac6aa733c404$var$syncPointApplyOperation","syncPoint","optCompleteServerCache","$da38ac6aa733c404$var$syncPointGetView","serverCacheComplete","eventCacheComplete","$da38ac6aa733c404$var$syncPointAddEventRegistration","$da38ac6aa733c404$var$viewAddEventRegistration","initialChanges","$da38ac6aa733c404$var$viewGetInitialEvents","$da38ac6aa733c404$var$syncPointRemoveEventRegistration","removed","hadCompleteView","$da38ac6aa733c404$var$syncPointHasCompleteView","viewQueryId","_repo","$da38ac6aa733c404$var$syncPointGetQueryViews","$da38ac6aa733c404$var$syncPointGetCompleteServerCache","$da38ac6aa733c404$var$syncPointViewForQuery","$da38ac6aa733c404$var$syncPointGetCompleteView","$da38ac6aa733c404$var$syncPointViewExistsForQuery","$da38ac6aa733c404$var$syncTreeNextQueryTag_","$da38ac6aa733c404$var$SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","$da38ac6aa733c404$var$syncTreeApplyUserOverwrite","syncTree","newData","$da38ac6aa733c404$var$writeTreeAddOverwrite","$da38ac6aa733c404$var$syncTreeApplyOperationToSyncPoints_","$da38ac6aa733c404$var$syncTreeAckUserWrite","record","$da38ac6aa733c404$var$writeTreeGetWrite","$da38ac6aa733c404$var$syncTreeApplyServerOverwrite","$da38ac6aa733c404$var$syncTreeRemoveEventRegistration","skipListenerDedup","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","maybeChildSyncPoint","childMap","_key","childViews","$da38ac6aa733c404$var$syncTreeCollectDistinctViewsForSubTree_","newQuery","$da38ac6aa733c404$var$syncTreeCreateListenerForView_","startListening","$da38ac6aa733c404$var$syncTreeQueryForListening_","$da38ac6aa733c404$var$syncTreeTagForQuery","defaultTag","stopListening","queryToRemove","tagToRemove","$da38ac6aa733c404$var$syncTreeMakeQueryKey_","removedQuery","removedQueryKey","removedQueryTag","$da38ac6aa733c404$var$syncTreeRemoveTags_","$da38ac6aa733c404$var$syncTreeApplyTaggedQueryOverwrite","queryKey","$da38ac6aa733c404$var$syncTreeQueryKeyForTag_","$da38ac6aa733c404$var$syncTreeParseQueryKey_","queryPath","$da38ac6aa733c404$var$syncTreeApplyTaggedOperation_","$da38ac6aa733c404$var$syncTreeAddEventRegistration","skipSetupListener","foundAncestorDefaultView","pathToSyncPoint","sp","childSyncPoint","viewAlreadyExists","queriesToStop","childQueries","queryToStop","$da38ac6aa733c404$var$syncTreeSetupListener_","$da38ac6aa733c404$var$syncTreeCalcCompleteEventCache","$da38ac6aa733c404$var$syncTreeApplyOperationHelper_","syncPointTree","$da38ac6aa733c404$var$syncTreeApplyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","$da38ac6aa733c404$var$viewGetServerCache","$da38ac6aa733c404$var$syncTreeApplyTaggedListenComplete","$da38ac6aa733c404$var$syncTreeApplyListenComplete","toUpperCase","$da38ac6aa733c404$var$errorForServerCode","splitIndex","$da38ac6aa733c404$var$ExistingValueProvider","$da38ac6aa733c404$var$DeferredValueProvider","syncTree_","path_","$da38ac6aa733c404$var$generateWithValues","$da38ac6aa733c404$var$resolveDeferredLeafValue","existingVal","serverValues","$da38ac6aa733c404$var$resolveScalarDeferredValue","$da38ac6aa733c404$var$resolveComplexDeferredValue","op","unused","existingNode","$da38ac6aa733c404$var$resolveDeferredValueTree","$da38ac6aa733c404$var$resolveDeferredValue","$da38ac6aa733c404$var$resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","$da38ac6aa733c404$var$Tree","parent","childCount","$da38ac6aa733c404$var$treeSubTree","pathObj","$da38ac6aa733c404$var$treeGetValue","$da38ac6aa733c404$var$treeSetValue","$da38ac6aa733c404$var$treeUpdateParents","$da38ac6aa733c404$var$treeHasChildren","$da38ac6aa733c404$var$treeForEachChild","$da38ac6aa733c404$var$treeForEachDescendant","includeSelf","childrenFirst","$da38ac6aa733c404$var$treeGetPath","childEmpty","$da38ac6aa733c404$var$treeIsEmpty","childExists","$da38ac6aa733c404$var$treeUpdateChild","$da38ac6aa733c404$var$INVALID_KEY_REGEX_","$da38ac6aa733c404$var$INVALID_PATH_REGEX_","$da38ac6aa733c404$var$MAX_LEAF_SIZE_","$da38ac6aa733c404$var$isValidKey","$da38ac6aa733c404$var$isValidPathString","$da38ac6aa733c404$var$validateFirebaseData","errorPrefix","hasDotValue","hasActualChild","last","$da38ac6aa733c404$var$validationPathPop","$da38ac6aa733c404$export$8637b026ace8abb1","argumentName","errorPrefixFxn","$da38ac6aa733c404$var$validateRootPathString","$da38ac6aa733c404$var$validateUrl","parsedUrl","$da38ac6aa733c404$var$isValidRootPathString","$da38ac6aa733c404$var$EventQueue","eventLists_","recursionDepth_","$da38ac6aa733c404$var$eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","$da38ac6aa733c404$var$eventQueueRaiseEventsAtPath","$da38ac6aa733c404$var$eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","$da38ac6aa733c404$var$eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","$da38ac6aa733c404$var$eventListRaise","eventFn","getEventRunner","$da38ac6aa733c404$var$INTERRUPT_REASON","$da38ac6aa733c404$var$MAX_TRANSACTION_RETRIES","$da38ac6aa733c404$var$Repo","forceRestClient_","appCheckProvider_","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","$da38ac6aa733c404$var$repoStart","repo","authOverride","isMerge","$da38ac6aa733c404$var$repoOnDataUpdate","$da38ac6aa733c404$var$repoOnConnectStatus","connectStatus","$da38ac6aa733c404$var$repoUpdateInfo","$da38ac6aa733c404$var$repoOnServerInfoUpdate","statsReporter_","creatorFunction","$da38ac6aa733c404$var$statsManagerGetOrCreateReporter","infoData_","infoSyncTree_","infoEvents","serverSyncTree_","$da38ac6aa733c404$var$repoServerTime","$da38ac6aa733c404$var$repoGenerateServerValues","taggedChildren","raw","changeTree","fromObject","$da38ac6aa733c404$var$syncTreeApplyTaggedQueryMerge","taggedSnap","$da38ac6aa733c404$var$syncTreeApplyServerMerge","$da38ac6aa733c404$var$repoRerunTransactions","$da38ac6aa733c404$var$repoLog","resolvedOnDisconnectTree","resolved","$da38ac6aa733c404$var$repoAbortTransactions","$da38ac6aa733c404$var$repoRunOnDisconnectEvents","$da38ac6aa733c404$var$repoGetNextWriteId","$da38ac6aa733c404$var$repoRemoveEventCallbackForQuery","$da38ac6aa733c404$var$repoInterrupt","$da38ac6aa733c404$var$repoGetLatestState","excludeSets","$da38ac6aa733c404$var$repoSendReadyTransactions","$da38ac6aa733c404$var$repoPruneCompletedTransactionsBelowNode","queue","$da38ac6aa733c404$var$repoBuildTransactionQueue","every","setsToIgnore","txn","currentWriteId","latestState","snapToSend","latestHash","retryCount","currentOutputSnapshotRaw","dataToSend","pathToSend","currentOutputSnapshotResolved","unwatcher","abortReason","$da38ac6aa733c404$var$repoSendTransactionQueue","rootMostTransactionNode","$da38ac6aa733c404$var$repoGetAncestorTransactionNode","txnsToRerun","abortTransaction","currentNode","currentInputSnapshot","newDataNode","oldWriteId","newNodeResolved","applyLocally","$da38ac6aa733c404$var$repoRerunTransactionQueue","transactionNode","transactionQueue","$da38ac6aa733c404$var$repoAggregateTransactionQueuesForNode","order","nodeQueue","to","$da38ac6aa733c404$var$treeForEachAncestor","$da38ac6aa733c404$var$repoAbortTransactionsOnNode","lastSent","$da38ac6aa733c404$var$parseRepoInfo","dataURL","$da38ac6aa733c404$var$parseDatabaseURL","scheme","subdomain","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","$da38ac6aa733c404$var$decodePath","queryString","results","segment","kv","$da38ac6aa733c404$var$decodeQuery","hostWithoutPort","dotInd","$da38ac6aa733c404$var$PUSH_CHARS","lastPushTime","lastRandChars","$da38ac6aa733c404$var$DataEvent","snapshot","ref","getEventType","exportVal","$da38ac6aa733c404$var$CancelEvent","$da38ac6aa733c404$var$CallbackContext","snapshotCallback","cancelCallback","onValue","expDataSnapshot","previousChildName","onCancel","hasCancelCallback","userCallback","$da38ac6aa733c404$export$e79c8d837d2220a8","_orderByCalled","$da38ac6aa733c404$export$35c3a5e7c9d1033c","isEqual","sameRepo","samePath","sameQueryIdentifier","toJSON","$da38ac6aa733c404$var$pathToUrlEncodedString","parentPath","$da38ac6aa733c404$export$80b98bcbc246c942","_node","_index","childRef","$da38ac6aa733c404$export$f9574b70e1d95d9d","exists","hasChildren","$da38ac6aa733c404$export$eff4d24c3ff7876e","_checkNotDeleted","_root","$da38ac6aa733c404$var$ValueEventRegistration","callbackContext","$da38ac6aa733c404$var$ChildEventRegistration","eventToCheck","$da38ac6aa733c404$var$addEventListener","cancelCallbackOrListenOptions","onlyOnce","onceCallback","dataSnapshot","$da38ac6aa733c404$var$repoAddEventCallbackForQuery","$da38ac6aa733c404$export$ad30f661f41f4d90","$da38ac6aa733c404$var$syncPointSetReferenceConstructor","$da38ac6aa733c404$var$syncTreeSetReferenceConstructor","$da38ac6aa733c404$var$FIREBASE_DATABASE_EMULATOR_HOST_VAR","$da38ac6aa733c404$var$repos","$da38ac6aa733c404$var$useRestClient","$da38ac6aa733c404$export$a248c1d2ea757674","authProvider","dbUrl","databaseURL","isEmulator","dbEmulatorHost","authTokenProvider","appRepos","$da38ac6aa733c404$var$repoManagerCreateRepo","$da38ac6aa733c404$export$6feb5ea51a7b0b47","_repoInternal","_instanceStarted","_rootInternal","$da38ac6aa733c404$var$repoManagerDeleteRepo","apiName","simpleListen","echo","onEcho","$da38ac6aa733c404$var$name","$da38ac6aa733c404$var$version","$da38ac6aa733c404$var$registerDatabase","$310237b6a0051c0d$export$8a7957e57f12f09c","emulator","tokenProvider","mockUserToken","$da38ac6aa733c404$var$repoManagerApplyEmulatorSettings","$da38ac6aa733c404$export$87f3cfc4a2e3958d","apiKey","authDomain","$0b89d474933103bc$var$API_BASE_URL","$0b89d474933103bc$export$ca000e230c0caa3e","email","username","userId","roomId","realTimeDataBaseId","messages","init","sessionStorage","currentState","getState","setState","listenToRoom","messagesFromServer","messagesList","newState","cb","setEmailNameAndPassword","nombre","setUserName","setRoomId","pushMessage","fetch","userName","login","signup","newRoom","rtdbId","accessToRoom","subscribe","$f9d9d110dea7aeee$var$toArray","objectOrArray","$f9d9d110dea7aeee$var$log","$f9d9d110dea7aeee$var$MODULE","$f9d9d110dea7aeee$var$NOMODULE","$f9d9d110dea7aeee$var$bundleKeys","$f9d9d110dea7aeee$var$ensureBundle","$f9d9d110dea7aeee$var$ensureRoute","route","$f9d9d110dea7aeee$var$isString","bundle","stringKeys","$f9d9d110dea7aeee$var$isFunction","$f9d9d110dea7aeee$var$isObject","redirect","overriddenProp","$f9d9d110dea7aeee$var$ensureRoutes","routes","$f9d9d110dea7aeee$var$loadScript","head","querySelector","setAttribute","__dynamicImportLoaded","$f9d9d110dea7aeee$var$fireRouterEvent","detail","dispatchEvent","CustomEvent","cancelable","o","$f9d9d110dea7aeee$var$getNotFoundError","pathname","$f9d9d110dea7aeee$var$notFoundResult","$f9d9d110dea7aeee$var$vaadinRouterGlobalClickHandler","defaultPrevented","button","shiftKey","ctrlKey","altKey","metaKey","anchor","composedPath","nodeName","hasAttribute","$f9d9d110dea7aeee$var$getAnchorOrigin","preventDefault","scrollTo","$f9d9d110dea7aeee$var$CLICK","activate","inactivate","$f9d9d110dea7aeee$var$vaadinRouterGlobalPopstateHandler","state","PopStateEvent","inType","initEvent","Boolean","bubbles","Event","$f9d9d110dea7aeee$var$POPSTATE","$f9d9d110dea7aeee$var$pathToRegexp_1","$f9d9d110dea7aeee$var$pathToRegexp","$f9d9d110dea7aeee$var$parse_1","$f9d9d110dea7aeee$var$parse","$f9d9d110dea7aeee$var$compile_1","$f9d9d110dea7aeee$var$tokensToFunction","$f9d9d110dea7aeee$var$tokensToFunction_1","$f9d9d110dea7aeee$var$tokensToRegExp_1","$f9d9d110dea7aeee$var$tokensToRegExp","$f9d9d110dea7aeee$var$DEFAULT_DELIMITER","$f9d9d110dea7aeee$var$DEFAULT_DELIMITERS","$f9d9d110dea7aeee$var$PATH_REGEXP","tokens","defaultDelimiter","delimiter","delimiters","pathEscaped","exec","escaped","prev","capture","group","modifier","partial","repeat","pattern","$f9d9d110dea7aeee$var$escapeGroup","$f9d9d110dea7aeee$var$escapeString","encode","$f9d9d110dea7aeee$var$flags","sensitive","strict","end","endsWith","isEndDelimited","groups","$f9d9d110dea7aeee$var$regexpToRegexp","$f9d9d110dea7aeee$var$arrayToRegexp","$f9d9d110dea7aeee$var$stringToRegexp","$f9d9d110dea7aeee$var$hasOwnProperty","$f9d9d110dea7aeee$var$cache","$f9d9d110dea7aeee$var$decodeParam","err","$f9d9d110dea7aeee$var$matchRoute","ignoreLeadingSlash","parentKeys","parentParams","childMatches","childIndex","routepath","routeToSkip","__children","exact","cacheKey","regexp","pathToRegexp","$f9d9d110dea7aeee$var$matchPath","childRoute","matchedLength","childMatch","$f9d9d110dea7aeee$var$resolveRoute","$f9d9d110dea7aeee$export$8b4c839865b08288","baseUrl","errorHandler","resolveRoute","resolver","__synthetic","getRoutes","setRoutes","newRoutes","addRoutes","removeRoutes","pathnameOrContext","__normalizePathname","nextMatches","currentContext","prevResult","parentRoute","$f9d9d110dea7aeee$var$isChildRoute","chain","item","$f9d9d110dea7aeee$var$updateChainForRoute","resolution","routePath","$f9d9d110dea7aeee$var$generateErrorMessage","base","URL","__effectiveBaseUrl","__createUrl","baseURI","normalizedUrl","$f9d9d110dea7aeee$var$cacheRoutes","routesByName","$f9d9d110dea7aeee$var$getRouteByName","routeName","$f9d9d110dea7aeee$var$getRoutePath","$f9d9d110dea7aeee$var$generateUrls","router","fullPath","rt","toPath","tokensToFunction","stringifyQueryParams","$f9d9d110dea7aeee$var$triggers","$f9d9d110dea7aeee$var$willAnimate","elem","getComputedStyle","getPropertyValue","$f9d9d110dea7aeee$var$waitForAnimation","$f9d9d110dea7aeee$var$animate","className","classList","rect","getBoundingClientRect","bottom","top","removeAttribute","$f9d9d110dea7aeee$var$isResultNotEmpty","$f9d9d110dea7aeee$var$createLocation","redirectFrom","getUrl","userParams","$f9d9d110dea7aeee$var$getPathnameForRouter","$f9d9d110dea7aeee$export$55185c17a0fcbe46","compile","$f9d9d110dea7aeee$var$getMatchedPath","$f9d9d110dea7aeee$var$createRedirect","$f9d9d110dea7aeee$var$runCallbackIfPossible","thisArg","$f9d9d110dea7aeee$var$amend","amendmentFunction","element","amendmentResult","cancel","$f9d9d110dea7aeee$var$removeDomNodes","reduce","outlet","baseElement","baseHref","getAttribute","__resolveRoute","triggers","NavigationTrigger","setTriggers","ready","__lastStartedRenderId","__navigationEventHandler","__onNavigationEvent","setOutlet","__createdByRouter","__addedByRouter","$f9d9d110dea7aeee$var$copyContextWithoutNext","childRoutes","$f9d9d110dea7aeee$var$processNewChildren","commands","__isLatestRender","HTMLElement","race","__ensureOutlet","__outlet","getOutlet","skipRender","__previousContext","__urlForName","render","shouldUpdateHistory","renderId","__renderId","__fullyResolveChain","previousContext","__updateBrowserHistory","__skipAttach","__copyUnchangedElements","__addAppearingContent","animationDone","__animateIfNeeded","__runOnAfterEnterCallbacks","__runOnAfterLeaveCallbacks","__removeDisappearingContent","topOfTheChainContextBeforeRedirects","contextBeforeRedirects","__findComponentContextAfterAllRedirects","contextAfterRedirects","topOfTheChainContextAfterRedirects","isFound","findNextContextIfAny","nextContext","__amendWithOnBeforeCallbacks","$f9d9d110dea7aeee$var$renderElement","__redirect","__redirectCount","stringType","$f9d9d110dea7aeee$var$logValue","contextWithFullChain","__runOnBeforeCallbacks","amendedContext","newContext","previousChain","newChain","prevent","__divergedChainIndex","__isReusableElement","__runOnBeforeLeaveCallbacks","__runOnBeforeEnterCallbacks","chainElement","afterLeaveFunction","beforeEnterFunction","otherElement","localName","redirectData","counter","urlForPath","Node","changeState","history","deepestCommonParent","unchangedElement","__removeAppearingContent","__appearingContent","__disappearingContent","parentElement","elementToAdd","targetContext","currentComponent","onAfterLeave","onAfterEnter","promises","animate","leave","enter","unsubscribe","newTriggers","urlForName","$f9d9d110dea7aeee$var$DEV_MODE_CODE_REGEXP","$f9d9d110dea7aeee$var$FlowClients","Vaadin","Flow","clients","$f9d9d110dea7aeee$var$uncommentAndRun","Function","$f9d9d110dea7aeee$var$runIfDevelopmentMode","developmentMode","$f9d9d110dea7aeee$var$maybeGatherAndSendStats","localStorage","client","productionMode","$f9d9d110dea7aeee$var$isFlowProductionMode","$f9d9d110dea7aeee$var$isDevelopmentMode","is","$cc03fdc316aabe02$var$LoginPage","connectedCallback","go","innerHTML","buttonEl","inputEl","inputIconEl","customElements","define","$56c066c851566a09$var$SignupPage","$b5cd85e475f58272$var$SelectPage","ev","div","usuario","roomid","$d7e18678e1e4572b$var$ChatPage","messagesSectionEl","scrollTop","scrollHeight","addListeners"],"version":3,"file":"index.ce8d4989.js.map"}